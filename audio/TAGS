
alsa-utils-1.0.29/seq/aconnect/aconnect.c,731
static void error_handler(32,827
static void usage(47,1230
#define LIST_INPUT	72,2324
#define LIST_OUTPUT	73,2345
#define perm_ok(75,2368
static int check_permission(77,2460
static void list_each_subs(99,2950
static void list_subscribers(127,3839
typedef void (*action_func_t)action_func_t139,4213
static void do_search_port(141,4330
static void print_port(165,4973
static void print_port_and_subs(180,5466
static void remove_connection(191,5735
static void remove_all_connections(225,7146
	SUBSCRIBE,236,7272
	SUBSCRIBE, UNSUBSCRIBE,236,7272
	SUBSCRIBE, UNSUBSCRIBE, LIST,236,7272
	SUBSCRIBE, UNSUBSCRIBE, LIST, REMOVE_ALL236,7272
static const struct option long_option[long_option239,7318
int main(251,7607

alsa-utils-1.0.29/seq/aseqdump/aseqdump.c,554
static snd_seq_t *seq;seq33,1078
static int port_count;34,1101
static snd_seq_addr_t *ports;ports35,1124
static volatile sig_atomic_t stop 36,1154
static void fatal(40,1245
static void check_mem(52,1447
static void check_snd(59,1558
static void init_seq(65,1688
static void parse_ports(79,2021
static void create_port(107,2699
static void connect_ports(119,2971
static void dump_event(131,3255
static void list_ports(300,9029
static void help(331,10014
static void version(342,10320
static void sighandler(347,10400
int main(352,10448

alsa-utils-1.0.29/seq/aplaymidi/arecordmidi.c,2352
#define BUFFER_SIZE 35,1128
struct buffer 38,1216
	struct buffer *next;next39,1232
	unsigned char buf[buf40,1254
struct smf_track 43,1291
	int size;44,1310
	int cur_buf_size;45,1349
	struct buffer *cur_buf;cur_buf46,1391
	snd_seq_tick_time_t last_tick;47,1416
	unsigned char last_command;48,1467
	int used;49,1526
	struct buffer first_buf;50,1575
#define TRACKS_PER_PORT 54,1654
#define METRONOME_CHANNEL 58,1743
#define METRONOME_STRONG_NOTE 59,1771
#define METRONOME_WEAK_NOTE 60,1804
#define METRONOME_VELOCITY 61,1835
#define METRONOME_PROGRAM 62,1866
static snd_seq_t *seq;seq64,1895
static int client;65,1918
static int port_count;66,1937
static snd_seq_addr_t *ports;ports67,1960
static int queue;68,1990
static int smpte_timing 69,2008
static int beats 70,2037
static int frames;71,2061
static int ticks 72,2080
static FILE *file;file73,2102
static int channel_split;74,2121
static int num_tracks;75,2147
static struct smf_track *tracks;tracks76,2170
static volatile sig_atomic_t stop 77,2203
static int use_metronome 78,2242
static snd_seq_addr_t metronome_port;79,2272
static int metronome_weak_note 80,2310
static int metronome_strong_note 81,2364
static int metronome_velocity 82,2422
static int metronome_program 83,2474
static int metronome_channel 84,2524
static int ts_num 85,2574
static int ts_div 86,2629
static int ts_dd 87,2686
static void fatal(91,2812
static void check_mem(103,3014
static void check_snd(110,3125
static void init_seq(116,3255
static void parse_ports(134,3695
static void init_metronome(163,4413
static void time_signature(174,4663
static void metronome_note(194,5049
static void metronome_echo(205,5389
static void metronome_pattern(216,5685
static void metronome_set_program(230,5974
static void init_tracks(241,6236
static void create_queue(258,6674
static void create_ports(304,7939
static void connect_ports(352,9422
static void add_byte(373,10054
static void var_value(389,10522
static void delta_time(403,10923
static void command(413,11201
static void record_port_numbers(421,11411
static void record_event(437,11720
static void finish_tracks(576,16294
static void write_file(602,16966
static void list_ports(643,18056
static void help(680,19287
static void version(697,19998
static void sighandler(702,20095
int main(707,20143

alsa-utils-1.0.29/seq/aplaymidi/aplaymidi.c,1780
#define MIDI_BYTES_PER_SEC 39,1331
struct event 45,1510
	struct event *next;next46,1525
	unsigned char type;48,1566
	unsigned char port;49,1612
	unsigned int tick;50,1651
		unsigned char d[d52,1680
		int tempo;53,1731
		unsigned int length;54,1744
	} data;55,1794
	unsigned char sysex[sysex56,1803
struct track 59,1832
	struct event *first_event;first_event60,1847
	int end_tick;61,1914
	struct event *current_event;current_event63,1959
static snd_seq_t *seq;seq66,2030
static int client;67,2053
static int port_count;68,2072
static snd_seq_addr_t *ports;ports69,2095
static int queue;70,2125
static int end_delay 71,2143
static const char *file_name;file_name72,2169
static FILE *file;file73,2199
static int file_offset;74,2218
static int num_tracks;75,2278
static struct track *tracks;tracks76,2301
static int smpte_timing;77,2330
static void errormsg(80,2396
static void fatal(91,2591
static void check_mem(103,2793
static void check_snd(110,2904
static void init_seq(116,3034
static void parse_ports(134,3497
static void create_source_port(162,4175
static void create_queue(184,4741
static void connect_ports(191,4917
static int read_byte(210,5502
static int read_32_le(217,5613
static int read_id(228,5837
#define MAKE_ID(232,5888
static int read_int(235,6015
static int read_var(249,6226
static struct event *new_event(new_event273,6637
static void skip(292,7031
static int read_track(299,7152
static int read_smf(452,10499
static int read_riff(558,13340
static void cleanup_file_data(593,14086
static void handle_big_sysex(611,14370
static void play_midi(642,15256
static void play_file(774,19051
static void list_ports(811,19611
static void usage(846,20747
static void version(858,21148
int main(863,21229

alsa-utils-1.0.29/seq/aseqnet/aseqnet.c,1492
#define DEFAULT_PORT	52,1337
static char *readbuf;readbuf57,1394
static int max_rdlen;58,1416
static char *writebuf;writebuf59,1438
static int cur_wrlen,60,1461
static int cur_wrlen, max_wrlen;60,1461
#define MAX_BUF_EVENTS	62,1495
#define MAX_CONNECTION	63,1522
static snd_seq_t *handle;handle65,1549
static struct pollfd *seqifds seqifds66,1575
static struct pollfd *seqofds seqofds67,1613
static struct pollfd *pollfds pollfds68,1651
static int seqifds_count 69,1689
static int seqofds_count 70,1719
static int pollfds_count 71,1749
static int sockfd,72,1779
static int sockfd, netfd[netfd72,1779
static int max_connection;73,1855
static int cur_connected;74,1882
static int seq_port;75,1908
static int server_mode;77,1930
static int verbose 78,1954
static int info 79,1978
static const struct option long_option[long_option86,2025
int main(96,2250
static void usage(162,3217
static void init_buf(181,3908
static void init_pollfds(199,4335
static void close_files(209,4558
static void init_seq(226,4809
static int get_port(304,6924
static void sigterm_exit(318,7178
static void init_server(328,7280
static void start_connection(366,8009
static void init_client(395,8566
static void do_loop(430,9359
static void flush_writebuf(489,10653
static char *get_writebuf(get_writebuf504,10885
static void print_event(514,11053
#define EVENT_PACKET_SIZE	536,11711
static int copy_local_to_remote(541,11789
static int copy_remote_to_local(574,12547

alsa-utils-1.0.29/aplay/formats.h,2266
#define FORMATS_H	2,18
#define VOC_MAGIC_STRING	9,117
#define VOC_ACTUAL_VERSION	10,168
#define VOC_SAMPLESIZE	11,202
#define VOC_MODE_MONO	13,229
#define VOC_MODE_STEREO	14,254
#define VOC_DATALEN(16,282
typedef struct voc_header 20,456
	u_char magic[magic21,484
	u_short headerlen;22,530
	u_short version;23,585
	u_short coded_ver;24,626
} VocHeader;25,667
typedef struct voc_blocktype 27,681
	u_char type;28,712
	u_char datalen;29,726
	u_char datalen_m;30,762
	u_char datalen_h;31,799
} VocBlockType;32,836
typedef struct voc_voice_data 34,853
	u_char tc;35,885
	u_char pack;36,897
} VocVoiceData;37,911
typedef struct voc_ext_block 39,928
	u_short tc;40,959
	u_char pack;41,972
	u_char mode;42,986
} VocExtBlock;43,1000
#define COMPOSE_ID(48,1097
#define LE_SHORT(49,1166
#define LE_INT(50,1191
#define BE_SHORT(51,1214
#define BE_INT(52,1247
#define COMPOSE_ID(54,1313
#define LE_SHORT(55,1382
#define LE_INT(56,1415
#define BE_SHORT(57,1446
#define BE_INT(58,1471
#define TO_CPU_SHORT(64,1594
#define TO_CPU_INT(66,1660
#define WAV_RIFF	69,1721
#define WAV_RIFX	70,1767
#define WAV_WAVE	71,1813
#define WAV_FMT	72,1859
#define WAV_DATA	73,1905
#define WAV_FMT_PCM 76,2013
#define WAV_FMT_IEEE_FLOAT 77,2052
#define WAV_FMT_DOLBY_AC3_SPDIF 78,2091
#define WAV_FMT_EXTENSIBLE 79,2130
#define WAV_GUID_TAG	82,2212
	u_int magic;89,2488
	u_int length;90,2516
	u_int type;91,2546
} WaveHeader;92,2573
	u_short format;95,2605
	u_short channels;96,2643
	u_int sample_fq;97,2662
	u_int byte_p_sec;98,2706
	u_short byte_p_spl;99,2725
	u_short bit_p_spl;100,2777
} WaveFmtBody;101,2819
	WaveFmtBody format;104,2852
	u_short ext_size;105,2873
	u_short bit_p_spl;106,2892
	u_int channel_mask;107,2912
	u_short guid_format;108,2933
	u_char guid_tag[guid_tag109,2971
} WaveFmtExtensibleBody;110,3012
	u_int type;113,3055
	u_int length;114,3082
} WaveChunkHeader;115,3116
#define AU_MAGIC	119,3176
#define AU_FMT_ULAW	121,3223
#define AU_FMT_LIN8	122,3246
#define AU_FMT_LIN16	123,3269
typedef struct au_header 125,3294
	u_int magic;126,3321
	u_int hdr_size;127,3349
	u_int data_size;128,3397
	u_int encoding;129,3434
	u_int sample_rate;130,3477
	u_int channels;131,3515
} AuHeader;132,3567

alsa-utils-1.0.29/aplay/aplay.c,5455
#define _GNU_SOURCE 28,997
#define _LARGEFILE64_SOURCE57,1585
#define CONFIG_SUPPORT_CHMAP	61,1650
#define LLONG_MAX 67,1733
#define le16toh(73,1828
#define be16toh(74,1864
#define le32toh(75,1900
#define be32toh(76,1936
#define DEFAULT_FORMAT	79,1980
#define DEFAULT_SPEED 80,2022
#define FORMAT_DEFAULT	82,2052
#define FORMAT_RAW	83,2079
#define FORMAT_VOC	84,2101
#define FORMAT_WAVE	85,2123
#define FORMAT_AU	86,2146
	VUMETER_NONE,97,2590
	VUMETER_MONO,98,2605
	VUMETER_STEREO99,2620
static char *command;command102,2640
static snd_pcm_t *handle;handle103,2662
	snd_pcm_format_t format;105,2704
	unsigned int channels;106,2730
	unsigned int rate;107,2754
} hwparams,108,2774
} hwparams, rhwparams;108,2774
static int timelimit 109,2797
static int quiet_mode 110,2823
static int file_type 111,2850
static int open_mode 112,2889
static snd_pcm_stream_t stream 113,2915
static int mmap_flag 114,2973
static int interleaved 115,2999
static int nonblock 116,3027
static int in_aborting 117,3052
static u_char *audiobuf audiobuf118,3080
static snd_pcm_uframes_t chunk_size 119,3112
static unsigned period_time 120,3153
static unsigned buffer_time 121,3186
static snd_pcm_uframes_t period_frames 122,3219
static snd_pcm_uframes_t buffer_frames 123,3263
static int avail_min 124,3307
static int start_delay 125,3334
static int stop_delay 126,3362
static int monotonic 127,3389
static int interactive 128,3415
static int can_pause 129,3443
static int fatal_errors 130,3469
static int verbose 131,3498
static int vumeter 132,3522
static int buffer_pos 133,3557
static size_t bits_per_sample,134,3584
static size_t bits_per_sample, bits_per_frame;134,3584
static size_t chunk_bytes;135,3631
static int test_position 136,3658
static int test_coef 137,3688
static int test_nowait 138,3714
static snd_output_t *log;log139,3742
static long long max_file_size 140,3768
static int max_file_time 141,3804
static int use_strftime 142,3834
volatile static int recycle_capture_file 143,3863
static long term_c_lflag 144,3909
static int dump_hw_params 145,3940
static int fd 147,3972
static off64_t pbrec_count 148,3992
static int vocmajor,149,4041
static int vocmajor, vocminor;149,4041
static char *pidfile_name pidfile_name151,4073
FILE *pidf pidf152,4107
static int pidfile_written 153,4126
static snd_pcm_chmap_t *channel_map channel_map156,4187
static unsigned int *hw_map hw_map157,4255
static const struct fmt_capture 176,4797
	void (*start)start177,4831
	void (*end)end178,4870
	char *what;what179,4893
	long long max_filesize;180,4906
} fmt_rec_table[fmt_rec_table181,4931
#define error(190,5278
#define error(196,5445
static void usage(203,5614
static void device_list(264,8671
static void pcm_list(334,10746
static void version(374,11607
static void prg_exit(382,11780
static void signal_handler(392,11930
static void signal_handler_recycle 413,12362
	OPT_VERSION 420,12502
	OPT_PERIOD_SIZE,421,12520
	OPT_BUFFER_SIZE,422,12538
	OPT_DISABLE_RESAMPLE,423,12556
	OPT_DISABLE_CHANNELS,424,12579
	OPT_DISABLE_FORMAT,425,12602
	OPT_DISABLE_SOFTVOL,426,12623
	OPT_TEST_POSITION,427,12645
	OPT_TEST_COEF,428,12665
	OPT_TEST_NOWAIT,429,12681
	OPT_MAX_FILE_TIME,430,12699
	OPT_PROCESS_ID_FILE,431,12719
	OPT_USE_STRFTIME,432,12741
	OPT_DUMP_HWPARAMS,433,12760
	OPT_FATAL_ERRORS,434,12780
int main(437,12803
static ssize_t safe_read(822,21927
static int test_vocfile(842,22376
static size_t test_wavefile_read(860,22834
#define check_wavefile_space(871,23165
static ssize_t test_wavefile(885,23557
static int test_au(1075,29390
static void show_available_sample_formats(1119,30770
static int setup_chmap(1131,31132
#define setup_chmap(1195,32582
static void set_params(1198,32614
static void init_stdin(1389,39024
static void done_stdin(1411,39528
static void do_pause(1424,39779
static void check_stdin(1450,40316
#define	timersub(1471,40836
#define	timermsub(1483,41110
static void xrun(1495,41395
static void suspend(1565,43644
static void print_vu_meter_mono(1585,44174
static void print_vu_meter_stereo(1607,44721
static void print_vu_meter(1645,45556
static void compute_max_peak(1654,45764
static void do_test_position(1796,48846
static u_char *remap_data(remap_data1858,50588
static u_char **remap_datav(remap_datav1894,51296
#define remap_data(1914,51653
#define remap_datav(1915,51693
static ssize_t pcm_write(1922,51768
static ssize_t pcm_writev(1961,52715
static ssize_t pcm_read(2014,54042
static ssize_t pcm_readv(2053,54855
static ssize_t voc_pcm_write(2102,55938
static void voc_write_silence(2124,56422
static void voc_pcm_flush(2148,56936
static void voc_play(2163,57382
#define COUNT(2175,57634
#define COUNT1(2176,57693
static void init_raw_data(2387,63311
static off64_t calc_count(2393,63422
static void begin_voc(2407,63726
static void begin_wave(2458,65185
static void begin_au(2530,67118
static void end_voc(2560,67875
static void end_wave(2588,68613
static void end_au(2610,69281
static void header(2623,69632
static void playback_go(2646,70307
static void playback(2702,71420
size_t mystrftime(2774,73134
static int new_capture_file(2827,74366
int create_path(2893,75778
static int safe_open(2919,76294
static void capture(2933,76554
static void playbackv_go(3041,79270
static void capturev_go(3093,80428
static void playbackv(3130,81267
static void capturev(3183,82551

alsa-utils-1.0.29/include/version.h,159
#define SND_UTIL_MAJOR	5,22
#define SND_UTIL_MINOR	6,48
#define SND_UTIL_SUBMINOR	7,74
#define SND_UTIL_VERSION	8,103
#define SND_UTIL_VERSION_STR	11,205

alsa-utils-1.0.29/include/aconfig.h,715
#define DATADIR 5,189
#define HAVE_ALSA_MIXER_H 15,550
#define HAVE_ALSA_PCM_H 18,639
#define HAVE_ALSA_RAWMIDI_H 21,730
#define HAVE_ALSA_SEQ_H 24,821
#define HAVE_ALSA_USE_CASE_H 27,913
#define HAVE_CLOCK_GETTIME 38,1274
#define HAVE_LIBASOUND 60,1909
#define HAVE_LIBRT 63,1952
#define PACKAGE 99,2956
#define PACKAGE_BUGREPORT 102,3065
#define PACKAGE_NAME 105,3142
#define PACKAGE_STRING 108,3236
#define PACKAGE_TARNAME 111,3339
#define PACKAGE_URL 114,3425
#define PACKAGE_VERSION 117,3494
#define SOUNDSDIR 120,3567
#define STDC_HEADERS 123,3702
#define TIME_WITH_SYS_TIME 126,3802
#define VERSION 129,3856
# define _DARWIN_USE_64_BIT_INODE 133,3967
#define _FILE_OFFSET_BITS 137,4083

alsa-utils-1.0.29/include/gettext.h,240
#define __MY_GETTEXT_H2,23
#define ENABLE_NLS_TEST 5,66
#define ENABLE_NLS_TEST 7,117
# define gettext(13,208
# define textdomain(14,240
# define bindtextdomain(15,268
#define _(18,313
#define gettext_noop(19,346
#define N_(20,380

alsa-utils-1.0.29/include/gettext_curses.h,24
#define USES_CURSES1,0

alsa-utils-1.0.29/speaker-test/pink.h,293
#define PINK_MAX_RANDOM_ROWS 1,0
#define PINK_RANDOM_BITS 2,36
#define PINK_RANDOM_SHIFT 3,72
  long      pink_rows[pink_rows7,157
  long      pink_running_sum;8,202
  int       pink_index;9,280
  int       pink_index_mask;10,342
  float     pink_scalar;11,420
} pink_noise_t;12,500

alsa-utils-1.0.29/speaker-test/speaker-test.c,3407
#define ALSA_PCM_NEW_HW_PARAMS_API50,1668
#define ALSA_PCM_NEW_SW_PARAMS_API51,1703
#define CONFIG_SUPPORT_CHMAP	65,1963
  TEST_PINK_NOISE 69,2009
  TEST_SINE,70,2032
  TEST_WAV,71,2045
  TEST_PATTERN,72,2057
#define MAX_CHANNELS	75,2077
#define COMPOSE_ID(78,2138
#define LE_SHORT(79,2207
#define LE_INT(80,2232
#define BE_SHORT(81,2255
#define BE_INT(82,2288
#define COMPOSE_ID(84,2344
#define LE_SHORT(85,2413
#define LE_INT(86,2446
#define BE_SHORT(87,2477
#define BE_INT(88,2502
#define ARRAY_SIZE(91,2533
static char              *device device93,2586
static snd_pcm_format_t   format 94,2665
static unsigned int       rate 95,2745
static unsigned int       channels 96,2822
static unsigned int       speaker 97,2901
static unsigned int       buffer_time 98,2980
static unsigned int       period_time 99,3066
static unsigned int       nperiods 100,3145
static double             freq 101,3229
static int                test_type 102,3327
static pink_noise_t pink;103,3429
static snd_pcm_uframes_t  buffer_size;104,3455
static snd_pcm_uframes_t  period_size;105,3494
static const char *given_test_wav_file given_test_wav_file106,3533
static char *wav_file_dir wav_file_dir107,3580
static int debug 108,3619
static int force_frequency 109,3641
static int in_aborting 110,3673
static snd_pcm_t *pcm_handle pcm_handle111,3701
static snd_pcm_chmap_t *channel_map;channel_map114,3767
static int channel_map_set;115,3804
static int *ordered_channels;ordered_channels116,3832
static const char *const channel_name[channel_name119,3870
static const int	channels4[channels4138,4380
static const int	channels6[channels6144,4508
static const int	channels8[channels8152,4682
static const int channel_order[channel_order165,4980
static int chpos_cmp(200,5867
static int *order_channels(order_channels224,6592
static int get_speaker_channel(244,7067
static const char *get_channel_name(get_channel_name268,7481
static const int	supported_formats[supported_formats281,7791
static void generate_sine(291,7989
static void generate_pink_noise(379,10465
static void generate_pattern(445,12189
static int set_hwparams(507,13669
static int set_swparams(623,17899
static int config_chmap(658,19021
static int xrun_recovery(691,19731
static const char *wav_file[wav_file719,20390
static int wav_file_size[wav_file_size720,20433
struct wave_header 722,20474
    uint32_t magic;724,20506
    uint32_t length;725,20526
    uint32_t type;726,20547
  } hdr;727,20566
    uint32_t type;729,20586
    uint32_t length;730,20605
  } chunk1;731,20626
    uint16_t format;733,20649
    uint16_t channels;734,20670
    uint32_t rate;735,20693
    uint32_t bytes_per_sec;736,20712
    uint16_t sample_size;737,20740
    uint16_t sample_bits;738,20766
  } body;739,20792
    uint32_t type;741,20813
    uint32_t length;742,20832
  } chunk;743,20853
#define WAV_RIFF	746,20868
#define WAV_WAVE	747,20914
#define WAV_FMT	748,20960
#define WAV_DATA	749,21006
#define WAV_PCM_CODE	750,21052
static const char *search_for_file(search_for_file752,21077
static int check_wav_file(763,21327
static int setup_wav_file(820,23040
static int read_wav(855,23895
static int write_buffer(903,24872
static int write_loop(929,25449
static int prg_exit(974,26654
static void signal_handler(982,26767
static void help(998,27019
int main(1031,28143

alsa-utils-1.0.29/speaker-test/pink.c,130
static unsigned long generate_random_number(33,932
void initialize_pink_noise(41,1217
float generate_pink_noise_sample(56,1734

alsa-utils-1.0.29/alsamixer/proc_files.c,475
static struct widget proc_widget;32,1011
static ITEM *items[items33,1045
static unsigned int items_count;34,1068
static MENU *menu;menu35,1101
static void on_menu_key(37,1121
		int key;40,1179
		int request;41,1190
static void on_handle_key(60,1592
static bool create(82,1886
static void on_window_size_changed(110,2563
static void on_close(118,2673
static void add_item(129,2847
static struct widget proc_widget 140,3116
void create_proc_files_list(146,3255

alsa-utils-1.0.29/alsamixer/die.h,80
#define DIE_H_INCLUDED2,23
void fatal_error(4,47
void fatal_alsa_error(5,112

alsa-utils-1.0.29/alsamixer/mixer_controls.h,803
#define MIXER_CONTROLS_H_INCLUDED2,34
struct control 6,98
	snd_mixer_elem_t *elem;elem7,115
	char *name;name8,140
	unsigned int flags;9,153
#define TYPE_PVOLUME	10,174
#define TYPE_CVOLUME	11,205
#define TYPE_PSWITCH	12,236
#define TYPE_CSWITCH	13,267
#define TYPE_ENUM	14,298
#define HAS_VOLUME_0	15,326
#define HAS_VOLUME_1	16,357
#define HAS_PSWITCH_0	17,389
#define HAS_PSWITCH_1	18,422
#define HAS_CSWITCH_0	19,455
#define HAS_CSWITCH_1	20,488
#define IS_MULTICH	21,521
#define IS_ACTIVE	22,551
#define MULTICH_MASK	23,580
	snd_mixer_selem_channel_id_t volume_channels[volume_channels24,611
	snd_mixer_selem_channel_id_t pswitch_channels[pswitch_channels25,661
	snd_mixer_selem_channel_id_t cswitch_channels[cswitch_channels26,712
	unsigned int enum_channel_bits;27,763

alsa-utils-1.0.29/alsamixer/mixer_controls.c,846
struct control *controls;controls33,1133
unsigned int controls_count;34,1159
static const snd_mixer_selem_channel_id_t supported_channels[supported_channels36,1189
#define LAST_SUPPORTED_CHANNEL 46,1480
static const snd_mixer_selem_channel_id_t control_channels[control_channels48,1538
bool are_there_any_controls(56,1896
static bool has_more_than_front_capture_channels(81,2691
static bool has_any_control_channel(91,2944
static bool has_merged_cswitch(99,3268
static unsigned int get_playback_controls_count(125,4168
static unsigned int get_capture_controls_count(147,4901
static unsigned int get_controls_count_for_elem(170,5694
static void create_name(200,6474
static unsigned int create_controls_for_elem(215,6869
static void search_for_focus_control(460,15459
void free_controls(483,15960
void create_controls(494,16128

alsa-utils-1.0.29/alsamixer/utils.c,153
#define _XOPEN_SOURCE19,749
const char *mbs_at_width(mbs_at_width50,1935
unsigned int get_mbs_width(88,2653
unsigned int get_max_mbs_width(100,2845

alsa-utils-1.0.29/alsamixer/widget.h,429
#define WIDGET_H_INCLUDED2,26
#define WIDGET_BORDER	6,73
#define WIDGET_SUBWINDOW	7,100
#define WIDGET_CURSOR_VISIBLE	8,129
#define SCREEN_CENTER	10,164
struct widget 12,190
	WINDOW *window;window13,206
	WINDOW *subwindow;subwindow14,223
	PANEL *panel;panel15,283
	int cursor_visibility;16,298
	void (*handle_key)handle_key18,323
	void (*window_size_changed)window_size_changed19,353
	void (*close)close20,389

alsa-utils-1.0.29/alsamixer/textbox.h,32
#define TEXTBOX_H_INCLUDED2,27

alsa-utils-1.0.29/alsamixer/mem.h,61
#define MEM_H_INCLUDED2,23
char *casprintf(casprintf9,180

alsa-utils-1.0.29/alsamixer/device_name.c,498
static struct widget form_widget;34,1065
static FIELD *fields[fields35,1099
static FORM *form;form36,1124
static char *dup_current_name(dup_current_name38,1144
static void on_key_enter(55,1516
static void on_form_key(69,1703
		int key;72,1761
		int request;73,1772
static void on_handle_key(96,2246
static bool create(114,2468
static void on_window_size_changed(134,2978
static void on_close(153,3444
static struct widget form_widget 162,3590
void create_device_name_form(168,3729

alsa-utils-1.0.29/alsamixer/textbox.c,1026
#define MAX_FILE_SIZE 36,1166
void show_error(41,1310
void show_alsa_error(55,1546
static char *read_file(read_file69,1795
void show_textfile(101,2533
void show_text(133,3209
static struct widget text_widget;140,3421
static char *title;title141,3455
static int widget_attrs;142,3475
static char **text_lines;text_lines143,3500
static unsigned int text_lines_count;144,3526
static int max_line_width;145,3564
static int text_box_y;146,3591
static int text_box_x;147,3614
static int max_scroll_y;148,3637
static int max_scroll_x;149,3662
static int current_top;150,3687
static int current_left;151,3711
static void update_text_lines(153,3737
static void update_y_scroll_bar(184,4538
static void update_x_scroll_bar(202,4988
static void move_x(220,5453
static void move_y(236,5714
static void on_handle_key(252,5964
static bool create(321,6861
static void on_window_size_changed(359,7817
static void on_close(364,7874
static struct widget text_widget 374,8034
static void create_text_box(380,8173

alsa-utils-1.0.29/alsamixer/colors.c,670
int attr_mixer_frame;25,925
int attr_mixer_text;26,947
int attr_mixer_active;27,968
int attr_ctl_frame;28,991
int attr_ctl_mute;29,1011
int attr_ctl_nomute;30,1030
int attr_ctl_capture;31,1051
int attr_ctl_nocapture;32,1073
int attr_ctl_label;33,1097
int attr_ctl_label_focus;34,1117
int attr_ctl_mark_focus;35,1143
int attr_ctl_bar_lo;36,1168
int attr_ctl_bar_mi;38,1216
int attr_ctl_bar_hi;39,1237
int attr_ctl_inactive;41,1265
int attr_ctl_label_inactive;42,1288
int attr_errormsg;43,1317
int attr_infomsg;44,1336
int attr_textbox;45,1354
int attr_textfield;46,1372
int attr_menu;47,1392
int attr_menu_selected;48,1407
void init_colors(50,1432

alsa-utils-1.0.29/alsamixer/volume_mapping.h,39
#define VOLUME_MAPPING_H_INCLUDED2,34

alsa-utils-1.0.29/alsamixer/proc_files.h,35
#define PROC_FILES_H_INCLUDED2,30

alsa-utils-1.0.29/alsamixer/volume_mapping.c,569
#define _ISOC99_SOURCE 33,1533
#define _GNU_SOURCE 34,1570
#define exp10(42,1768
#define MAX_LINEAR_DB_SCALE	45,1831
static inline bool use_linear_dB_scale(47,1863
static long lrint_dir(52,1983
enum ctl_dir 62,2138
enum ctl_dir { PLAYBACK,62,2138
enum ctl_dir { PLAYBACK, CAPTURE 62,2138
static double get_normalized_volume(89,3174
static int set_normalized_volume(126,4043
double get_normalized_playback_volume(159,4915
double get_normalized_capture_volume(165,5086
int set_normalized_playback_volume(171,5254
int set_normalized_capture_volume(179,5470

alsa-utils-1.0.29/alsamixer/card_select.c,790
struct card 35,1091
	struct card *next;next36,1105
	char *indexstr;indexstr37,1125
	char *name;name38,1142
	char *device_name;device_name39,1155
static struct widget list_widget;42,1179
static struct card first_card;43,1213
static ITEM **items;items44,1244
static MENU *menu;menu45,1265
static ITEM *initial_item;initial_item46,1284
static void on_key_enter(48,1312
static void on_menu_key(62,1584
		int key;65,1642
		int request;66,1653
static void on_handle_key(85,2055
static bool create(105,2299
static void on_window_size_changed(133,2975
static void on_close(141,3085
void close_card_select_list(161,3468
static struct widget list_widget 166,3520
static int get_cards(172,3659
static void create_list_items(222,4782
void create_card_select_list(246,5335

alsa-utils-1.0.29/alsamixer/mixer_display.c,1256
#define _C99_SOURCE 20,821
enum align 38,1216
	ALIGN_LEFT,39,1229
	ALIGN_RIGHT,40,1242
	ALIGN_CENTER,41,1256
static bool screen_too_small;44,1275
static bool has_info_items;45,1305
static int info_items_left;47,1334
static int info_items_width;48,1362
static int visible_controls;50,1392
static int first_visible_control_index;51,1421
static int first_control_x;52,1461
static int control_width;53,1489
static int control_name_width;54,1515
static int base_y;56,1547
static int volume_height;57,1566
static int cswitch_y;58,1592
static int values_y;59,1614
static int name_y;60,1635
static int channel_name_y;61,1654
static void display_string_in_field(63,1682
void init_mixer_layout(95,2478
void display_card_info(143,3822
void display_view_mode(189,4934
static char *format_gain(format_gain229,6037
static void display_focus_item_info(237,6188
static void clear_controls_display(321,9278
static void center_string(330,9491
static void display_unplugged(337,9679
static void display_no_controls(367,10845
static void display_string_centered_in_control(387,11416
static void display_control(396,11675
static void display_scroll_indicators(616,19588
void display_controls(635,20119
void compute_controls_layout(662,20941

alsa-utils-1.0.29/alsamixer/utils.h,55
#define UTILS_H_INCLUDED2,25
#define ARRAY_SIZE(4,51

alsa-utils-1.0.29/alsamixer/mixer_widget.c,1569
snd_mixer_t *mixer;mixer41,1299
char *mixer_device_name;mixer_device_name42,1319
bool unplugged;43,1344
struct widget mixer_widget;45,1361
enum view_mode view_mode;47,1390
int focus_control_index;49,1417
snd_mixer_selem_id_t *current_selem_id;current_selem_id50,1442
unsigned int current_control_flags;51,1482
bool control_values_changed;53,1519
bool controls_changed;54,1548
enum channel_mask 56,1572
	LEFT 57,1592
	RIGHT 58,1603
static int elem_callback(61,1619
static int mixer_callback(76,1926
void create_mixer_object(85,2151
static void set_view_mode(109,2762
static void close_hctl(115,2847
static void check_unplugged(125,3029
void close_mixer_device(145,3444
bool select_card_by_name(154,3564
static void show_help(187,4173
void refocus_control(229,5419
static struct control *get_focus_control(get_focus_control239,5664
static void change_enum_to_percent(250,5978
static void change_enum_relative(278,6654
static void change_volume_to_percent(304,7287
static double clamp_volume(320,7852
static void change_volume_relative(329,7953
static void change_control_to_percent(360,9004
static void change_control_relative(374,9360
static void toggle_switches(388,9710
static void toggle_mute(433,11072
static void toggle_capture(438,11166
static void balance_volumes(443,11263
static void on_handle_key(470,12317
static void create(614,14793
static void on_window_size_changed(629,15253
static void on_close(634,15310
void mixer_shutdown(639,15371
struct widget mixer_widget 648,15526
void create_mixer_widget(654,15659

alsa-utils-1.0.29/alsamixer/mainloop.c,190
static WINDOW *curses_initialized;curses_initialized35,1059
static void black_hole_error_handler(37,1095
void initialize_curses(43,1236
void app_shutdown(56,1524
void mainloop(67,1653

alsa-utils-1.0.29/alsamixer/cli.c,174
static int use_color 31,1072
static struct snd_mixer_selem_regopt selem_regopt 32,1098
static void show_help(38,1228
static void parse_options(51,1742
int main(116,3458

alsa-utils-1.0.29/alsamixer/mainloop.h,33
#define MAINLOOP_H_INCLUDED2,28

alsa-utils-1.0.29/alsamixer/widget.c,317
int screen_lines;25,866
int screen_cols;26,884
static int cursor_visibility 28,902
static void widget_handle_key(30,938
static void update_cursor_visibility(34,982
void widget_init(46,1274
void widget_free(97,2623
struct widget *get_active_widget(get_active_widget115,2938
void window_size_changed(126,3118

alsa-utils-1.0.29/alsamixer/device_name.h,41
#define DEVICE_NAME_FORM_H_INCLUDED2,36

alsa-utils-1.0.29/alsamixer/card_select.h,36
#define CARD_SELECT_H_INCLUDED2,31

alsa-utils-1.0.29/alsamixer/die.c,56
void fatal_error(27,893
void fatal_alsa_error(34,1001

alsa-utils-1.0.29/alsamixer/mixer_widget.h,161
#define MIXER_WIDGET_H_INCLUDED2,32
enum view_mode 8,133
	VIEW_MODE_PLAYBACK,9,150
	VIEW_MODE_CAPTURE,10,171
	VIEW_MODE_ALL,11,191
	VIEW_MODE_COUNT,12,207

alsa-utils-1.0.29/alsamixer/mem.c,182
#define _GNU_SOURCE19,749
static void check(29,923
void *ccalloc(ccalloc35,996
void *crealloc(crealloc43,1111
char *cstrdup(cstrdup51,1232
char *casprintf(casprintf58,1316

alsa-utils-1.0.29/alsamixer/colors.h,64
#define COLORS_H_INCLUDED2,26
#define TRICOLOR_VOLUME_BAR4,53

alsa-utils-1.0.29/alsamixer/mixer_display.h,38
#define MIXER_DISPLAY_H_INCLUDED2,33

alsa-utils-1.0.29/alsaucm/usecase.c,984
#define MAX_BUF 44,1686
struct context 46,1707
	snd_use_case_mgr_t *uc_mgr;uc_mgr47,1724
	const char *command;command48,1753
	char *card;card49,1775
	char **argv;argv50,1788
	int argc;51,1802
	int arga;52,1813
	char *batch;batch53,1824
	unsigned int interactive:interactive54,1838
	unsigned int no_open:no_open55,1867
	unsigned int do_exit:do_exit56,1892
enum uc_cmd 59,1921
	OM_UNKNOWN 61,1953
	OM_OPEN,62,1970
	OM_RESET,63,1980
	OM_RELOAD,64,1991
	OM_LISTCARDS,65,2003
	OM_LIST2,66,2018
	OM_LIST1,67,2029
	OM_SET,70,2056
	OM_GET,71,2065
	OM_GETI,72,2074
	OM_HELP,75,2097
	OM_QUIT,76,2107
struct cmd 79,2121
	int code;80,2134
	int args;81,2145
	unsigned int opencard:opencard82,2156
	const char *id;id83,2182
static struct cmd cmds[cmds86,2203
static void dump_help(104,2662
static int parse_line(129,3636
static int do_one(173,4511
static int do_commands(320,7928
static void my_exit(352,8675
	OPT_VERSION 367,8979
int main(370,9001

alsa-utils-1.0.29/alsaloop/alsaloop.h,5005
#define USE_SAMPLERATE23,887
	SRC_SINC_BEST_QUALITY	27,947
	SRC_SINC_MEDIUM_QUALITY	28,975
	SRC_SINC_FASTEST	29,1005
	SRC_ZERO_ORDER_HOLD	30,1028
	SRC_LINEAR	31,1054
#define MAX_ARGS	35,1082
#define MAX_MIXERS	36,1103
#define FILE_PWRITE 39,1132
#define FILE_CWRITE 40,1173
#define WORKAROUND_SERIALOPEN	43,1222
typedef enum _sync_type 45,1260
	SYNC_TYPE_NONE 46,1286
	SYNC_TYPE_SIMPLE,47,1307
	SYNC_TYPE_CAPTRATESHIFT,48,1354
	SYNC_TYPE_PLAYRATESHIFT,49,1380
	SYNC_TYPE_SAMPLERATE,50,1406
	SYNC_TYPE_AUTO,51,1429
	SYNC_TYPE_LAST 53,1526
	SYNC_TYPE_LAST = SYNC_TYPE_AUTO53,1526
} sync_type_t;54,1559
typedef enum _slave_type 56,1575
	SLAVE_TYPE_AUTO 57,1602
	SLAVE_TYPE_ON 58,1624
	SLAVE_TYPE_OFF 59,1644
	SLAVE_TYPE_LAST 60,1665
	SLAVE_TYPE_LAST = SLAVE_TYPE_OFF60,1665
} slave_type_t;61,1699
struct loopback_control 63,1716
	snd_ctl_elem_id_t *id;id64,1742
	snd_ctl_elem_info_t *info;info65,1766
	snd_ctl_elem_value_t *value;value66,1794
struct loopback_mixer 69,1828
	unsigned int skip:skip70,1852
	struct loopback_control src;71,1874
	struct loopback_control dst;72,1904
	struct loopback_mixer *next;next73,1934
struct loopback_ossmixer 76,1968
	unsigned int skip:skip77,1995
	const char *alsa_id;alsa_id78,2017
	int alsa_index;79,2039
	const char *oss_id;oss_id80,2056
	struct loopback_ossmixer *next;next81,2077
struct loopback_handle 84,2114
	struct loopback *loopback;loopback85,2139
	char *device;device86,2167
	char *ctldev;ctldev87,2182
	char *id;id88,2197
	int card_number;89,2208
	snd_pcm_t *handle;handle90,2226
	snd_pcm_access_t access;91,2246
	snd_pcm_format_t format;92,2272
	unsigned int rate;93,2298
	unsigned int rate_req;94,2318
	unsigned int channels;95,2342
	unsigned int buffer_size;96,2366
	unsigned int period_size;97,2393
	snd_pcm_uframes_t avail_min;98,2420
	unsigned int buffer_size_req;99,2450
	unsigned int period_size_req;100,2481
	unsigned int frame_size;101,2512
	unsigned int resample:resample102,2538
	unsigned int nblock:nblock103,2582
	unsigned int xrun_pending:xrun_pending104,2646
	unsigned int pollfd_count;105,2676
	char *buf;buf107,2719
	snd_pcm_uframes_t buf_pos;108,2750
	snd_pcm_uframes_t buf_count;109,2797
	snd_pcm_uframes_t buf_size;110,2848
	snd_pcm_uframes_t buf_over;111,2905
	snd_pcm_uframes_t max;113,2982
	unsigned long long counter;114,3006
	unsigned long sync_point;115,3035
	snd_pcm_sframes_t last_delay;116,3079
	double pitch;117,3110
	snd_pcm_uframes_t total_queued;118,3125
	snd_ctl_t *ctl;ctl120,3173
	unsigned int ctl_pollfd_count;121,3190
	snd_ctl_elem_value_t *ctl_notify;ctl_notify122,3222
	snd_ctl_elem_value_t *ctl_rate_shift;ctl_rate_shift123,3257
	snd_ctl_elem_value_t *ctl_active;ctl_active124,3296
	snd_ctl_elem_value_t *ctl_format;ctl_format125,3331
	snd_ctl_elem_value_t *ctl_rate;ctl_rate126,3366
	snd_ctl_elem_value_t *ctl_channels;ctl_channels127,3399
struct loopback 130,3440
	char *id;id131,3458
	struct loopback_handle *capt;capt132,3469
	struct loopback_handle *play;play133,3500
	snd_pcm_uframes_t latency;134,3531
	unsigned int latency_req;135,3589
	unsigned int latency_reqtime;136,3632
	unsigned long loop_time;137,3675
	unsigned long long loop_limit;138,3735
	snd_output_t *output;output139,3800
	snd_output_t *state;state140,3823
	int pollfd_count;141,3845
	int active_pollfd_count;142,3864
	unsigned int linked:linked143,3890
	unsigned int reinit:reinit144,3936
	unsigned int running:running145,3960
	unsigned int stop_pending:stop_pending146,3985
	snd_pcm_uframes_t stop_count;147,4015
	sync_type_t sync;148,4046
	slave_type_t slave;149,4085
	int thread;150,4106
	unsigned int wake;151,4141
	double pitch;153,4179
	double pitch_delta;154,4194
	snd_pcm_sframes_t pitch_diff;155,4215
	snd_pcm_sframes_t pitch_diff_min;156,4246
	snd_pcm_sframes_t pitch_diff_max;157,4281
	unsigned int total_queued_count;158,4316
	snd_timestamp_t tstamp_start;159,4350
	snd_timestamp_t tstamp_end;160,4381
	unsigned int xrun:xrun162,4432
	snd_timestamp_t xrun_last_update;163,4476
	snd_timestamp_t xrun_last_wake0;164,4511
	snd_timestamp_t xrun_last_wake;165,4545
	snd_timestamp_t xrun_last_check0;166,4578
	snd_timestamp_t xrun_last_check;167,4613
	snd_pcm_sframes_t xrun_last_pdelay;168,4647
	snd_pcm_sframes_t xrun_last_cdelay;169,4684
	snd_pcm_uframes_t xrun_buf_pcount;170,4721
	snd_pcm_uframes_t xrun_buf_ccount;171,4757
	unsigned int xrun_out_frames;172,4793
	long xrun_max_proctime;173,4824
	double xrun_max_missing;174,4849
	struct loopback_mixer *controls;controls176,4896
	struct loopback_ossmixer *oss_controls;oss_controls177,4930
	unsigned int use_samplerate:use_samplerate179,4990
	unsigned int src_enable:src_enable181,5044
	int src_converter_type;182,5072
	SRC_STATE *src_state;src_state183,5097
	SRC_DATA src_data;184,5120
	unsigned int src_out_frames;185,5140
	FILE *cfile;cfile188,5196
	FILE *pfile;pfile191,5236
#define logit(199,5329

alsa-utils-1.0.29/alsaloop/pcmjob.c,2453
#define XRUN_PROFILE_UNKNOWN 37,1144
#define SYNCTYPE(42,1315
static const char *sync_types[sync_types44,1357
#define SRCTYPE(53,1524
static const char *src_types[src_types56,1588
static pthread_once_t pcm_open_mutex_once 65,1762
static pthread_mutex_t pcm_open_mutex;66,1825
static void pcm_open_init_mutex(68,1865
static inline void pcm_open_lock(78,2108
static inline void pcm_open_unlock(85,2299
static inline snd_pcm_uframes_t get_whole_latency(91,2435
			frames_to_time(97,2569
static inline snd_pcm_uframes_t time_to_frames(103,2686
static int setparams_stream(109,2830
static int setparams_bufsize(162,4710
static int setparams_set(223,6715
static int setparams(285,8736
static void showlatency(346,11063
static long timediff(354,11341
static int getcurtimestamp(368,11630
static void xrun_profile0(377,11792
static inline void xrun_profile(394,12286
static void xrun_stats0(400,12386
static inline void xrun_stats(444,14393
static inline snd_pcm_uframes_t buf_avail(450,14489
static void buf_remove(455,14617
static void buf_add_copy(469,14927
static void buf_add_src(505,15887
static void buf_add_src(590,18510
static void buf_add(595,18569
static int xrun(607,18832
static int suspend(627,19329
static int readit(638,19519
static int writeit(701,21055
static snd_pcm_sframes_t remove_samples(761,22562
static int xrun_sync(791,23326
static int set_notify(1000,29787
static int set_rate_shift(1020,30375
void update_pitch(1035,30802
static int get_active(1075,32122
static int get_format(1089,32500
static int get_rate(1103,32872
static int get_channels(1117,33234
static void openctl_elem(1131,33616
static int openctl(1154,34190
static int openit(1193,35401
static int freeit(1238,36672
static int closeit(1245,36782
static int init_handle(1262,37176
int pcmjob_init(1280,37714
static void freeloop(1335,39208
int pcmjob_done(1354,39640
static void lhandle_start(1377,40000
static void fix_format(1385,40163
int pcmjob_start(1402,40584
int pcmjob_stop(1608,47603
int pcmjob_pollfds_init(1627,48292
static snd_pcm_sframes_t get_queued_playback_samples(1659,49292
static snd_pcm_sframes_t get_queued_capture_samples(1674,49624
static int ctl_event_check(1686,49894
static int handle_ctl_events(1700,50341
int pcmjob_pollfds_handle(1760,51888
#define OUT(1939,58031
static pthread_mutex_t state_mutex 1942,58095
static void show_handle(1944,58160
void pcmjob_state(1960,59043

alsa-utils-1.0.29/alsaloop/control.c,347
static char *id_str(id_str29,985
int control_parse_id(43,1337
int control_id_match(140,3761
static int control_init1(160,4313
static int copy_value(184,5034
static int oss_set(212,5788
static int control_init2(240,6566
int control_init(312,8940
int control_done(341,9710
static int control_event1(364,10370
int control_event(405,11682

alsa-utils-1.0.29/alsaloop/alsaloop.c,1356
struct loopback_thread 37,1139
	int threaded;38,1164
	pthread_t thread;39,1179
	int exitcode;40,1198
	struct loopback **loopbacks;loopbacks41,1213
	int loopbacks_count;42,1243
	snd_output_t *output;output43,1265
int quit 46,1292
int verbose 47,1306
int workarounds 48,1323
int daemonize 49,1344
int use_syslog 50,1363
struct loopback **loopbacks loopbacks51,1383
int loopbacks_count 52,1419
char **my_argv my_argv53,1444
int my_argc 54,1467
struct loopback_thread *threads;threads55,1484
int threads_count 56,1517
pthread_t main_job;57,1540
int arg_default_xrun 58,1560
int arg_default_wake 59,1586
static void my_exit(61,1613
static int create_loopback_handle(74,1872
static int create_loopback(109,2735
static void set_loop_time(137,3399
static void setscheduler(143,3558
void help(161,4111
static long timediff(215,6176
static void add_loop(229,6442
static int init_mixer_control(240,6711
static int add_mixers(260,7120
static int add_oss_mixers(298,7964
static void enable_syslog(338,8819
static int parse_config(348,9023
static int parse_config_file(638,16850
static void thread_job1(708,18303
static void thread_job(784,20333
static void send_to_all(794,20546
static void signal_handler(806,20754
static void signal_handler_state(812,20829
static void signal_handler_ignore(830,21242
int main(835,21327

alsa-utils-1.0.29/amixer/amixer.c,3065
#define LEVEL_BASIC	36,1157
#define LEVEL_INACTIVE	37,1185
#define LEVEL_ID	38,1216
static int quiet 40,1242
static int debugflag 41,1264
static int no_check 42,1290
static int smixer_level 43,1315
static int ignore_error 44,1344
static struct snd_mixer_selem_regopt smixer_options;45,1373
static char card[card46,1426
static void error(48,1461
static int help(59,1634
static int info(87,3071
static const char *control_type(control_type141,4806
static const char *control_access(control_access146,4936
#define check_range(163,5566
static int convert_range(166,5684
static int convert_db_range(177,5981
static int convert_prange(189,6339
#define convert_prange1(203,6608
struct volume_ops 206,6696
	int (*get_range)get_range207,6716
	int (*get)get208,6781
	int (*set)set210,6868
enum { VOL_RAW,214,6968
enum { VOL_RAW, VOL_DB,214,6968
enum { VOL_RAW, VOL_DB, VOL_MAP 214,6968
struct volume_ops_set 216,7004
	int (*has_volume)has_volume217,7028
	struct volume_ops v[v218,7072
static int set_playback_dB(221,7101
static int set_capture_dB(227,7278
static int set_playback_raw_volume(233,7452
static int set_capture_raw_volume(240,7644
#define MAP_VOL_RES	248,7904
static int get_mapped_volume_range(250,7943
static int get_playback_mapped_volume(258,8083
static int set_playback_mapped_volume(266,8299
static int get_capture_mapped_volume(274,8533
static int set_capture_mapped_volume(282,8745
static const struct volume_ops_set vol_ops[vol_ops290,8974
static int std_vol_type 319,9807
static int set_volume_simple(321,9843
static int get_bool_simple(395,11289
static int simple_skip_word(409,11608
static void show_control_id(425,11915
static void print_spaces(435,12065
static void print_dB(441,12159
static void decode_tlv(450,12315
static int show_control(587,15545
static int controls(698,18928
static void show_selem_volume(733,19884
static int show_selem(753,20405
static int selems(1017,29089
static int parse_simple_id(1056,30299
static int cset(1104,31169
typedef struct channel_mask 1202,33876
	char *name;name1203,33906
	unsigned int mask;1204,33919
} channel_mask_t;1205,33939
static const channel_mask_t chanmask[chanmask1206,33957
static unsigned int channels_mask(1221,34521
static unsigned int dir_mask(1237,34906
static int get_enum_item_index(1254,35307
static int sset_enum(1279,35825
static int sset_channels(1300,36325
static int sset(1415,41119
static void events_info(1495,43221
static void events_value(1505,43424
static void events_remove(1515,43629
static int element_callback(1525,43836
static void events_add(1538,44122
static int ctl_callback(1549,44377
static int events(1557,44535
static void sevents_value(1588,45364
static void sevents_info(1593,45526
static void sevents_remove(1598,45686
static int melem_event(1603,45850
static void sevents_add(1619,46230
static int mixer_event(1628,46532
static int sevents(1636,46693
static int split_line(1681,47845
#define MAX_ARGS	1722,48580
static int exec_stdin(1724,48601
int main(1748,49064

alsa-utils-1.0.29/alsactl/alsactl.c,741
#define SYS_ASOUNDRC 36,1171
#define SYS_PIDFILE 39,1248
#define SYS_LOCKPATH 42,1319
int debugflag 45,1360
int force_restore 46,1379
int ignore_nocards 47,1402
int do_lock 48,1426
int use_syslog 49,1443
char *command;command50,1463
char *statefile statefile51,1478
char *lockfile lockfile52,1502
#define TITLE	54,1534
#define HEADER	55,1555
#define FILEARG 56,1577
#define ENVARG	57,1600
#define INTARG 58,1622
#define EMPCMD	59,1645
#define CARDCMD 60,1667
#define KILLCMD 61,1690
struct arg 63,1714
	int sarg;64,1727
	char *larg;larg65,1738
	char *comment;comment66,1751
static struct arg args[args69,1771
static void help(113,4294
#define NO_NICE 153,5136
static void do_nice(155,5163
int main(172,5638

alsa-utils-1.0.29/alsactl/utils.c,215
int file_map(37,1149
void file_unmap(64,1545
size_t line_width(69,1616
void initfailed(83,1859
static void syslog_(105,2349
void info_(117,2679
void error_(132,2971
void cerror_(147,3263
void dbg_(164,3602

alsa-utils-1.0.29/alsactl/init_utils_run.c,125
#define MY_MAX(19,747
#define READ_END	21,792
#define WRITE_END	22,811
int run_program0(30,976
int run_program(241,6190

alsa-utils-1.0.29/alsactl/init_parse.c,2280
#define PATH_SIZE	45,1394
#define NAME_SIZE	46,1416
#define EJUSTRETURN	47,1438
enum key_op 49,1470
	KEY_OP_UNSET,50,1484
	KEY_OP_MATCH,51,1499
	KEY_OP_NOMATCH,52,1514
	KEY_OP_ADD,53,1531
	KEY_OP_ASSIGN,54,1544
	KEY_OP_ASSIGN_FINAL55,1560
struct pair 58,1585
	char *key;key59,1599
	char *value;value60,1611
	struct pair *next;next61,1625
struct space 64,1649
	struct pair *pairs;pairs65,1664
	char *rootdir;rootdir66,1685
	char *go_to;go_to67,1701
	char *program_result;program_result68,1715
	const char *filename;filename69,1738
	int linenum;70,1761
	int log_run;71,1775
	int exit_code;72,1789
	int quit;73,1805
	unsigned int ctl_id_changed;74,1816
	snd_hctl_t *ctl_handle;ctl_handle75,1846
	snd_ctl_card_info_t *ctl_card_info;ctl_card_info76,1871
	snd_ctl_elem_id_t *ctl_id;ctl_id77,1908
	snd_ctl_elem_info_t *ctl_info;ctl_info78,1936
	snd_ctl_elem_value_t *ctl_value;ctl_value79,1968
static void Perror(82,2006
static void free_space(97,2344
static struct pair *value_find(value_find139,3235
static int value_set(148,3426
static int init_space(179,4037
static const char *cardinfo_get(cardinfo_get219,4930
static int check_id_changed(242,5858
static const char *get_ctl_value(get_ctl_value270,6590
#define convert_prange1(338,8567
static int set_ctl_value(341,8662
static int do_match(488,13246
static int ctl_match(509,13728
static const char *elemid_get(elemid_get528,14494
static int elemid_set(749,20983
static int get_key(839,23766
static char *get_key_attribute(get_key_attribute943,25743
static char *get_format_attribute(get_format_attribute967,26222
static int get_format_len(987,26645
static void apply_format(1005,26962
	enum subst_type 1014,27184
		SUBST_UNKNOWN,1015,27203
		SUBST_CARDINFO,1016,27220
		SUBST_CTL,1017,27238
		SUBST_RESULT,1018,27251
		SUBST_ATTR,1019,27267
		SUBST_SYSFSROOT,1020,27281
		SUBST_ENV,1021,27300
		SUBST_CONFIG,1022,27313
	static const struct subst_map 1024,27333
		char *name;name1025,27366
		char fmt;1026,27380
		enum subst_type type;1027,27392
int run_program1(1244,33076
static char *new_root_dir(new_root_dir1267,33769
static int conf_name_filter(1282,34060
static int parse_line(1288,34193
static int parse(1659,44571
int init(1744,46348

alsa-utils-1.0.29/alsactl/init_utils_string.c,318
static void remove_trailing_chars(20,748
static int utf8_encoded_expected_len(30,959
static int utf8_encoded_to_unichar(50,1314
static int utf8_unichar_to_encoded_len(90,1964
static int utf8_unichar_valid_range(106,2264
static int utf8_encoded_valid_unichar(120,2585
static int replace_untrusted_chars(153,3255

alsa-utils-1.0.29/alsactl/lock.c,84
static int state_lock_(33,1062
int state_lock(119,2509
int state_unlock(129,2697

alsa-utils-1.0.29/alsactl/init_sysdeps.c,61
static size_t strlcpy(21,876
static size_t strlcat(40,1183

alsa-utils-1.0.29/alsactl/monitor.c,108
static int open_ctl(25,939
static int print_event(45,1351
#define MAX_CARDS	87,2355
int monitor(89,2378

alsa-utils-1.0.29/alsactl/list.h,1096
#define _LIST_H9,162
#define container_of(19,426
#define LIST_POISON1 28,751
#define LIST_POISON2 29,795
struct list_head 41,1180
	struct list_head *next,next42,1199
	struct list_head *next, *prev;prev42,1199
#define LIST_HEAD_INIT(45,1235
#define LIST_HEAD(47,1286
#define INIT_LIST_HEAD(50,1359
static inline void __list_add(60,1619
static inline void list_add(78,2016
static inline void list_add_tail(91,2338
static inline void __list_del(103,2643
static inline void list_del(115,2964
static inline void list_del_init(126,3239
static inline void list_move(137,3511
static inline void list_move_tail(148,3802
static inline int list_empty(159,4042
static inline void __list_splice(164,4128
static inline void list_splice(183,4532
static inline void list_splice_init(196,4870
#define list_entry(211,5256
#define list_for_each(219,5468
#define __list_for_each(233,5911
#define list_for_each_prev(241,6160
#define list_for_each_safe(250,6499
#define list_for_each_entry(260,6831
#define list_for_each_entry_reverse(271,7270
#define list_for_each_entry_safe(283,7788

alsa-utils-1.0.29/alsactl/state.c,1317
static char *id_str(id_str34,1112
static char *num_str(num_str47,1416
static int snd_config_integer_add(54,1510
static int snd_config_integer64_add(69,1815
static int snd_config_string_add(84,2129
static int snd_config_compound_add(99,2443
#define MAX_USER_TLV_SIZE	116,2791
static char *tlv_to_str(tlv_to_str118,2821
static unsigned int *str_to_tlv(str_to_tlv136,3102
static int add_tlv_comments(166,3669
static int get_control(229,5409
static int get_controls(548,14273
static long config_iface(651,16917
static int config_bool(677,17470
static int config_enumerated(712,18283
static int config_integer(753,19325
static int config_integer64(765,19669
static int check_comment_access(777,20024
static int get_comment_type(799,20494
static int get_comment_range(823,21064
struct string_array 847,21537
	unsigned int count;848,21559
	const char **strings;strings849,21580
static int get_comment_items(852,21607
static int add_user_control(890,22467
static int check_comment_type(994,24784
static int convert_to_new_db(1019,25500
static int check_comment_range(1055,26521
static int restore_config_value(1120,28396
static int restore_config_value2(1169,29504
static int set_control(1196,30211
static int set_controls(1467,37837
int save_state(1539,39792
int load_state(1648,41981

alsa-utils-1.0.29/alsactl/init_sysfs.c,319
static char sysfs_path[sysfs_path21,803
struct sysfs_attr 25,896
	struct list_head node;26,916
	char path[path27,940
	char *value;value28,963
	char value_local[value_local29,1026
static int sysfs_init(32,1060
static void sysfs_cleanup(56,1637
static char *sysfs_attr_get_value(sysfs_attr_get_value67,1857

alsa-utils-1.0.29/alsactl/daemon.c,963
struct id_list 35,1105
	snd_ctl_elem_id_t **list;list36,1122
	int size;37,1149
struct card 40,1164
	int index;41,1178
	int pfds;42,1190
	snd_ctl_t *handle;handle43,1201
	struct id_list whitelist;44,1221
	struct id_list blacklist;45,1248
static int quit 48,1279
static int rescan 49,1300
static int save_now 50,1323
static void signal_handler_quit(52,1349
static void signal_handler_save_and_quit(58,1441
static void signal_handler_rescan(64,1553
static void free_list(70,1651
static void card_free(79,1785
static void add_card(91,1981
static void add_cards(140,3019
static int compare_ids(157,3295
static int in_list(168,3821
static void remove_from_list(183,4070
static void add_to_list(195,4290
static int check_lists(218,4749
static int card_events(240,5278
static long read_pid_file(275,6146
static int write_pid_file(293,6450
int state_daemon_kill(315,6837
static int check_another_instance(343,7408
int state_daemon(360,7691

alsa-utils-1.0.29/alsactl/alsactl.h,240
#define info(16,509
#define error(17,588
#define cerror(18,669
#define dbg(19,771
#define info(21,854
#define error(22,933
#define cerror(23,1014
#define dbg(24,1110
static inline int hextodigit(46,1974
#define ARRAY_SIZE(59,2279

alsa-utils-1.0.29/iecset/iecset.c,1210
static int get_bool(26,935
	CMD_BOOL,40,1241
	CMD_BOOL, CMD_BOOL_INV,40,1241
	CMD_BOOL, CMD_BOOL_INV, CMD_INT40,1241
	IDX_PRO,44,1285
	IDX_PRO, IDX_NOAUDIO,44,1285
	IDX_PRO, IDX_NOAUDIO, IDX_RATE,44,1285
	IDX_PRO, IDX_NOAUDIO, IDX_RATE, IDX_UNLOCK,44,1285
	IDX_PRO, IDX_NOAUDIO, IDX_RATE, IDX_UNLOCK, IDX_SBITS,44,1285
	IDX_PRO, IDX_NOAUDIO, IDX_RATE, IDX_UNLOCK, IDX_SBITS, IDX_WORD,44,1285
	IDX_PRO, IDX_NOAUDIO, IDX_RATE, IDX_UNLOCK, IDX_SBITS, IDX_WORD, IDX_EMP,44,1285
	IDX_PRO, IDX_NOAUDIO, IDX_RATE, IDX_UNLOCK, IDX_SBITS, IDX_WORD, IDX_EMP, IDX_CAT,44,1285
	IDX_PRO, IDX_NOAUDIO, IDX_RATE, IDX_UNLOCK, IDX_SBITS, IDX_WORD, IDX_EMP, IDX_CAT, IDX_NOCOPY,44,1285
	IDX_PRO, IDX_NOAUDIO, IDX_RATE, IDX_UNLOCK, IDX_SBITS, IDX_WORD, IDX_EMP, IDX_CAT, IDX_NOCOPY, IDX_ORIG,44,1285
	IDX_LAST45,1391
struct cmdtbl 48,1405
	const char *name;name49,1421
	int idx;50,1440
	int type;51,1450
	const char *desc;desc52,1461
static const struct cmdtbl cmds[cmds55,1484
static void error(79,2485
static void usage(85,2585
static void parse_command(106,3226
static char *skipspace(skipspace131,3713
static void parse_file(142,3864
static int update_iec958_status(164,4324
int main(310,8096

alsa-utils-1.0.29/iecset/iecbits.c,197
struct category_str 23,873
	int val;24,895
	const char *name;name25,905
static const struct category_str con_category[con_category28,928
#define ARRAY_SIZE(65,2220
void dump_iec958(67,2273

alsa-utils-1.0.29/amidi/amidi.c,1382
#define _GNU_SOURCE22,853
static int do_device_list,40,1207
static int do_device_list, do_rawmidi_list;40,1207
static char *port_name port_name41,1251
static char *send_file_name;send_file_name42,1287
static char *receive_file_name;receive_file_name43,1316
static char *send_hex;send_hex44,1348
static char *send_data;send_data45,1371
static int send_data_length;46,1395
static int receive_file;47,1424
static int dump;48,1449
static int timeout;49,1466
static int stop;50,1486
static snd_rawmidi_t *input,input51,1503
static snd_rawmidi_t *input, **inputp;inputp51,1503
static snd_rawmidi_t *output,output52,1542
static snd_rawmidi_t *output, **outputp;outputp52,1542
static void error(54,1584
static void usage(64,1734
static void version(83,2492
static void *my_malloc(my_malloc88,2569
static void list_device(98,2708
static void list_card_devices(159,4357
static void device_list(184,4880
static void rawmidi_list(207,5329
static void load_file(228,5831
static int hex_value(262,6628
static void parse_data(274,6854
static void print_byte(311,7550
		STATE_UNKNOWN,314,7610
		STATE_1PARAM,315,7627
		STATE_1PARAM_CONTINUE,316,7643
		STATE_2PARAM_1,317,7668
		STATE_2PARAM_2,318,7686
		STATE_2PARAM_1_CONTINUE,319,7704
		STATE_SYSEX320,7731
static void sig_handler(384,8923
static void add_send_hex_data(389,8974
int main(407,9276

alsa-lib-1.0.29/aserver/aserver.c,2694
char *command;command38,1138
#define ERROR(41,1214
#define ERROR(47,1394
#define SYSERROR(54,1576
static int make_local_socket(56,1640
static int make_inet_socket(84,2201
struct pollfd *pollfds;pollfds109,2658
unsigned int pollfds_count 110,2682
typedef struct waiter waiter_t;111,2714
typedef int (*waiter_handler_t)waiter_handler_t112,2746
struct waiter 113,2820
	int fd;114,2836
	void *private_data;private_data115,2845
	waiter_handler_t handler;116,2866
waiter_t *waiters;waiters118,2896
static void add_waiter(120,2916
static void del_waiter(135,3249
typedef struct client client_t;150,3553
	int (*open)open153,3603
	int (*cmd)cmd154,3648
	int (*close)close155,3679
} transport_ops_t;156,3712
struct client 158,3732
	struct list_head list;159,3748
	int poll_fd;160,3772
	int ctrl_fd;161,3786
	int local;162,3800
	int transport_type;163,3812
	int dev_type;164,3833
	char name[name165,3848
	int stream;166,3865
	int mode;167,3878
	transport_ops_t *ops;ops168,3889
	snd_async_handler_t *async_handler;async_handler169,3912
	int async_sig;170,3949
	pid_t async_pid;171,3965
			snd_pcm_t *handle;handle174,4003
			int fd;175,4025
		} pcm;176,4036
			snd_ctl_t *handle;handle178,4056
			int fd;179,4078
		} ctl;180,4089
			snd_rawmidi_t *handle;handle183,4115
		} rawmidi;184,4141
			snd_timer_open_t *handle;handle186,4165
		} timer;187,4194
			snd_hwdep_t *handle;handle189,4216
		} hwdep;190,4240
			snd_seq_t *handle;handle192,4262
		} seq;193,4284
	} device;195,4300
	int polling;196,4311
	int open;197,4325
	int cookie;198,4336
			int ctrl_id;201,4369
			void *ctrl;ctrl202,4385
		} shm;203,4400
	} transport;204,4409
	struct list_head list;210,4465
	int fd;211,4489
	uint32_t cookie;212,4498
} inet_pending_t;213,4516
static int pcm_handler(217,4567
static void pcm_shm_hw_ptr_changed(241,5036
static void pcm_shm_appl_ptr_changed(260,5565
static int pcm_shm_open(279,6128
static int pcm_shm_close(318,7029
static int shm_ack(343,7652
static int shm_ack_fd(358,7917
static int shm_rbptr_fd(373,8203
static void async_handler(380,8351
static int pcm_shm_cmd(387,8553
transport_ops_t pcm_shm_ops 520,12366
static int ctl_handler(526,12471
static int ctl_shm_open(543,12798
static int ctl_shm_close(580,13601
static int ctl_shm_cmd(605,14215
transport_ops_t ctl_shm_ops 714,17698
static int snd_client_open(720,17803
static int client_poll_handler(794,19200
static int client_ctrl_handler(808,19547
static int inet_pending_handler(826,19951
static int local_handler(878,21164
static int inet_handler(897,21632
static int server(915,22084
static void usage(998,23810
int main(1006,23922

alsa-lib-1.0.29/test/seq.c,471
#define SEQ_VERSION 12,202
#define HELPID_HELP 14,231
#define HELPID_DEBUG 15,268
#define HELPID_VERBOSE	16,305
#define HELPID_VERSION 17,334
int max_clients;19,372
int max_ports;20,389
int max_queues;21,404
int debug 22,420
int verbose 23,435
void set_name(25,453
void system_info(37,702
void show_system_info(52,1125
void show_queue_status(60,1355
void show_port_info(84,2207
void show_client_info(112,3356
static void help(135,4131
int main(152,4866

alsa-lib-1.0.29/test/playmidi1.c,1619
static int use_realtime 52,1758
static int use_blocking_mode 55,1847
#define DEST_CLIENT_NUMBER	58,1939
#define DEST_PORT_NUMBER	59,1969
#define WRITE_POOL_SIZE	62,2019
#define WRITE_POOL_SPACE	63,2048
#define READ_POOL_SIZE	64,2076
static FILE *F;F66,2152
static snd_seq_t *seq_handle seq_handle67,2168
static int ppq 68,2205
static int slave_ppq 69,2226
static double local_secs 71,2254
static int local_ticks 72,2284
static int local_tempo 73,2312
static int dest_queue 75,2346
static int shared_queue 76,2374
static int tick_offset 77,2403
static int dest_client 78,2431
static int dest_port 79,2476
static int my_port 80,2517
static int verbose 82,2542
static int slave 83,2566
#define VERB_INFO	85,2618
#define VERB_MUCH	86,2638
#define VERB_EVENT	87,2658
static inline double tick2time_dbl(94,2783
static void tick2time(99,2934
static void write_ev(106,3097
static int mygetc(130,3712
static void mytext(136,3783
static void do_header(148,4004
static void set_event_time(203,5611
static void set_event_header(220,6091
static void alsa_start_timer(229,6312
static void alsa_stop_timer(235,6425
static void do_tempo(243,6582
static void do_noteon(263,7017
static void do_noteoff(275,7281
static void do_program(287,7548
static void do_parameter(299,7801
static void do_pitchbend(311,8085
static void do_pressure(322,8421
static void do_chanpressure(333,8705
static void do_sysex(344,8967
static snd_seq_event_t *wait_for_event(wait_for_event365,9362
static void alsa_sync(396,10232
static void wait_start(411,10621
static void usage(436,11225
int main(449,11762

alsa-lib-1.0.29/test/seq-sender.c,210
int pcard 7,59
int pdevice 8,74
int period_size 9,91
void set_hwparams(11,116
void event_sender_start_timer(68,1483
void event_sender_filter(100,2493
void send_event(110,2719
void event_sender(143,3908

alsa-lib-1.0.29/test/midifile.h,1721
#define note_off 54,1588
#define note_on 55,1619
#define poly_aftertouch 56,1650
#define control_change 57,1681
#define program_chng 58,1713
#define channel_aftertouch 59,1744
#define pitch_wheel 60,1781
#define system_exclusive 61,1812
#define delay_packet	62,1848
#define damper_pedal 65,1903
#define portamento	66,1940
#define sustenuto	67,1974
#define soft_pedal	68,2005
#define general_4 69,2037
#define	hold_2	70,2074
#define	general_5	71,2103
#define	general_6	72,2134
#define general_7	73,2165
#define general_8	74,2196
#define tremolo_depth	76,2244
#define ctrl_chorus_depth 77,2279
#define	detune	78,2316
#define phaser_depth	79,2345
#define data_inc	83,2410
#define data_dec	84,2440
#define non_reg_lsb	87,2497
#define non_reg_msb	88,2530
#define reg_lsb	89,2563
#define reg_msb	90,2593
#define	meta_event	93,2673
#define	sequence_number 94,2698
#define	text_event	95,2728
#define copyright_notice 96,2753
#define sequence_name 97,2784
#define instrument_name 98,2815
#define lyric	99,2845
#define marker	100,2873
#define	cue_point	101,2895
#define channel_prefix	102,2919
#define	end_of_track	103,2948
#define	set_tempo	104,2975
#define	smpte_offset	105,2999
#define	time_signature	106,3026
#define	key_signature	107,3055
#define	sequencer_specific	108,3083
#define Seq_Circuits 111,3147
#define Big_Briar 112,3206
#define Octave 113,3265
#define Moog 114,3324
#define Passport 115,3383
#define Lexicon 116,3442
#define Tempi 117,3487
#define Siel 118,3546
#define Kawai 119,3605
#define Roland 120,3634
#define Korg 121,3662
#define Yamaha 122,3690
#define MThd 126,3758
#define MTrk 127,3782
#define lowerbyte(130,3829
#define upperbyte(131,3878

alsa-lib-1.0.29/test/latency.c,1521
char *pdevice pdevice40,1332
char *cdevice cdevice41,1358
snd_pcm_format_t format 42,1384
int rate 43,1433
int channels 44,1451
int buffer_size 45,1469
int period_size 46,1502
int latency_min 47,1535
int latency_max 48,1578
int loop_sec 49,1623
int block 50,1657
int use_poll 51,1691
int resample 52,1709
unsigned long loop_limit;53,1727
snd_output_t *output output55,1754
int setparams_stream(57,1784
int setparams_bufsize(102,3174
int setparams_set(130,3955
int setparams(170,5049
void showstat(267,8197
void showlatency(281,8531
void showinmax(289,8750
void gettimestamp(298,8984
void setscheduler(311,9303
long timediff(328,9810
long readbuf(342,10071
long writebuf(374,10721
#define FILTERSWEEP_LFO_CENTER 393,11044
#define FILTERSWEEP_LFO_DEPTH 394,11081
#define FILTERSWEEP_LFO_FREQ 395,11117
#define FILTER_BANDWIDTH 396,11150
float lfo,399,11212
float lfo,dlfo,399,11212
float lfo,dlfo,fs,399,11212
float lfo,dlfo,fs,fc,399,11212
float lfo,dlfo,fs,fc,BW,399,11212
float lfo,dlfo,fs,fc,BW,C,399,11212
float lfo,dlfo,fs,fc,BW,C,D,399,11212
float lfo,dlfo,fs,fc,BW,C,D,a0,399,11212
float lfo,dlfo,fs,fc,BW,C,D,a0,a1,399,11212
float lfo,dlfo,fs,fc,BW,C,D,a0,a1,a2,399,11212
float lfo,dlfo,fs,fc,BW,C,D,a0,a1,a2,b1,399,11212
float lfo,dlfo,fs,fc,BW,C,D,a0,a1,a2,b1,b2,399,11212
float lfo,dlfo,fs,fc,BW,C,D,a0,a1,a2,b1,b2,*x[x399,11212
float lfo,dlfo,fs,fc,BW,C,D,a0,a1,a2,b1,b2,*x[3],*y[y399,11212
void applyeffect(401,11269
void help(436,11952
int main(473,13153

alsa-lib-1.0.29/test/control.c,15
int main(5,74

alsa-lib-1.0.29/test/oldapi.c,131
#define ALSA_PCM_OLD_HW_PARAMS_API29,952
#define ALSA_PCM_OLD_SW_PARAMS_API30,987
typedef void (myfcn)34,1079
int main(36,1110

alsa-lib-1.0.29/test/client_event_filter.c,46
void dump_event_filter(3,29
int main(16,313

alsa-lib-1.0.29/test/pcm_min.c,122
static char *device device7,110
snd_output_t *output output9,168
unsigned char buffer[buffer10,197
int main(12,255

alsa-lib-1.0.29/test/midifile.c,2007
#define NO_LC_DEFINES52,2487
#define system_exclusive 55,2552
#define	meta_event	56,2588
#define	set_tempo	57,2613
#define lowerbyte(58,2637
#define upperbyte(59,2686
#define NULLFUNC 62,2750
#define NULL 64,2775
#define THINK67,2798
int Mf_nomerge 111,3969
int Mf_interactive 113,4057
unsigned long Mf_currtime 114,4133
unsigned long Mf_realtime 115,4204
static double Mf_f_realtime 116,4286
static double old_f_realtime 117,4343
int Mf_division 118,4377
unsigned long Mf_currtempo 119,4399
static unsigned long old_currtempo 120,4436
static unsigned long old_realtime 121,4481
static unsigned long old_currtime 122,4520
static unsigned long revised_time 123,4559
static unsigned long tempo_change_time 124,4598
#define MAX_HISTORY 126,4643
static unsigned long tempo_history[tempo_history127,4667
static unsigned long tempo_history_time[tempo_history_time128,4716
static int tempo_history_count 129,4770
static long Mf_toberead 132,4827
static long Mf_numbyteswritten 133,4857
static int mod_file_flag 161,5541
static int force_exit;163,5594
mfread 166,5623
midifile 184,5935
readmt 191,5977
egetc 216,6382
readheader 230,6588
find_tempo(285,7646
readtrack 312,8389
badbyte 504,12930
metaevent 515,13063
sysex 582,14684
chanmessage 590,14765
readvarinum 638,15739
to32bit 659,15985
to16bit 671,16217
read32bit 678,16311
read16bit 690,16466
mferror 700,16577
#define MSGINCREMENT 712,16879
static char *Msgbuff Msgbuff713,16904
static int Msgsize 714,16954
static int Msgindex 715,17017
msginit 719,17102
msg 725,17148
msgleng 732,17192
msgadd 739,17242
biggermsg 750,17409
static int laststatus 777,17954
mfwrite 808,19486
mf_write_track_chunk 840,20248
mf_write_header_chunk 913,22042
mf_write_midi_event 951,23141
mf_write_meta_event 1003,24365
mf_write_tempo 1030,24910
mf_write_seqnum 1049,25360
mf_sec2ticks 1063,25630
WriteVarLen 1075,25867
mf_ticks2sec 1105,26441
write32bit 1136,27388
write16bit 1146,27608
eputc 1155,27788

alsa-lib-1.0.29/test/chmap.c,203
static void usage(12,177
static void print_channels(25,612
static int query_chmaps(32,766
static int setup_pcm(51,1184
static int get_chmap(86,2057
static int set_chmap(103,2395
int main(151,3380

alsa-lib-1.0.29/test/audio_time.c,386
static char *device device10,247
snd_output_t *output output12,280
long long timestamp2ns(14,310
long long timediff(24,442
void gettimestamp(34,612
#define PERIOD 54,1273
#define PCM_LINK 55,1293
#define TRACK_CAPTURE 56,1359
#define TRACK_PLAYBACK 57,1415
#define TRACK_SAMPLE_COUNTS 58,1471
#define PLAYBACK_BUFFERS 59,1584
#define TSTAMP_TYPE	60,1611
int main(63,1663

alsa-lib-1.0.29/test/seq-decoder.c,140
static char *event_names[event_names5,33
int decode_event(105,3963
void event_decoder_start_timer(248,7508
void event_decoder(260,7842

alsa-lib-1.0.29/test/namehint.c,15
int main(4,52

alsa-lib-1.0.29/test/rawmidi.c,83
static void usage(7,113
int stop=23,803
void sighandler(25,816
int main(30,855

alsa-lib-1.0.29/test/midiloop.c,136
static void usage(9,155
int stop 18,446
void sighandler(20,461
long long timediff(25,519
int writepattern(39,807
int main(66,1438

alsa-lib-1.0.29/test/queue_timer.c,34
void normalize(6,93
main(21,650

alsa-lib-1.0.29/test/timer.c,101
void show_status(7,116
void read_loop(24,653
static void async_callback(57,1556
int main(70,1932

alsa-lib-1.0.29/test/lsb/config.c,1115
static int subset_of(9,193
static int configs_equal(28,622
static void test_top(59,1503
static void test_load(74,1870
static void test_save(112,3163
static void test_update(142,4061
static void test_search(154,4470
static void test_searchv(187,5366
static void test_add(220,6311
static void test_delete(250,7334
static void test_copy(260,7545
static void test_make_integer(286,8415
static void test_make_integer64(301,8795
static void test_make_string(316,9188
static void test_make_compound(331,9574
static void test_imake_integer(344,9947
static void test_imake_integer64(359,10336
static void test_imake_string(374,10766
static void test_get_type(389,11173
static void test_set_integer(404,11652
static void test_set_integer64(419,12063
static void test_set_string(434,12517
static void test_set_ascii(452,13067
static void test_get_id(474,13726
#define test_get_integer 485,13958
#define test_get_integer64 486,14000
#define test_get_string 487,14046
static void test_get_ascii(489,14087
static void test_iterators(509,14652
static void test_for_each(530,15251
int main(551,15762

alsa-lib-1.0.29/test/lsb/test.h,148
#define TEST_H_INCLUDED2,24
static int any_test_failed;8,165
#define TEST_CHECK(10,194
#define ALSA_CHECK(17,364
#define TEST_EXIT_CODE(27,594

alsa-lib-1.0.29/test/lsb/midi_event.c,409
static int midi_matches_regex(11,194
static void test_decode(34,678
#define DECODE(44,877
#define BUF_MATCHES(45,951
#define DECODES_TO(46,1012
static void test_reset_decode(154,3966
static void test_encode(176,4386
#define ENCODE(184,4541
static void test_reset_encode(287,8098
static void test_init(306,8501
static void test_encode_byte(333,9072
#define ENCODE_BYTE(341,9232
int main(362,10020

alsa-lib-1.0.29/test/pcm.c,1371
static char *device device15,269
static snd_pcm_format_t format 16,329
static unsigned int rate 17,402
static unsigned int channels 18,456
static unsigned int buffer_time 19,516
static unsigned int period_time 20,590
static double freq 21,657
static int verbose 22,724
static int resample 23,771
static int period_event 24,832
static snd_pcm_sframes_t buffer_size;26,908
static snd_pcm_sframes_t period_size;27,946
static snd_output_t *output output28,984
static void generate_sine(30,1021
static int set_hwparams(95,2992
static int set_swparams(177,5616
static int xrun_recovery(222,7117
static int write_loop(248,7770
static int wait_for_poll(281,8452
static int write_and_poll_loop(295,8755
struct async_private_data 384,11073
	signed short *samples;samples385,11101
	snd_pcm_channel_area_t *areas;areas386,11125
	double phase;387,11157
static void async_callback(390,11176
static int async_loop(415,11949
static void async_direct_callback(462,13133
static int async_direct_loop(536,15153
static int direct_loop(594,16862
static int direct_write_loop(680,19098
struct transfer_method 713,19727
	const char *name;name714,19752
	snd_pcm_access_t access;715,19771
	int (*transfer_loop)transfer_loop716,19797
static struct transfer_method transfer_methods[transfer_methods721,19913
static void help(732,20504
int main(763,21466

alsa-lib-1.0.29/include/control.h,4181
#define __ALSA_CONTROL_H29,1099
#define SND_CONTROL_DLSYM_VERSION	43,1342
typedef struct snd_aes_iec958 46,1420
	unsigned char status[status47,1452
	unsigned char subcode[subcode48,1518
	unsigned char pad;49,1579
	unsigned char dig_subframe[dig_subframe50,1616
} snd_aes_iec958_t;51,1681
typedef struct _snd_ctl_card_info snd_ctl_card_info_t;54,1733
typedef struct _snd_ctl_elem_id snd_ctl_elem_id_t;57,1829
typedef struct _snd_ctl_elem_list snd_ctl_elem_list_t;60,1926
typedef struct _snd_ctl_elem_info snd_ctl_elem_info_t;63,2016
typedef struct _snd_ctl_elem_value snd_ctl_elem_value_t;66,2107
typedef struct _snd_ctl_event snd_ctl_event_t;69,2192
typedef enum _snd_ctl_elem_type 72,2264
	SND_CTL_ELEM_TYPE_NONE 74,2319
	SND_CTL_ELEM_TYPE_BOOLEAN,76,2373
	SND_CTL_ELEM_TYPE_INTEGER,78,2426
	SND_CTL_ELEM_TYPE_ENUMERATED,80,2482
	SND_CTL_ELEM_TYPE_BYTES,82,2536
	SND_CTL_ELEM_TYPE_IEC958,84,2602
	SND_CTL_ELEM_TYPE_INTEGER64,86,2661
	SND_CTL_ELEM_TYPE_LAST 87,2691
	SND_CTL_ELEM_TYPE_LAST = SND_CTL_ELEM_TYPE_INTEGER6487,2691
} snd_ctl_elem_type_t;88,2745
typedef enum _snd_ctl_elem_iface 91,2798
	SND_CTL_ELEM_IFACE_CARD 93,2852
	SND_CTL_ELEM_IFACE_HWDEP,95,2916
	SND_CTL_ELEM_IFACE_MIXER,97,2957
	SND_CTL_ELEM_IFACE_PCM,99,2996
	SND_CTL_ELEM_IFACE_RAWMIDI,101,3037
	SND_CTL_ELEM_IFACE_TIMER,103,3080
	SND_CTL_ELEM_IFACE_SEQUENCER,105,3125
	SND_CTL_ELEM_IFACE_LAST 106,3156
	SND_CTL_ELEM_IFACE_LAST = SND_CTL_ELEM_IFACE_SEQUENCER106,3156
} snd_ctl_elem_iface_t;107,3212
typedef enum _snd_ctl_event_type 110,3256
	SND_CTL_EVENT_ELEM 112,3322
	SND_CTL_EVENT_LAST 113,3347
	SND_CTL_EVENT_LAST = SND_CTL_EVENT_ELEM113,3347
}snd_ctl_event_type_t;snd_ctl_event_type_t114,3388
#define SND_CTL_EVENT_MASK_REMOVE 118,3530
#define SND_CTL_EVENT_MASK_VALUE	120,3626
#define SND_CTL_EVENT_MASK_INFO	122,3720
#define SND_CTL_EVENT_MASK_ADD	124,3807
#define SND_CTL_EVENT_MASK_TLV	126,3907
#define SND_CTL_NAME_NONE	129,3970
#define SND_CTL_NAME_PLAYBACK	131,4025
#define SND_CTL_NAME_CAPTURE	133,4093
#define SND_CTL_NAME_IEC958_NONE	136,4160
#define SND_CTL_NAME_IEC958_SWITCH	138,4221
#define SND_CTL_NAME_IEC958_VOLUME	140,4290
#define SND_CTL_NAME_IEC958_DEFAULT	142,4359
#define SND_CTL_NAME_IEC958_MASK	144,4430
#define SND_CTL_NAME_IEC958_CON_MASK	146,4495
#define SND_CTL_NAME_IEC958_PRO_MASK	148,4568
#define SND_CTL_NAME_IEC958_PCM_STREAM	150,4641
#define SND_CTL_NAME_IEC958(152,4735
#define SND_CTL_POWER_MASK	155,4901
#define SND_CTL_POWER_D0 157,4967
#define SND_CTL_POWER_D1 159,5040
#define SND_CTL_POWER_D2 161,5114
#define SND_CTL_POWER_D3 163,5186
#define SND_CTL_POWER_D3hot	165,5261
#define SND_CTL_POWER_D3cold	167,5351
#define SND_CTL_TLVT_CONTAINER	170,5442
#define SND_CTL_TLVT_DB_SCALE	172,5514
#define SND_CTL_TLVT_DB_LINEAR	174,5584
#define SND_CTL_TLVT_DB_RANGE	176,5660
#define SND_CTL_TLVT_DB_MINMAX	178,5753
#define SND_CTL_TLVT_DB_MINMAX_MUTE	180,5859
#define SND_CTL_TLV_DB_GAIN_MUTE	183,5921
#define SND_CTL_TLVT_CHMAP_FIXED	186,6010
#define SND_CTL_TLVT_CHMAP_VAR	188,6108
#define SND_CTL_TLVT_CHMAP_PAIRED	190,6208
typedef enum _snd_ctl_type 193,6267
	SND_CTL_TYPE_HW,195,6321
	SND_CTL_TYPE_SHM,197,6372
	SND_CTL_TYPE_INET,199,6437
	SND_CTL_TYPE_EXT201,6489
} snd_ctl_type_t;202,6507
#define SND_CTL_NONBLOCK	205,6589
#define SND_CTL_ASYNC	208,6687
#define SND_CTL_READONLY	211,6774
typedef struct _snd_ctl snd_ctl_t;214,6826
#define SND_SCTL_NOFREE	217,6909
typedef struct _snd_sctl snd_sctl_t;220,6960
static __inline__ int snd_ctl_abort(237,7733
#define snd_ctl_elem_id_alloca(308,11435
#define snd_ctl_card_info_alloca(331,12806
#define snd_ctl_event_alloca(349,13808
#define snd_ctl_elem_list_alloca(361,14336
#define snd_ctl_elem_info_alloca(382,15733
#define snd_ctl_elem_value_alloca(438,19693
typedef struct _snd_hctl_elem snd_hctl_elem_t;497,23512
typedef struct _snd_hctl snd_hctl_t;500,23579
typedef int (*snd_hctl_compare_t)snd_hctl_compare_t508,23787
typedef int (*snd_hctl_callback_t)snd_hctl_callback_t519,24164
typedef int (*snd_hctl_elem_callback_t)snd_hctl_elem_callback_t528,24434
static __inline__ int snd_hctl_abort(535,24741

alsa-lib-1.0.29/include/pcm_ioplug.h,2402
#define __ALSA_PCM_IOPLUG_H32,1042
	SND_PCM_IOPLUG_HW_ACCESS 43,1240
	SND_PCM_IOPLUG_HW_FORMAT,44,1291
	SND_PCM_IOPLUG_HW_CHANNELS,45,1333
	SND_PCM_IOPLUG_HW_RATE,46,1379
	SND_PCM_IOPLUG_HW_PERIOD_BYTES,47,1418
	SND_PCM_IOPLUG_HW_BUFFER_BYTES,48,1472
	SND_PCM_IOPLUG_HW_PERIODS,49,1526
	SND_PCM_IOPLUG_HW_PARAMS	50,1580
typedef struct snd_pcm_ioplug snd_pcm_ioplug_t;54,1673
typedef struct snd_pcm_ioplug_callback snd_pcm_ioplug_callback_t;56,1753
typedef snd_pcm_ioplug snd_pcm_ioplug_t;59,1880
typedef snd_pcm_ioplug_callback snd_pcm_ioplug_callback_t;60,1921
#define SND_PCM_IOPLUG_FLAG_LISTED	66,2034
#define SND_PCM_IOPLUG_FLAG_MONOTONIC	67,2102
#define SND_PCM_IOPLUG_VERSION_MAJOR	72,2205
#define SND_PCM_IOPLUG_VERSION_MINOR	73,2275
#define SND_PCM_IOPLUG_VERSION_TINY	74,2345
#define SND_PCM_IOPLUG_VERSION	78,2451
struct snd_pcm_ioplug 83,2627
	unsigned int version;88,2771
	const char *name;name92,2884
	unsigned int flags;93,2903
	int poll_fd;94,2956
	unsigned int poll_events;95,3000
	unsigned int mmap_rw;96,3047
	const snd_pcm_ioplug_callback_t *callback;callback100,3191
	void *private_data;private_data104,3312
	snd_pcm_t *pcm;pcm108,3394
	snd_pcm_stream_t stream;110,3412
	snd_pcm_state_t state;111,3474
	volatile snd_pcm_uframes_t appl_ptr;112,3536
	volatile snd_pcm_uframes_t hw_ptr;113,3613
	int nonblock;114,3679
	snd_pcm_access_t access;116,3731
	snd_pcm_format_t format;117,3811
	unsigned int channels;118,3890
	unsigned int rate;119,3976
	snd_pcm_uframes_t period_size;120,4044
	snd_pcm_uframes_t buffer_size;121,4130
struct snd_pcm_ioplug_callback 125,4252
	int (*start)start129,4323
	int (*stop)stop133,4397
	snd_pcm_sframes_t (*pointer)pointer137,4486
	snd_pcm_sframes_t (*transfer)transfer141,4581
	int (*close)close148,4790
	int (*hw_params)hw_params152,4861
	int (*hw_free)hw_free156,4963
	int (*sw_params)sw_params160,5036
	int (*prepare)prepare164,5138
	int (*drain)drain168,5207
	int (*pause)pause172,5281
	int (*resume)resume176,5361
	int (*poll_descriptors_count)poll_descriptors_count180,5446
	int (*poll_descriptors)poll_descriptors184,5541
	int (*poll_revents)poll_revents188,5672
	void (*dump)dump192,5809
	int (*delay)delay196,5937
	snd_pcm_chmap_query_t **(*query_chmaps)query_chmaps200,6062
	snd_pcm_chmap_t *(*get_chmap)get_chmap204,6184
	int (*set_chmap)set_chmap208,6296

alsa-lib-1.0.29/include/rawmidi.h,991
#define __ALSA_RAWMIDI_H29,1099
#define SND_RAWMIDI_DLSYM_VERSION	42,1338
typedef struct _snd_rawmidi_info snd_rawmidi_info_t;45,1429
typedef struct _snd_rawmidi_params snd_rawmidi_params_t;47,1516
typedef struct _snd_rawmidi_status snd_rawmidi_status_t;49,1605
typedef enum _snd_rawmidi_stream 52,1697
	SND_RAWMIDI_STREAM_OUTPUT 54,1754
	SND_RAWMIDI_STREAM_INPUT,56,1807
	SND_RAWMIDI_STREAM_LAST 57,1834
	SND_RAWMIDI_STREAM_LAST = SND_RAWMIDI_STREAM_INPUT57,1834
} snd_rawmidi_stream_t;58,1886
#define SND_RAWMIDI_APPEND	61,1962
#define SND_RAWMIDI_NONBLOCK	63,2058
#define SND_RAWMIDI_SYNC	65,2154
typedef struct _snd_rawmidi snd_rawmidi_t;68,2209
typedef enum _snd_rawmidi_type 71,2273
	SND_RAWMIDI_TYPE_HW,73,2335
	SND_RAWMIDI_TYPE_SHM,75,2416
	SND_RAWMIDI_TYPE_INET,77,2489
	SND_RAWMIDI_TYPE_VIRTUAL79,2549
} snd_rawmidi_type_t;80,2575
#define snd_rawmidi_info_alloca(96,3406
#define snd_rawmidi_params_alloca(119,4902
#define snd_rawmidi_status_alloca(136,6067

alsa-lib-1.0.29/include/pcm.h,13434
#define __ALSA_PCM_H30,1135
#define SND_PCM_DLSYM_VERSION	43,1339
typedef struct _snd_pcm_info snd_pcm_info_t;46,1420
typedef struct _snd_pcm_hw_params snd_pcm_hw_params_t;62,2225
typedef struct _snd_pcm_sw_params snd_pcm_sw_params_t;65,2325
 typedef struct _snd_pcm_status snd_pcm_status_t;67,2408
typedef struct _snd_pcm_access_mask snd_pcm_access_mask_t;69,2487
typedef struct _snd_pcm_format_mask snd_pcm_format_mask_t;71,2570
typedef struct _snd_pcm_subformat_mask snd_pcm_subformat_mask_t;73,2656
typedef enum _snd_pcm_class 76,2739
	SND_PCM_CLASS_GENERIC 79,2794
	SND_PCM_CLASS_MULTI,81,2850
	SND_PCM_CLASS_MODEM,83,2902
	SND_PCM_CLASS_DIGITIZER,85,2949
	SND_PCM_CLASS_LAST 86,2975
	SND_PCM_CLASS_LAST = SND_PCM_CLASS_DIGITIZER86,2975
} snd_pcm_class_t;87,3021
typedef enum _snd_pcm_subclass 90,3061
	SND_PCM_SUBCLASS_GENERIC_MIX 92,3132
	SND_PCM_SUBCLASS_MULTI_MIX,94,3218
	SND_PCM_SUBCLASS_LAST 95,3247
	SND_PCM_SUBCLASS_LAST = SND_PCM_SUBCLASS_MULTI_MIX95,3247
} snd_pcm_subclass_t;96,3299
typedef enum _snd_pcm_stream 99,3352
	SND_PCM_STREAM_PLAYBACK 101,3407
	SND_PCM_STREAM_CAPTURE,103,3460
	SND_PCM_STREAM_LAST 104,3485
	SND_PCM_STREAM_LAST = SND_PCM_STREAM_CAPTURE104,3485
} snd_pcm_stream_t;105,3531
typedef enum _snd_pcm_access 108,3575
	SND_PCM_ACCESS_MMAP_INTERLEAVED 110,3659
	SND_PCM_ACCESS_MMAP_NONINTERLEAVED,112,3754
	SND_PCM_ACCESS_MMAP_COMPLEX,114,3834
	SND_PCM_ACCESS_RW_INTERLEAVED,116,3908
	SND_PCM_ACCESS_RW_NONINTERLEAVED,118,3984
	SND_PCM_ACCESS_LAST 119,4019
	SND_PCM_ACCESS_LAST = SND_PCM_ACCESS_RW_NONINTERLEAVED119,4019
} snd_pcm_access_t;120,4075
typedef enum _snd_pcm_format 123,4121
	SND_PCM_FORMAT_UNKNOWN 125,4168
	SND_PCM_FORMAT_S8 127,4219
	SND_PCM_FORMAT_U8,129,4266
	SND_PCM_FORMAT_S16_LE,131,4322
	SND_PCM_FORMAT_S16_BE,133,4379
	SND_PCM_FORMAT_U16_LE,135,4441
	SND_PCM_FORMAT_U16_BE,137,4500
	SND_PCM_FORMAT_S24_LE,139,4597
	SND_PCM_FORMAT_S24_BE,141,4691
	SND_PCM_FORMAT_U24_LE,143,4790
	SND_PCM_FORMAT_U24_BE,145,4886
	SND_PCM_FORMAT_S32_LE,147,4946
	SND_PCM_FORMAT_S32_BE,149,5003
	SND_PCM_FORMAT_U32_LE,151,5065
	SND_PCM_FORMAT_U32_BE,153,5124
	SND_PCM_FORMAT_FLOAT_LE,155,5202
	SND_PCM_FORMAT_FLOAT_BE,157,5279
	SND_PCM_FORMAT_FLOAT64_LE,159,5359
	SND_PCM_FORMAT_FLOAT64_BE,161,5438
	SND_PCM_FORMAT_IEC958_SUBFRAME_LE,163,5496
	SND_PCM_FORMAT_IEC958_SUBFRAME_BE,165,5559
	SND_PCM_FORMAT_MU_LAW,167,5610
	SND_PCM_FORMAT_A_LAW,169,5648
	SND_PCM_FORMAT_IMA_ADPCM,171,5689
	SND_PCM_FORMAT_MPEG,173,5729
	SND_PCM_FORMAT_GSM,175,5763
	SND_PCM_FORMAT_SPECIAL 177,5800
	SND_PCM_FORMAT_S24_3LE 179,5882
	SND_PCM_FORMAT_S24_3BE,181,5961
	SND_PCM_FORMAT_U24_3LE,183,6040
	SND_PCM_FORMAT_U24_3BE,185,6116
	SND_PCM_FORMAT_S20_3LE,187,6193
	SND_PCM_FORMAT_S20_3BE,189,6267
	SND_PCM_FORMAT_U20_3LE,191,6346
	SND_PCM_FORMAT_U20_3BE,193,6422
	SND_PCM_FORMAT_S18_3LE,195,6499
	SND_PCM_FORMAT_S18_3BE,197,6573
	SND_PCM_FORMAT_U18_3LE,199,6652
	SND_PCM_FORMAT_U18_3BE,201,6728
	SND_PCM_FORMAT_G723_24,203,6806
	SND_PCM_FORMAT_G723_24_1B,205,6882
	SND_PCM_FORMAT_G723_40,207,6963
	SND_PCM_FORMAT_G723_40_1B,209,7039
	SND_PCM_FORMAT_DSD_U8,211,7125
	SND_PCM_FORMAT_DSD_U16_LE,213,7208
	SND_PCM_FORMAT_DSD_U32_LE,215,7295
	SND_PCM_FORMAT_DSD_U16_BE,217,7382
	SND_PCM_FORMAT_DSD_U32_BE,219,7469
	SND_PCM_FORMAT_LAST 220,7497
	SND_PCM_FORMAT_LAST = SND_PCM_FORMAT_DSD_U32_BE,220,7497
	SND_PCM_FORMAT_S16 224,7617
	SND_PCM_FORMAT_S16 = SND_PCM_FORMAT_S16_LE,224,7617
	SND_PCM_FORMAT_U16 226,7697
	SND_PCM_FORMAT_U16 = SND_PCM_FORMAT_U16_LE,226,7697
	SND_PCM_FORMAT_S24 228,7775
	SND_PCM_FORMAT_S24 = SND_PCM_FORMAT_S24_LE,228,7775
	SND_PCM_FORMAT_U24 230,7855
	SND_PCM_FORMAT_U24 = SND_PCM_FORMAT_U24_LE,230,7855
	SND_PCM_FORMAT_S32 232,7933
	SND_PCM_FORMAT_S32 = SND_PCM_FORMAT_S32_LE,232,7933
	SND_PCM_FORMAT_U32 234,8013
	SND_PCM_FORMAT_U32 = SND_PCM_FORMAT_U32_LE,234,8013
	SND_PCM_FORMAT_FLOAT 236,8090
	SND_PCM_FORMAT_FLOAT = SND_PCM_FORMAT_FLOAT_LE,236,8090
	SND_PCM_FORMAT_FLOAT64 238,8171
	SND_PCM_FORMAT_FLOAT64 = SND_PCM_FORMAT_FLOAT64_LE,238,8171
	SND_PCM_FORMAT_IEC958_SUBFRAME 240,8251
	SND_PCM_FORMAT_IEC958_SUBFRAME = SND_PCM_FORMAT_IEC958_SUBFRAME_LE240,8251
	SND_PCM_FORMAT_S16 243,8387
	SND_PCM_FORMAT_S16 = SND_PCM_FORMAT_S16_BE,243,8387
	SND_PCM_FORMAT_U16 245,8467
	SND_PCM_FORMAT_U16 = SND_PCM_FORMAT_U16_BE,245,8467
	SND_PCM_FORMAT_S24 247,8545
	SND_PCM_FORMAT_S24 = SND_PCM_FORMAT_S24_BE,247,8545
	SND_PCM_FORMAT_U24 249,8625
	SND_PCM_FORMAT_U24 = SND_PCM_FORMAT_U24_BE,249,8625
	SND_PCM_FORMAT_S32 251,8703
	SND_PCM_FORMAT_S32 = SND_PCM_FORMAT_S32_BE,251,8703
	SND_PCM_FORMAT_U32 253,8783
	SND_PCM_FORMAT_U32 = SND_PCM_FORMAT_U32_BE,253,8783
	SND_PCM_FORMAT_FLOAT 255,8860
	SND_PCM_FORMAT_FLOAT = SND_PCM_FORMAT_FLOAT_BE,255,8860
	SND_PCM_FORMAT_FLOAT64 257,8941
	SND_PCM_FORMAT_FLOAT64 = SND_PCM_FORMAT_FLOAT64_BE,257,8941
	SND_PCM_FORMAT_IEC958_SUBFRAME 259,9021
	SND_PCM_FORMAT_IEC958_SUBFRAME = SND_PCM_FORMAT_IEC958_SUBFRAME_BE259,9021
} snd_pcm_format_t;263,9126
typedef enum _snd_pcm_subformat 266,9175
	SND_PCM_SUBFORMAT_STD 268,9226
	SND_PCM_SUBFORMAT_LAST 269,9254
	SND_PCM_SUBFORMAT_LAST = SND_PCM_SUBFORMAT_STD269,9254
} snd_pcm_subformat_t;270,9302
typedef enum _snd_pcm_state 273,9343
	SND_PCM_STATE_OPEN 275,9386
	SND_PCM_STATE_SETUP,277,9436
	SND_PCM_STATE_PREPARED,279,9481
	SND_PCM_STATE_RUNNING,281,9522
	SND_PCM_STATE_XRUN,283,9613
	SND_PCM_STATE_DRAINING,285,9692
	SND_PCM_STATE_PAUSED,287,9732
	SND_PCM_STATE_SUSPENDED,289,9785
	SND_PCM_STATE_DISCONNECTED,291,9844
	SND_PCM_STATE_LAST 292,9873
	SND_PCM_STATE_LAST = SND_PCM_STATE_DISCONNECTED292,9873
} snd_pcm_state_t;293,9922
typedef enum _snd_pcm_start 296,9964
	SND_PCM_START_DATA 298,10037
	SND_PCM_START_EXPLICIT,300,10085
	SND_PCM_START_LAST 301,10110
	SND_PCM_START_LAST = SND_PCM_START_EXPLICIT301,10110
} snd_pcm_start_t;302,10155
typedef enum _snd_pcm_xrun 305,10196
	SND_PCM_XRUN_NONE 307,10257
	SND_PCM_XRUN_STOP,309,10312
	SND_PCM_XRUN_LAST 310,10332
	SND_PCM_XRUN_LAST = SND_PCM_XRUN_STOP310,10332
} snd_pcm_xrun_t;311,10371
typedef enum _snd_pcm_tstamp 314,10416
	SND_PCM_TSTAMP_NONE 316,10468
	SND_PCM_TSTAMP_ENABLE,318,10553
	SND_PCM_TSTAMP_MMAP 322,10674
	SND_PCM_TSTAMP_MMAP = SND_PCM_TSTAMP_ENABLE,322,10674
	SND_PCM_TSTAMP_LAST 323,10720
	SND_PCM_TSTAMP_LAST = SND_PCM_TSTAMP_ENABLE323,10720
} snd_pcm_tstamp_t;324,10765
typedef enum _snd_pcm_tstamp_type 326,10786
	SND_PCM_TSTAMP_TYPE_GETTIMEOFDAY 327,10822
	SND_PCM_TSTAMP_TYPE_MONOTONIC,328,10892
	SND_PCM_TSTAMP_TYPE_MONOTONIC_RAW,329,10964
	SND_PCM_TSTAMP_TYPE_LAST 330,11030
	SND_PCM_TSTAMP_TYPE_LAST = SND_PCM_TSTAMP_TYPE_MONOTONIC_RAW,330,11030
} snd_pcm_tstamp_type_t;331,11093
typedef unsigned long snd_pcm_uframes_t;334,11151
typedef long snd_pcm_sframes_t;336,11222
#define SND_PCM_NONBLOCK	339,11318
#define SND_PCM_ASYNC	341,11419
#define SND_PCM_ABORT	343,11512
#define SND_PCM_NO_AUTO_RESAMPLE	345,11607
#define SND_PCM_NO_AUTO_CHANNELS	347,11713
#define SND_PCM_NO_AUTO_FORMAT	349,11818
#define SND_PCM_NO_SOFTVOL	351,11896
typedef struct _snd_pcm snd_pcm_t;354,11954
enum _snd_pcm_type 357,12006
	SND_PCM_TYPE_HW 359,12052
	SND_PCM_TYPE_HOOKS,361,12093
	SND_PCM_TYPE_MULTI,364,12193
	SND_PCM_TYPE_FILE,366,12242
	SND_PCM_TYPE_NULL,368,12288
	SND_PCM_TYPE_SHM,370,12341
	SND_PCM_TYPE_INET,372,12406
	SND_PCM_TYPE_COPY,374,12449
	SND_PCM_TYPE_LINEAR,376,12506
	SND_PCM_TYPE_ALAW,378,12564
	SND_PCM_TYPE_MULAW,380,12621
	SND_PCM_TYPE_ADPCM,382,12682
	SND_PCM_TYPE_RATE,384,12731
	SND_PCM_TYPE_ROUTE,386,12787
	SND_PCM_TYPE_PLUG,388,12836
	SND_PCM_TYPE_SHARE,390,12876
	SND_PCM_TYPE_METER,392,12918
	SND_PCM_TYPE_MIX,394,12958
	SND_PCM_TYPE_DROUTE,396,13036
	SND_PCM_TYPE_LBSERVER,398,13111
	SND_PCM_TYPE_LINEAR_FLOAT,400,13197
	SND_PCM_TYPE_LADSPA,402,13259
	SND_PCM_TYPE_DMIX,404,13310
	SND_PCM_TYPE_JACK,406,13371
	SND_PCM_TYPE_DSNOOP,408,13422
	SND_PCM_TYPE_DSHARE,410,13474
	SND_PCM_TYPE_IEC958,412,13527
	SND_PCM_TYPE_SOFTVOL,414,13576
	SND_PCM_TYPE_IOPLUG,416,13627
	SND_PCM_TYPE_EXTPLUG,418,13680
	SND_PCM_TYPE_MMAP_EMUL,420,13733
	SND_PCM_TYPE_LAST 421,13758
	SND_PCM_TYPE_LAST = SND_PCM_TYPE_MMAP_EMUL421,13758
typedef enum _snd_pcm_type snd_pcm_type_t;425,13822
typedef struct _snd_pcm_channel_area 428,13896
	void *addr;addr430,13975
	unsigned int first;432,14027
	unsigned int step;434,14081
} snd_pcm_channel_area_t;435,14101
typedef union _snd_pcm_sync_id 438,14158
	unsigned char id[id440,14208
	unsigned short id16[id16442,14249
	unsigned int id32[id32444,14292
} snd_pcm_sync_id_t;445,14315
typedef struct _snd_pcm_scope snd_pcm_scope_t;448,14377
static __inline__ int snd_pcm_abort(467,15283
#define SND_CHMAP_API_VERSION	506,17513
enum snd_pcm_chmap_type 509,17600
	SND_CHMAP_TYPE_NONE 510,17626
	SND_CHMAP_TYPE_FIXED,511,17687
	SND_CHMAP_TYPE_VAR,512,17740
	SND_CHMAP_TYPE_PAIRED,513,17802
	SND_CHMAP_TYPE_LAST 514,17870
	SND_CHMAP_TYPE_LAST = SND_CHMAP_TYPE_PAIRED,514,17870
enum snd_pcm_chmap_position 518,17963
	SND_CHMAP_UNKNOWN 519,17993
	SND_CHMAP_NA,520,18037
	SND_CHMAP_MONO,521,18073
	SND_CHMAP_FL,522,18111
	SND_CHMAP_FR,523,18146
	SND_CHMAP_RL,524,18182
	SND_CHMAP_RR,525,18216
	SND_CHMAP_FC,526,18251
	SND_CHMAP_LFE,527,18288
	SND_CHMAP_SL,528,18317
	SND_CHMAP_SR,529,18351
	SND_CHMAP_RC,530,18386
	SND_CHMAP_FLC,531,18422
	SND_CHMAP_FRC,532,18465
	SND_CHMAP_RLC,533,18509
	SND_CHMAP_RRC,534,18551
	SND_CHMAP_FLW,535,18594
	SND_CHMAP_FRW,536,18635
	SND_CHMAP_FLH,537,18677
	SND_CHMAP_FCH,538,18718
	SND_CHMAP_FRH,539,18761
	SND_CHMAP_TC,540,18803
	SND_CHMAP_TFL,541,18838
	SND_CHMAP_TFR,542,18878
	SND_CHMAP_TFC,543,18919
	SND_CHMAP_TRL,544,18961
	SND_CHMAP_TRR,545,19000
	SND_CHMAP_TRC,546,19040
	SND_CHMAP_TFLC,547,19081
	SND_CHMAP_TFRC,548,19129
	SND_CHMAP_TSL,549,19178
	SND_CHMAP_TSR,550,19217
	SND_CHMAP_LLFE,551,19257
	SND_CHMAP_RLFE,552,19292
	SND_CHMAP_BC,553,19328
	SND_CHMAP_BLC,554,19366
	SND_CHMAP_BRC,555,19410
	SND_CHMAP_LAST 556,19455
	SND_CHMAP_LAST = SND_CHMAP_BRC,556,19455
#define SND_CHMAP_POSITION_MASK	560,19528
#define SND_CHMAP_PHASE_INVERSE	563,19626
#define SND_CHMAP_DRIVER_SPEC	565,19730
typedef struct snd_pcm_chmap 568,19805
	unsigned int channels;569,19836
	unsigned int pos[pos570,19887
} snd_pcm_chmap_t;571,19940
typedef struct snd_pcm_chmap_query 574,20030
	enum snd_pcm_chmap_type type;575,20067
	snd_pcm_chmap_t map;576,20123
} snd_pcm_chmap_query_t;577,20176
#define snd_pcm_info_alloca(628,21960
typedef struct _snd_pcm_hw_strategy snd_pcm_hw_strategy_t;679,24672
typedef struct _snd_pcm_hw_strategy_simple_choices_list 682,24785
	unsigned int value;683,24843
	unsigned int badness;684,24864
} snd_pcm_hw_strategy_simple_choices_list_t;685,24887
#define snd_pcm_hw_params_alloca(709,25695
#define snd_pcm_sw_params_alloca(850,38298
#define snd_pcm_access_mask_alloca(898,40918
#define snd_pcm_format_mask_alloca(923,41948
#define snd_pcm_subformat_mask_alloca(948,42990
#define snd_pcm_status_alloca(973,44079
typedef enum _snd_pcm_hook_type 1098,49780
	SND_PCM_HOOK_TYPE_HW_PARAMS 1099,49814
	SND_PCM_HOOK_TYPE_HW_FREE,1100,49848
	SND_PCM_HOOK_TYPE_CLOSE,1101,49876
	SND_PCM_HOOK_TYPE_LAST 1102,49902
	SND_PCM_HOOK_TYPE_LAST = SND_PCM_HOOK_TYPE_CLOSE1102,49902
} snd_pcm_hook_type_t;1103,49952
typedef struct _snd_pcm_hook snd_pcm_hook_t;1106,50002
typedef int (*snd_pcm_hook_func_t)snd_pcm_hook_func_t1108,50081
typedef struct _snd_pcm_scope_ops 1127,50691
	int (*enable)enable1131,50817
	void (*disable)disable1135,50912
	void (*start)start1139,51022
	void (*stop)stop1143,51130
	void (*update)update1147,51239
	void (*reset)reset1151,51340
	void (*close)close1155,51442
} snd_pcm_scope_ops_t;1156,51482
typedef enum _snd_spcm_latency 1187,52717
	SND_SPCM_LATENCY_STANDARD 1190,52865
	SND_SPCM_LATENCY_MEDIUM,1193,52999
	SND_SPCM_LATENCY_REALTIME1196,53156
} snd_spcm_latency_t;1197,53183
typedef enum _snd_spcm_xrun_type 1200,53234
	SND_SPCM_XRUN_IGNORE 1202,53341
	SND_SPCM_XRUN_STOP1204,53430
} snd_spcm_xrun_type_t;1205,53450
typedef enum _snd_spcm_duplex_type 1208,53505
	SND_SPCM_DUPLEX_LIBERAL 1210,53611
	SND_SPCM_DUPLEX_PEDANTIC1212,53706
} snd_spcm_duplex_type_t;1213,53732
const char *snd_pcm_start_mode_name(snd_pcm_start_mode_name1250,54674
const char *snd_pcm_xrun_mode_name(snd_pcm_xrun_mode_name1251,54761
int snd_pcm_sw_params_set_start_mode(1252,54846
snd_pcm_start_t snd_pcm_sw_params_get_start_mode(1253,54978
int snd_pcm_sw_params_set_xrun_mode(1254,55091
snd_pcm_xrun_t snd_pcm_sw_params_get_xrun_mode(1255,55221
int snd_pcm_sw_params_set_xfer_align(1257,55405
int snd_pcm_sw_params_get_xfer_align(1258,55539
int snd_pcm_sw_params_set_sleep_min(1259,55664
int snd_pcm_sw_params_get_sleep_min(1260,55792
int snd_pcm_hw_params_get_tick_time(1263,56048
int snd_pcm_hw_params_get_tick_time_min(1264,56177
int snd_pcm_hw_params_get_tick_time_max(1265,56310
int snd_pcm_hw_params_test_tick_time(1266,56443
int snd_pcm_hw_params_set_tick_time(1267,56581
int snd_pcm_hw_params_set_tick_time_min(1268,56718
int snd_pcm_hw_params_set_tick_time_max(1269,56861
int snd_pcm_hw_params_set_tick_time_minmax(1270,57004
int snd_pcm_hw_params_set_tick_time_near(1271,57185
int snd_pcm_hw_params_set_tick_time_first(1272,57329
int snd_pcm_hw_params_set_tick_time_last(1273,57474

alsa-lib-1.0.29/include/seqmid.h,1415
#define __ALSA_SEQMID_H29,1097
#define snd_seq_ev_clear(48,1450
#define snd_seq_ev_set_tag(58,1673
#define snd_seq_ev_set_dest(71,1979
#define snd_seq_ev_set_subs(82,2234
#define snd_seq_ev_set_broadcast(94,2539
#define snd_seq_ev_set_source(105,2816
#define snd_seq_ev_set_direct(117,3143
#define snd_seq_ev_schedule_tick(132,3568
#define snd_seq_ev_schedule_real(151,4220
#define snd_seq_ev_set_priority(163,4635
#define snd_seq_ev_set_fixed(175,4979
#define snd_seq_ev_set_variable(189,5394
#define snd_seq_ev_set_varusr(205,5912
#define snd_seq_ev_set_queue_control(218,6266
#define snd_seq_ev_set_queue_start(231,6668
#define snd_seq_ev_set_queue_stop(241,6944
#define snd_seq_ev_set_queue_continue(251,7218
#define snd_seq_ev_set_queue_tempo(260,7470
#define snd_seq_ev_set_queue_pos_real(269,7744
#define snd_seq_ev_set_queue_pos_tick(281,8153
#define snd_seq_start_queue(296,8711
#define snd_seq_stop_queue(305,8980
#define snd_seq_continue_queue(314,9255
#define snd_seq_change_queue_tempo(324,9573
#define snd_seq_ev_set_note(371,11289
#define snd_seq_ev_set_noteon(386,11685
#define snd_seq_ev_set_noteoff(400,12044
#define snd_seq_ev_set_keypress(414,12409
#define snd_seq_ev_set_controller(428,12789
#define snd_seq_ev_set_pgmchange(441,13147
#define snd_seq_ev_set_pitchbend(453,13490
#define snd_seq_ev_set_chanpress(465,13817
#define snd_seq_ev_set_sysex(479,14221

alsa-lib-1.0.29/include/asoundlib-head.h,30
#define __ASOUNDLIB_H29,1098

alsa-lib-1.0.29/include/seq_midi_event.h,96
#define __ALSA_SEQ_MIDI_EVENT_H29,1113
typedef struct snd_midi_event snd_midi_event_t;43,1390

alsa-lib-1.0.29/include/pcm_extplug.h,1626
#define __ALSA_PCM_EXTPLUG_H32,1066
	SND_PCM_EXTPLUG_HW_FORMAT,43,1270
	SND_PCM_EXTPLUG_HW_CHANNELS,44,1313
	SND_PCM_EXTPLUG_HW_PARAMS	45,1360
typedef struct snd_pcm_extplug snd_pcm_extplug_t;49,1469
typedef struct snd_pcm_extplug_callback snd_pcm_extplug_callback_t;51,1552
typedef snd_pcm_extplug snd_pcm_extplug_t;54,1681
typedef snd_pcm_extplug_callback snd_pcm_extplug_callback_t;55,1724
#define SND_PCM_EXTPLUG_VERSION_MAJOR	61,1820
#define SND_PCM_EXTPLUG_VERSION_MINOR	62,1891
#define SND_PCM_EXTPLUG_VERSION_TINY	63,1962
#define SND_PCM_EXTPLUG_VERSION	67,2073
struct snd_pcm_extplug 72,2254
	unsigned int version;77,2401
	const char *name;name81,2515
	const snd_pcm_extplug_callback_t *callback;callback85,2630
	void *private_data;private_data89,2752
	snd_pcm_t *pcm;pcm93,2834
	snd_pcm_stream_t stream;97,2900
	snd_pcm_format_t format;101,2993
	snd_pcm_subformat_t subformat;105,3089
	unsigned int channels;109,3190
	unsigned int rate;113,3279
	snd_pcm_format_t slave_format;117,3372
	snd_pcm_subformat_t slave_subformat;121,3480
	unsigned int slave_channels;125,3593
struct snd_pcm_extplug_callback 129,3660
	snd_pcm_sframes_t (*transfer)transfer133,3777
	int (*close)close142,4087
	int (*hw_params)hw_params146,4160
	int (*hw_free)hw_free150,4264
	void (*dump)dump154,4334
	int (*init)init158,4463
	snd_pcm_chmap_query_t **(*query_chmaps)query_chmaps162,4562
	snd_pcm_chmap_t *(*get_chmap)get_chmap166,4686
	int (*set_chmap)set_chmap170,4800
static __inline__ int snd_pcm_extplug_set_param(191,5755
static __inline__ int snd_pcm_extplug_set_slave_param(199,6002

alsa-lib-1.0.29/include/pcm_rate.h,1576
#define __ALSA_PCM_RATE_H32,1091
#define SND_PCM_RATE_PLUGIN_VERSION	41,1186
typedef struct snd_pcm_rate_side_info 44,1279
	snd_pcm_format_t format;45,1319
	unsigned int rate;46,1345
	snd_pcm_uframes_t buffer_size;47,1365
	snd_pcm_uframes_t period_size;48,1397
} snd_pcm_rate_side_info_t;49,1429
typedef struct snd_pcm_rate_info 52,1487
	struct snd_pcm_rate_side_info in;53,1522
	struct snd_pcm_rate_side_info out;54,1557
	unsigned int channels;55,1593
} snd_pcm_rate_info_t;56,1617
typedef struct snd_pcm_rate_ops 59,1681
	void (*close)close63,1759
	int (*init)init67,1846
	void (*free)free71,1941
	void (*reset)reset75,2030
	int (*adjust_pitch)adjust_pitch79,2119
	void (*convert)convert83,2210
	void (*convert_s16)convert_s1691,2519
	snd_pcm_uframes_t (*input_frames)input_frames96,2690
	snd_pcm_uframes_t (*output_frames)output_frames100,2811
	unsigned int version;105,2978
	int (*get_supported_rates)get_supported_rates110,3095
	void (*dump)dump116,3283
} snd_pcm_rate_ops_t;117,3328
typedef int (*snd_pcm_rate_open_func_t)snd_pcm_rate_open_func_t120,3377
#define SND_PCM_RATE_PLUGIN_ENTRY(126,3560
typedef struct snd_pcm_rate_old_ops 131,3698
	void (*close)close132,3736
	int (*init)init133,3763
	void (*free)free134,3815
	void (*reset)reset135,3841
	int (*adjust_pitch)adjust_pitch136,3868
	void (*convert)convert137,3928
	void (*convert_s16)convert_s16142,4161
	snd_pcm_uframes_t (*input_frames)input_frames144,4285
	snd_pcm_uframes_t (*output_frames)output_frames145,4358
} snd_pcm_rate_old_ops_t;146,4432

alsa-lib-1.0.29/include/asoundlib.h,58
#define __ASOUNDLIB_H29,1098
#define __inline__ 44,1361

alsa-lib-1.0.29/include/pcm_plugin.h,493
#define SND_PCM_PLUGIN_RATE_MIN 41,1385
#define SND_PCM_PLUGIN_RATE_MAX 42,1463
#define SND_PCM_PLUGIN_ROUTE_FLOAT 46,1645
#define SND_PCM_PLUGIN_ROUTE_FLOAT 48,1729
#define SND_PCM_PLUGIN_ROUTE_RESOLUTION 51,1813
typedef float snd_pcm_route_ttable_entry_t;55,1963
#define SND_PCM_PLUGIN_ROUTE_HALF 56,2007
#define SND_PCM_PLUGIN_ROUTE_FULL 57,2064
typedef int snd_pcm_route_ttable_entry_t;60,2158
#define SND_PCM_PLUGIN_ROUTE_HALF 61,2200
#define SND_PCM_PLUGIN_ROUTE_FULL 62,2291

alsa-lib-1.0.29/include/version.h,188
#define SND_LIB_MAJOR	5,22
#define SND_LIB_MINOR	6,87
#define SND_LIB_SUBMINOR	7,152
#define SND_LIB_EXTRAVER	8,223
#define SND_LIB_VERSION	10,331
#define SND_LIB_VERSION_STR	14,461

alsa-lib-1.0.29/include/use-case.h,1456
#define __ALSA_USE_CASE_H39,1561
#define SND_USE_CASE_VERB_INACTIVE	100,3712
#define SND_USE_CASE_VERB_HIFI	101,3782
#define SND_USE_CASE_VERB_HIFI_LOW_POWER	102,3842
#define SND_USE_CASE_VERB_VOICE	103,3928
#define SND_USE_CASE_VERB_VOICE_LOW_POWER	104,3991
#define SND_USE_CASE_VERB_VOICECALL	105,4080
#define SND_USE_CASE_VERB_IP_VOICECALL	106,4155
#define SND_USE_CASE_VERB_ANALOG_RADIO	107,4239
#define SND_USE_CASE_VERB_DIGITAL_RADIO	108,4326
#define SND_USE_CASE_DEV_NONE	118,4615
#define SND_USE_CASE_DEV_SPEAKER	119,4674
#define SND_USE_CASE_DEV_LINE	120,4740
#define SND_USE_CASE_DEV_HEADPHONES	121,4799
#define SND_USE_CASE_DEV_HEADSET	122,4874
#define SND_USE_CASE_DEV_HANDSET	123,4940
#define SND_USE_CASE_DEV_BLUETOOTH	124,5006
#define SND_USE_CASE_DEV_EARPIECE	125,5078
#define SND_USE_CASE_DEV_SPDIF	126,5147
#define SND_USE_CASE_DEV_HDMI	127,5209
#define SND_USE_CASE_MOD_CAPTURE_VOICE	149,6022
#define SND_USE_CASE_MOD_CAPTURE_MUSIC	150,6110
#define SND_USE_CASE_MOD_PLAY_MUSIC	151,6198
#define SND_USE_CASE_MOD_PLAY_VOICE	152,6277
#define SND_USE_CASE_MOD_PLAY_TONE	153,6356
#define SND_USE_CASE_MOD_ECHO_REF	154,6432
#define SND_USE_CASE_TQ_MUSIC	166,6793
#define SND_USE_CASE_TQ_VOICE	167,6860
#define SND_USE_CASE_TQ_TONES	168,6927
typedef struct snd_use_case_mgr snd_use_case_mgr_t;171,7021
static __inline__ int snd_use_case_card_list(372,14482
static __inline__ int snd_use_case_verb_list(383,14793

alsa-lib-1.0.29/include/alsa-symbols.h,528
#define __ALSA_SYMBOLS_H23,897
#define USE_VERSIONED_SYMBOLS26,1003
#define INTERNAL_CONCAT2_2(29,1041
#define INTERNAL(30,1089
# define symbol_version(33,1163
# define default_symbol_version(36,1360
# define symbol_version(40,1572
# define default_symbol_version(42,1690
#define use_symbol_version(47,1854
#define use_default_symbol_version(49,1942
#define use_symbol_version(52,2052
#define use_default_symbol_version(54,2135
#define use_default_symbol_version(61,2444
#define use_default_symbol_version(65,2610

alsa-lib-1.0.29/include/config.h,1668
#define ALOAD_DEVICE_DIRECTORY 5,181
#define ALSA_CONFIG_DIR 8,276
#define ALSA_DEVICE_DIRECTORY 14,471
#define ALSA_PKGCONF_DIR 17,557
#define ALSA_PLUGIN_DIR 20,687
#define BUILD_HWDEP 23,796
#define BUILD_MIXER 26,849
#define BUILD_PCM 29,900
#define BUILD_PCM_PLUGIN_ADPCM 32,952
#define BUILD_PCM_PLUGIN_ALAW 35,1016
#define BUILD_PCM_PLUGIN_LFLOAT 38,1081
#define BUILD_PCM_PLUGIN_MMAP_EMUL 41,1151
#define BUILD_PCM_PLUGIN_MULAW 44,1220
#define BUILD_PCM_PLUGIN_RATE 47,1284
#define BUILD_PCM_PLUGIN_ROUTE 50,1348
#define BUILD_RAWMIDI 53,1415
#define BUILD_SEQ 56,1474
#define BUILD_UCM 59,1523
#define HAVE_CLOCK_GETTIME 62,1571
#define HAVE_DLFCN_H 65,1658
#define HAVE_ENDIAN_H 68,1740
#define HAVE_INTTYPES_H 71,1825
#define HAVE_LIBDL 74,1869
#define HAVE_LIBPTHREAD 77,1913
#define HAVE_LIBRT 83,2049
#define HAVE_MEMORY_H 86,2129
#define HAVE_STDINT_H 92,2275
#define HAVE_STDLIB_H 95,2358
#define HAVE_STRINGS_H 98,2442
#define HAVE_STRING_H 101,2526
#define HAVE_SYS_STAT_H 107,2705
#define HAVE_SYS_TYPES_H 110,2793
#define HAVE_UNISTD_H 113,2879
#define HAVE_USELOCALE 116,2960
#define HAVE___THREAD 122,3122
#define LT_OBJDIR 126,3231
#define PACKAGE 132,3324
#define PACKAGE_BUGREPORT 135,3431
#define PACKAGE_NAME 138,3508
#define PACKAGE_STRING 141,3600
#define PACKAGE_TARNAME 144,3701
#define PACKAGE_URL 147,3785
#define PACKAGE_VERSION 150,3854
#define SND_MAX_CARDS 153,3914
#define STDC_HEADERS 156,3995
#define SUPPORT_ALOAD 159,4069
#define TIME_WITH_SYS_TIME 165,4236
#define TMPDIR 168,4306
#define VERSION 171,4364
#define VERSIONED_SYMBOLS 174,4428
#define __SYMBOL_PREFIX 177,4490

alsa-lib-1.0.29/include/sound/sscape_ioctl.h,295
#define SSCAPE_IOCTL_H2,23
struct sscape_bootblock5,48
  unsigned char code[code7,74
  unsigned version;8,101
#define SSCAPE_MICROCODE_SIZE 11,125
struct sscape_microcode13,163
  unsigned char *code;code15,189
#define SND_SSCAPE_LOAD_BOOTB 18,216
#define SND_SSCAPE_LOAD_MCODE 19,288

alsa-lib-1.0.29/include/sound/hdsp.h,2401
#define __SOUND_HDSP_H2,23
#define HDSP_MATRIX_MIXER_SIZE 24,864
	Digiface,27,916
	Multiface,28,927
	H9652,29,939
	H9632,30,947
	RPM,31,955
	Undefined,32,961
} HDSP_IO_Type;33,973
typedef struct _snd_hdsp_peak_rms hdsp_peak_rms_t;35,990
struct _snd_hdsp_peak_rms 37,1042
	uint32_t input_peaks[input_peaks38,1070
	uint32_t playback_peaks[playback_peaks39,1097
	uint32_t output_peaks[output_peaks40,1127
	uint64_t input_rms[input_rms41,1155
	uint64_t playback_rms[playback_rms42,1180
	uint64_t output_rms[output_rms44,1251
#define SNDRV_HDSP_IOCTL_GET_PEAK_RMS 47,1281
typedef struct _snd_hdsp_config_info hdsp_config_info_t;49,1353
struct _snd_hdsp_config_info 51,1411
	unsigned char pref_sync_ref;52,1442
	unsigned char wordclock_sync_check;53,1472
	unsigned char spdif_sync_check;54,1509
	unsigned char adatsync_sync_check;55,1542
	unsigned char adat_sync_check[adat_sync_check56,1578
	unsigned char spdif_in;57,1613
	unsigned char spdif_out;58,1638
	unsigned char spdif_professional;59,1664
	unsigned char spdif_emphasis;60,1699
	unsigned char spdif_nonaudio;61,1730
	unsigned int spdif_sample_rate;62,1761
	unsigned int system_sample_rate;63,1794
	unsigned int autosync_sample_rate;64,1828
	unsigned char system_clock_mode;65,1864
	unsigned char clock_source;66,1898
	unsigned char autosync_ref;67,1927
	unsigned char line_out;68,1956
	unsigned char passthru;69,1981
	unsigned char da_gain;70,2007
	unsigned char ad_gain;71,2031
	unsigned char phone_gain;72,2055
	unsigned char xlr_breakout_cable;73,2082
	unsigned char analog_extension_board;74,2117
#define SNDRV_HDSP_IOCTL_GET_CONFIG_INFO 77,2160
typedef struct _snd_hdsp_firmware hdsp_firmware_t;79,2238
struct _snd_hdsp_firmware 81,2290
	void *firmware_data;firmware_data82,2318
#define SNDRV_HDSP_IOCTL_UPLOAD_FIRMWARE 85,2366
typedef struct _snd_hdsp_version hdsp_version_t;87,2441
struct _snd_hdsp_version 89,2491
	HDSP_IO_Type io_type;90,2518
	unsigned short firmware_rev;91,2541
#define SNDRV_HDSP_IOCTL_GET_VERSION 94,2575
typedef struct _snd_hdsp_mixer hdsp_mixer_t;96,2645
struct _snd_hdsp_mixer 98,2691
	unsigned short matrix[matrix99,2716
#define SNDRV_HDSP_IOCTL_GET_MIXER 102,2768
typedef struct _snd_hdsp_9632_aeb hdsp_9632_aeb_t;104,2834
struct _snd_hdsp_9632_aeb 106,2886
	int aebi;107,2914
	int aebo;108,2925
#define SNDRV_HDSP_IOCTL_GET_9632_AEB 111,2940

alsa-lib-1.0.29/include/sound/hdspm.h,3597
#define __SOUND_HDSPM_H2,24
#define HDSPM_MAX_CHANNELS 24,966
enum hdspm_io_type 26,1002
	MADI,27,1023
	MADIface,28,1030
	AIO,29,1041
	AES32,30,1047
	RayDAT31,1055
enum hdspm_speed 34,1067
	ss,35,1086
	ds,36,1091
	qs37,1096
struct hdspm_peak_rms 42,1175
	uint32_t input_peaks[input_peaks43,1199
	uint32_t playback_peaks[playback_peaks44,1226
	uint32_t output_peaks[output_peaks45,1256
	uint64_t input_rms[input_rms47,1285
	uint64_t playback_rms[playback_rms48,1310
	uint64_t output_rms[output_rms49,1338
	uint8_t speed;51,1365
	int status2;52,1405
#define SNDRV_HDSPM_IOCTL_GET_PEAK_RMS 55,1423
struct hdspm_config 60,1567
	unsigned char pref_sync_ref;61,1589
	unsigned char wordclock_sync_check;62,1619
	unsigned char madi_sync_check;63,1656
	unsigned int system_sample_rate;64,1688
	unsigned int autosync_sample_rate;65,1722
	unsigned char system_clock_mode;66,1758
	unsigned char clock_source;67,1792
	unsigned char autosync_ref;68,1821
	unsigned char line_out;69,1850
	unsigned int passthru;70,1875
	unsigned int analog_out;71,1899
#define SNDRV_HDSPM_IOCTL_GET_CONFIG 74,1929
enum hdspm_ltc_format 86,2309
	format_invalid,87,2333
	fps_24,88,2350
	fps_25,89,2359
	fps_2997,90,2368
	fps_3091,2379
enum hdspm_ltc_frame 94,2391
	frame_invalid,95,2414
	drop_frame,96,2430
	full_frame97,2443
enum hdspm_ltc_input_format 100,2459
	ntsc,101,2489
	pal,102,2496
	no_video103,2502
struct hdspm_ltc 106,2516
	unsigned int ltc;107,2535
	enum hdspm_ltc_format format;109,2555
	enum hdspm_ltc_frame frame;110,2586
	enum hdspm_ltc_input_format input_format;111,2615
#define SNDRV_HDSPM_IOCTL_GET_LTC 114,2662
enum hdspm_sync 122,2867
	hdspm_sync_no_lock 123,2885
	hdspm_sync_lock 124,2910
	hdspm_sync_sync 125,2932
enum hdspm_madi_input 128,2957
	hdspm_input_optical 129,2981
	hdspm_input_coax 130,3007
enum hdspm_madi_channel_format 133,3033
	hdspm_format_ch_64 134,3066
	hdspm_format_ch_56 135,3091
enum hdspm_madi_frame_format 138,3119
	hdspm_frame_48 139,3150
	hdspm_frame_96 140,3171
enum hdspm_syncsource 143,3195
	syncsource_wc 144,3219
	syncsource_madi 145,3239
	syncsource_tco 146,3261
	syncsource_sync 147,3282
	syncsource_none 148,3304
struct hdspm_status 151,3329
	uint8_t card_type;152,3351
	enum hdspm_syncsource autosync_source;153,3396
	uint64_t card_clock;155,3437
	uint32_t master_period;156,3459
			uint8_t sync_wc;160,3505
			uint8_t sync_madi;161,3547
			uint8_t sync_tco;162,3591
			uint8_t sync_in;163,3634
			uint8_t madi_input;164,3676
			uint8_t channel_format;165,3727
			uint8_t frame_format;166,3791
		} madi;167,3851
	} card_specific;168,3861
#define SNDRV_HDSPM_IOCTL_GET_STATUS 171,3883
#define HDSPM_ADDON_TCO 178,4022
struct hdspm_version 180,4049
	uint8_t card_type;181,4072
	char cardname[cardname182,4117
	unsigned int serial;183,4137
	unsigned short firmware_rev;184,4159
	int addons;185,4189
#define SNDRV_HDSPM_IOCTL_GET_VERSION 188,4206
#define HDSPM_MIXER_CHANNELS 203,4711
struct hdspm_channelfader 205,4760
	unsigned int in[in206,4788
	unsigned int pb[pb207,4828
struct hdspm_mixer 210,4872
	struct hdspm_channelfader ch[ch211,4893
struct hdspm_mixer_ioctl 214,4950
	struct hdspm_mixer *mixer;mixer215,4977
#define SNDRV_HDSPM_IOCTL_GET_MIXER 219,5070
typedef struct hdspm_peak_rms hdspm_peak_rms_t;222,5196
typedef struct hdspm_config_info hdspm_config_info_t;223,5244
typedef struct hdspm_version hdspm_version_t;224,5298
typedef struct hdspm_channelfader snd_hdspm_channelfader_t;225,5344
typedef struct hdspm_mixer hdspm_mixer_t;226,5404

alsa-lib-1.0.29/include/sound/asound.h,28553
#define _UAPI__SOUND_ASOUND_H24,972
#define SNDRV_PROTOCOL_VERSION(33,1059
#define SNDRV_PROTOCOL_MAJOR(34,1154
#define SNDRV_PROTOCOL_MINOR(35,1217
#define SNDRV_PROTOCOL_MICRO(36,1277
#define SNDRV_PROTOCOL_INCOMPATIBLE(37,1332
struct snd_aes_iec958 48,1965
	unsigned char status[status49,1989
	unsigned char subcode[subcode50,2053
	unsigned char pad;51,2112
	unsigned char dig_subframe[dig_subframe52,2147
struct snd_cea_861_aud_if 61,2599
	unsigned char db1_ct_cc;62,2627
	unsigned char db2_sf_ss;63,2689
	unsigned char db3;64,2747
	unsigned char db4_ca;65,2793
	unsigned char db5_dminh_lsv;66,2846
#define SNDRV_HWDEP_VERSION	75,3314
	SNDRV_HWDEP_IFACE_OPL2 78,3383
	SNDRV_HWDEP_IFACE_OPL3,79,3412
	SNDRV_HWDEP_IFACE_OPL4,80,3437
	SNDRV_HWDEP_IFACE_SB16CSP,81,3462
	SNDRV_HWDEP_IFACE_EMU10K1,82,3522
	SNDRV_HWDEP_IFACE_YSS225,83,3589
	SNDRV_HWDEP_IFACE_ICS2115,84,3642
	SNDRV_HWDEP_IFACE_SSCAPE,85,3692
	SNDRV_HWDEP_IFACE_VX,86,3765
	SNDRV_HWDEP_IFACE_MIXART,87,3813
	SNDRV_HWDEP_IFACE_USX2Y,88,3868
	SNDRV_HWDEP_IFACE_EMUX_WAVETABLE,89,3932
	SNDRV_HWDEP_IFACE_BLUETOOTH,90,3989
	SNDRV_HWDEP_IFACE_USX2Y_PCM,91,4041
	SNDRV_HWDEP_IFACE_PCXHR,92,4116
	SNDRV_HWDEP_IFACE_SB_RC,93,4163
	SNDRV_HWDEP_IFACE_HDA,94,4230
	SNDRV_HWDEP_IFACE_USB_STREAM,95,4270
	SNDRV_HWDEP_IFACE_FW_DICE,96,4335
	SNDRV_HWDEP_IFACE_FW_FIREWORKS,97,4393
	SNDRV_HWDEP_IFACE_FW_BEBOB,98,4466
	SNDRV_HWDEP_IFACE_FW_OXFW,99,4529
	SNDRV_HWDEP_IFACE_LAST 102,4641
	SNDRV_HWDEP_IFACE_LAST = SNDRV_HWDEP_IFACE_FW_OXFW102,4641
struct snd_hwdep_info 105,4697
	unsigned int device;106,4721
	int card;107,4768
	unsigned char id[id108,4802
	unsigned char name[name109,4853
	int iface;110,4896
	unsigned char reserved[reserved111,4932
struct snd_hwdep_dsp_status 115,5016
	unsigned int version;116,5046
	unsigned char id[id117,5103
	unsigned int num_dsps;118,5162
	unsigned int dsp_loaded;119,5229
	unsigned int chip_ready;120,5301
	unsigned char reserved[reserved121,5364
struct snd_hwdep_dsp_image 124,5427
	unsigned int index;125,5456
	unsigned char name[name126,5497
	unsigned char __user *image;image127,5552
	size_t length;128,5604
	unsigned long driver_data;129,5654
#define SNDRV_HWDEP_IOCTL_PVERSION	132,5716
#define SNDRV_HWDEP_IOCTL_INFO	133,5773
#define SNDRV_HWDEP_IOCTL_DSP_STATUS	134,5845
#define SNDRV_HWDEP_IOCTL_DSP_LOAD	135,5927
#define SNDRV_PCM_VERSION	143,6404
typedef unsigned long snd_pcm_uframes_t;145,6465
typedef signed long snd_pcm_sframes_t;146,6506
	SNDRV_PCM_CLASS_GENERIC 149,6553
	SNDRV_PCM_CLASS_MULTI,150,6620
	SNDRV_PCM_CLASS_MODEM,151,6671
	SNDRV_PCM_CLASS_DIGITIZER,152,6723
	SNDRV_PCM_CLASS_LAST 154,6818
	SNDRV_PCM_CLASS_LAST = SNDRV_PCM_CLASS_DIGITIZER,154,6818
	SNDRV_PCM_SUBCLASS_GENERIC_MIX 158,6880
	SNDRV_PCM_SUBCLASS_MULTI_MIX,159,6968
	SNDRV_PCM_SUBCLASS_LAST 161,7093
	SNDRV_PCM_SUBCLASS_LAST = SNDRV_PCM_SUBCLASS_MULTI_MIX,161,7093
	SNDRV_PCM_STREAM_PLAYBACK 165,7161
	SNDRV_PCM_STREAM_CAPTURE,166,7193
	SNDRV_PCM_STREAM_LAST 167,7220
	SNDRV_PCM_STREAM_LAST = SNDRV_PCM_STREAM_CAPTURE,167,7220
typedef int __bitwise snd_pcm_access_t;170,7275
#define	SNDRV_PCM_ACCESS_MMAP_INTERLEAVED	171,7315
#define	SNDRV_PCM_ACCESS_MMAP_NONINTERLEAVED	172,7411
#define	SNDRV_PCM_ACCESS_MMAP_COMPLEX	173,7513
#define	SNDRV_PCM_ACCESS_RW_INTERLEAVED	174,7602
#define	SNDRV_PCM_ACCESS_RW_NONINTERLEAVED	175,7693
#define	SNDRV_PCM_ACCESS_LAST	176,7786
typedef int __bitwise snd_pcm_format_t;178,7853
#define	SNDRV_PCM_FORMAT_S8	179,7893
#define	SNDRV_PCM_FORMAT_U8	180,7952
#define	SNDRV_PCM_FORMAT_S16_LE	181,8011
#define	SNDRV_PCM_FORMAT_S16_BE	182,8074
#define	SNDRV_PCM_FORMAT_U16_LE	183,8137
#define	SNDRV_PCM_FORMAT_U16_BE	184,8200
#define	SNDRV_PCM_FORMAT_S24_LE	185,8263
#define	SNDRV_PCM_FORMAT_S24_BE	186,8348
#define	SNDRV_PCM_FORMAT_U24_LE	187,8433
#define	SNDRV_PCM_FORMAT_U24_BE	188,8518
#define	SNDRV_PCM_FORMAT_S32_LE	189,8603
#define	SNDRV_PCM_FORMAT_S32_BE	190,8667
#define	SNDRV_PCM_FORMAT_U32_LE	191,8731
#define	SNDRV_PCM_FORMAT_U32_BE	192,8795
#define	SNDRV_PCM_FORMAT_FLOAT_LE	193,8859
#define	SNDRV_PCM_FORMAT_FLOAT_BE	194,8980
#define	SNDRV_PCM_FORMAT_FLOAT64_LE	195,9101
#define	SNDRV_PCM_FORMAT_FLOAT64_BE	196,9224
#define	SNDRV_PCM_FORMAT_IEC958_SUBFRAME_LE 197,9347
#define	SNDRV_PCM_FORMAT_IEC958_SUBFRAME_BE 198,9461
#define	SNDRV_PCM_FORMAT_MU_LAW	199,9572
#define	SNDRV_PCM_FORMAT_A_LAW	200,9637
#define	SNDRV_PCM_FORMAT_IMA_ADPCM	201,9701
#define	SNDRV_PCM_FORMAT_MPEG	202,9768
#define	SNDRV_PCM_FORMAT_GSM	203,9831
#define	SNDRV_PCM_FORMAT_SPECIAL	204,9893
#define	SNDRV_PCM_FORMAT_S24_3LE	205,9958
#define	SNDRV_PCM_FORMAT_S24_3BE	206,10044
#define	SNDRV_PCM_FORMAT_U24_3LE	207,10130
#define	SNDRV_PCM_FORMAT_U24_3BE	208,10216
#define	SNDRV_PCM_FORMAT_S20_3LE	209,10302
#define	SNDRV_PCM_FORMAT_S20_3BE	210,10388
#define	SNDRV_PCM_FORMAT_U20_3LE	211,10474
#define	SNDRV_PCM_FORMAT_U20_3BE	212,10560
#define	SNDRV_PCM_FORMAT_S18_3LE	213,10646
#define	SNDRV_PCM_FORMAT_S18_3BE	214,10732
#define	SNDRV_PCM_FORMAT_U18_3LE	215,10818
#define	SNDRV_PCM_FORMAT_U18_3BE	216,10904
#define	SNDRV_PCM_FORMAT_G723_24	217,10990
#define	SNDRV_PCM_FORMAT_G723_24_1B	218,11082
#define	SNDRV_PCM_FORMAT_G723_40	219,11175
#define	SNDRV_PCM_FORMAT_G723_40_1B	220,11267
#define	SNDRV_PCM_FORMAT_DSD_U8	221,11360
#define	SNDRV_PCM_FORMAT_DSD_U16_LE	222,11460
#define	SNDRV_PCM_FORMAT_DSD_U32_LE	223,11579
#define	SNDRV_PCM_FORMAT_DSD_U16_BE	224,11698
#define	SNDRV_PCM_FORMAT_DSD_U32_BE	225,11814
#define	SNDRV_PCM_FORMAT_LAST	226,11930
#define	SNDRV_PCM_FORMAT_S16	229,12017
#define	SNDRV_PCM_FORMAT_U16	230,12071
#define	SNDRV_PCM_FORMAT_S24	231,12125
#define	SNDRV_PCM_FORMAT_U24	232,12179
#define	SNDRV_PCM_FORMAT_S32	233,12233
#define	SNDRV_PCM_FORMAT_U32	234,12287
#define	SNDRV_PCM_FORMAT_FLOAT	235,12341
#define	SNDRV_PCM_FORMAT_FLOAT64	236,12399
#define	SNDRV_PCM_FORMAT_IEC958_SUBFRAME 237,12460
#define	SNDRV_PCM_FORMAT_S16	240,12568
#define	SNDRV_PCM_FORMAT_U16	241,12622
#define	SNDRV_PCM_FORMAT_S24	242,12676
#define	SNDRV_PCM_FORMAT_U24	243,12730
#define	SNDRV_PCM_FORMAT_S32	244,12784
#define	SNDRV_PCM_FORMAT_U32	245,12838
#define	SNDRV_PCM_FORMAT_FLOAT	246,12892
#define	SNDRV_PCM_FORMAT_FLOAT64	247,12950
#define	SNDRV_PCM_FORMAT_IEC958_SUBFRAME 248,13011
typedef int __bitwise snd_pcm_subformat_t;251,13096
#define	SNDRV_PCM_SUBFORMAT_STD	252,13139
#define	SNDRV_PCM_SUBFORMAT_LAST	253,13206
#define SNDRV_PCM_INFO_MMAP	255,13264
#define SNDRV_PCM_INFO_MMAP_VALID	256,13333
#define SNDRV_PCM_INFO_DOUBLE	257,13422
#define SNDRV_PCM_INFO_BATCH	258,13513
#define SNDRV_PCM_INFO_INTERLEAVED	259,13577
#define SNDRV_PCM_INFO_NONINTERLEAVED	260,13654
#define SNDRV_PCM_INFO_COMPLEX	261,13738
#define SNDRV_PCM_INFO_BLOCK_TRANSFER	262,13826
#define SNDRV_PCM_INFO_OVERRANGE	263,13916
#define SNDRV_PCM_INFO_RESUME	264,14018
#define SNDRV_PCM_INFO_PAUSE	265,14112
#define SNDRV_PCM_INFO_HALF_DUPLEX	266,14184
#define SNDRV_PCM_INFO_JOINT_DUPLEX	267,14253
#define SNDRV_PCM_INFO_SYNC_START	268,14358
#define SNDRV_PCM_INFO_NO_PERIOD_WAKEUP	269,14442
#define SNDRV_PCM_INFO_HAS_WALL_CLOCK 270,14529
#define SNDRV_PCM_INFO_FIFO_IN_FRAMES	271,14639
typedef int __bitwise snd_pcm_state_t;273,14741
#define	SNDRV_PCM_STATE_OPEN	274,14780
#define	SNDRV_PCM_STATE_SETUP	275,14861
#define	SNDRV_PCM_STATE_PREPARED	276,14947
#define	SNDRV_PCM_STATE_RUNNING	277,15041
#define	SNDRV_PCM_STATE_XRUN	278,15128
#define	SNDRV_PCM_STATE_DRAINING	279,15217
#define	SNDRV_PCM_STATE_PAUSED	280,15305
#define	SNDRV_PCM_STATE_SUSPENDED	281,15390
#define	SNDRV_PCM_STATE_DISCONNECTED	282,15482
#define	SNDRV_PCM_STATE_LAST	283,15580
	SNDRV_PCM_MMAP_OFFSET_DATA 286,15647
	SNDRV_PCM_MMAP_OFFSET_DATA = 0x00000000,x00000000286,15647
	SNDRV_PCM_MMAP_OFFSET_STATUS 287,15689
	SNDRV_PCM_MMAP_OFFSET_STATUS = 0x80000000,x80000000287,15689
	SNDRV_PCM_MMAP_OFFSET_CONTROL 288,15733
	SNDRV_PCM_MMAP_OFFSET_CONTROL = 0x81000000,x81000000288,15733
union snd_pcm_sync_id 291,15782
	unsigned char id[id292,15806
	unsigned short id16[id16293,15829
	unsigned int id32[id32294,15854
struct snd_pcm_info 297,15881
	unsigned int device;298,15903
	unsigned int subdevice;299,15963
	int stream;300,16029
	int card;301,16084
	unsigned char id[id302,16118
	unsigned char name[name303,16169
	unsigned char subname[subname304,16221
	int dev_class;305,16270
	int dev_subclass;306,16312
	unsigned int subdevices_count;307,16359
	unsigned int subdevices_avail;308,16391
	union snd_pcm_sync_id sync;309,16423
	unsigned char reserved[reserved310,16486
typedef int snd_pcm_hw_param_t;313,16548
#define	SNDRV_PCM_HW_PARAM_ACCESS	314,16580
#define	SNDRV_PCM_HW_PARAM_FORMAT	315,16634
#define	SNDRV_PCM_HW_PARAM_SUBFORMAT	316,16683
#define	SNDRV_PCM_HW_PARAM_FIRST_MASK	317,16738
#define	SNDRV_PCM_HW_PARAM_LAST_MASK	318,16802
#define	SNDRV_PCM_HW_PARAM_SAMPLE_BITS	320,16869
#define	SNDRV_PCM_HW_PARAM_FRAME_BITS	321,16932
#define	SNDRV_PCM_HW_PARAM_CHANNELS	322,16993
#define	SNDRV_PCM_HW_PARAM_RATE	323,17047
#define	SNDRV_PCM_HW_PARAM_PERIOD_TIME	324,17101
#define	SNDRV_PCM_HW_PARAM_PERIOD_SIZE	327,17206
#define	SNDRV_PCM_HW_PARAM_PERIOD_BYTES	330,17303
#define	SNDRV_PCM_HW_PARAM_PERIODS	333,17400
#define	SNDRV_PCM_HW_PARAM_BUFFER_TIME	336,17489
#define	SNDRV_PCM_HW_PARAM_BUFFER_SIZE	339,17585
#define	SNDRV_PCM_HW_PARAM_BUFFER_BYTES	340,17658
#define	SNDRV_PCM_HW_PARAM_TICK_TIME	341,17731
#define	SNDRV_PCM_HW_PARAM_FIRST_INTERVAL	342,17804
#define	SNDRV_PCM_HW_PARAM_LAST_INTERVAL	343,17877
#define SNDRV_PCM_HW_PARAMS_NORESAMPLE	345,17948
#define SNDRV_PCM_HW_PARAMS_EXPORT_BUFFER	346,18022
#define SNDRV_PCM_HW_PARAMS_NO_PERIOD_WAKEUP	347,18091
struct snd_interval 349,18173
	unsigned int min,350,18195
	unsigned int min, max;350,18195
	unsigned int openmin:openmin351,18219
		     openmax:openmax352,18244
		     integer:integer353,18262
		     empty:empty354,18280
#define SNDRV_MASK_MAX	357,18300
struct snd_mask 359,18328
struct snd_pcm_hw_params 363,18387
	unsigned int flags;364,18414
			       SNDRV_PCM_HW_CM_HW366,18490
	struct snd_mask mres[mres367,18536
				        SNDRV_PCM_HW_PARAM__HW_PARAM369,18649
	struct snd_interval ires[ires370,18701
	unsigned int rmask;371,18756
	unsigned int cmask;372,18803
	unsigned int info;373,18848
	unsigned int msbits;374,18908
	unsigned int rate_num;375,18967
	unsigned int rate_den;376,19016
	snd_pcm_uframes_t fifo_size;377,19067
	unsigned char reserved[reserved378,19131
	SNDRV_PCM_TSTAMP_NONE 382,19197
	SNDRV_PCM_TSTAMP_ENABLE,383,19225
	SNDRV_PCM_TSTAMP_LAST 384,19251
	SNDRV_PCM_TSTAMP_LAST = SNDRV_PCM_TSTAMP_ENABLE,384,19251
struct snd_pcm_sw_params 387,19305
	int tstamp_mode;388,19332
	unsigned int period_step;389,19373
	unsigned int sleep_min;390,19400
	snd_pcm_uframes_t avail_min;391,19452
	snd_pcm_uframes_t xfer_align;392,19517
	snd_pcm_uframes_t start_threshold;393,19597
	snd_pcm_uframes_t stop_threshold;394,19679
	snd_pcm_uframes_t silence_threshold;395,19756
	snd_pcm_uframes_t silence_size;396,19844
	snd_pcm_uframes_t boundary;397,19903
	unsigned int proto;398,19959
	unsigned int tstamp_type;399,20005
	unsigned char reserved[reserved400,20077
struct snd_pcm_channel_info 403,20137
	unsigned int channel;404,20167
	__kernel_off_t offset;405,20190
	unsigned int first;406,20233
	unsigned int step;407,20292
struct snd_pcm_status 410,20348
	snd_pcm_state_t state;411,20372
	struct timespec trigger_tstamp;412,20416
	struct timespec tstamp;413,20499
	snd_pcm_uframes_t appl_ptr;414,20551
	snd_pcm_uframes_t hw_ptr;415,20595
	snd_pcm_sframes_t delay;416,20635
	snd_pcm_uframes_t avail;417,20691
	snd_pcm_uframes_t avail_max;418,20750
	snd_pcm_uframes_t overrange;419,20831
	snd_pcm_state_t suspended_state;420,20928
	__u32 reserved_alignment;421,20991
	struct timespec audio_tstamp;422,21049
	unsigned char reserved[reserved423,21120
struct snd_pcm_mmap_status 426,21208
	snd_pcm_state_t state;427,21237
	int pad1;428,21301
	snd_pcm_uframes_t hw_ptr;429,21348
	struct timespec tstamp;430,21409
	snd_pcm_state_t suspended_state;431,21451
	struct timespec audio_tstamp;432,21518
struct snd_pcm_mmap_control 435,21593
	snd_pcm_uframes_t appl_ptr;436,21623
	snd_pcm_uframes_t avail_min;437,21688
#define SNDRV_PCM_SYNC_PTR_HWSYNC	440,21764
#define SNDRV_PCM_SYNC_PTR_APPL	441,21826
#define SNDRV_PCM_SYNC_PTR_AVAIL_MIN	442,21906
struct snd_pcm_sync_ptr 444,21983
	unsigned int flags;445,22009
		struct snd_pcm_mmap_status status;447,22039
		unsigned char reserved[reserved448,22076
	} s;449,22106
		struct snd_pcm_mmap_control control;451,22121
		unsigned char reserved[reserved452,22160
	} c;453,22190
struct snd_xferi 456,22200
	snd_pcm_sframes_t result;457,22219
	void __user *buf;buf458,22246
	snd_pcm_uframes_t frames;459,22265
struct snd_xfern 462,22296
	snd_pcm_sframes_t result;463,22315
	void __user * __user *bufs;bufs464,22342
	snd_pcm_uframes_t frames;465,22371
	SNDRV_PCM_TSTAMP_TYPE_GETTIMEOFDAY 469,22409
	SNDRV_PCM_TSTAMP_TYPE_MONOTONIC,470,22480
	SNDRV_PCM_TSTAMP_TYPE_MONOTONIC_RAW,471,22553
	SNDRV_PCM_TSTAMP_TYPE_LAST 472,22623
	SNDRV_PCM_TSTAMP_TYPE_LAST = SNDRV_PCM_TSTAMP_TYPE_MONOTONIC_RAW,472,22623
	SNDRV_CHMAP_UNKNOWN 477,22725
	SNDRV_CHMAP_NA,478,22751
	SNDRV_CHMAP_MONO,479,22787
	SNDRV_CHMAP_FL,481,22881
	SNDRV_CHMAP_FR,482,22916
	SNDRV_CHMAP_RL,483,22952
	SNDRV_CHMAP_RR,484,22986
	SNDRV_CHMAP_FC,485,23021
	SNDRV_CHMAP_LFE,486,23058
	SNDRV_CHMAP_SL,487,23086
	SNDRV_CHMAP_SR,488,23120
	SNDRV_CHMAP_RC,489,23155
	SNDRV_CHMAP_FLC,491,23214
	SNDRV_CHMAP_FRC,492,23256
	SNDRV_CHMAP_RLC,493,23299
	SNDRV_CHMAP_RRC,494,23340
	SNDRV_CHMAP_FLW,495,23382
	SNDRV_CHMAP_FRW,496,23422
	SNDRV_CHMAP_FLH,497,23463
	SNDRV_CHMAP_FCH,498,23503
	SNDRV_CHMAP_FRH,499,23545
	SNDRV_CHMAP_TC,500,23586
	SNDRV_CHMAP_TFL,501,23621
	SNDRV_CHMAP_TFR,502,23660
	SNDRV_CHMAP_TFC,503,23700
	SNDRV_CHMAP_TRL,504,23741
	SNDRV_CHMAP_TRR,505,23779
	SNDRV_CHMAP_TRC,506,23818
	SNDRV_CHMAP_TFLC,508,23890
	SNDRV_CHMAP_TFRC,509,23937
	SNDRV_CHMAP_TSL,510,23985
	SNDRV_CHMAP_TSR,511,24023
	SNDRV_CHMAP_LLFE,512,24062
	SNDRV_CHMAP_RLFE,513,24096
	SNDRV_CHMAP_BC,514,24131
	SNDRV_CHMAP_BLC,515,24169
	SNDRV_CHMAP_BRC,516,24212
	SNDRV_CHMAP_LAST 517,24256
	SNDRV_CHMAP_LAST = SNDRV_CHMAP_BRC,517,24256
#define SNDRV_CHMAP_POSITION_MASK	520,24297
#define SNDRV_CHMAP_PHASE_INVERSE	521,24338
#define SNDRV_CHMAP_DRIVER_SPEC	522,24385
#define SNDRV_PCM_IOCTL_PVERSION	524,24432
#define SNDRV_PCM_IOCTL_INFO	525,24486
#define SNDRV_PCM_IOCTL_TSTAMP	526,24553
#define SNDRV_PCM_IOCTL_TTSTAMP	527,24606
#define SNDRV_PCM_IOCTL_HW_REFINE	528,24660
#define SNDRV_PCM_IOCTL_HW_PARAMS	529,24737
#define SNDRV_PCM_IOCTL_HW_FREE	530,24814
#define SNDRV_PCM_IOCTL_SW_PARAMS	531,24862
#define SNDRV_PCM_IOCTL_STATUS	532,24939
#define SNDRV_PCM_IOCTL_DELAY	533,25010
#define SNDRV_PCM_IOCTL_HWSYNC	534,25076
#define SNDRV_PCM_IOCTL_SYNC_PTR	535,25123
#define SNDRV_PCM_IOCTL_CHANNEL_INFO	536,25198
#define SNDRV_PCM_IOCTL_PREPARE	537,25280
#define SNDRV_PCM_IOCTL_RESET	538,25328
#define SNDRV_PCM_IOCTL_START	539,25374
#define SNDRV_PCM_IOCTL_DROP	540,25420
#define SNDRV_PCM_IOCTL_DRAIN	541,25465
#define SNDRV_PCM_IOCTL_PAUSE	542,25511
#define SNDRV_PCM_IOCTL_REWIND	543,25563
#define SNDRV_PCM_IOCTL_RESUME	544,25630
#define SNDRV_PCM_IOCTL_XRUN	545,25677
#define SNDRV_PCM_IOCTL_FORWARD	546,25722
#define SNDRV_PCM_IOCTL_WRITEI_FRAMES	547,25790
#define SNDRV_PCM_IOCTL_READI_FRAMES	548,25862
#define SNDRV_PCM_IOCTL_WRITEN_FRAMES	549,25933
#define SNDRV_PCM_IOCTL_READN_FRAMES	550,26005
#define SNDRV_PCM_IOCTL_LINK	551,26076
#define SNDRV_PCM_IOCTL_UNLINK	552,26127
#define SNDRV_RAWMIDI_VERSION	564,26619
	SNDRV_RAWMIDI_STREAM_OUTPUT 567,26690
	SNDRV_RAWMIDI_STREAM_INPUT,568,26724
	SNDRV_RAWMIDI_STREAM_LAST 569,26753
	SNDRV_RAWMIDI_STREAM_LAST = SNDRV_RAWMIDI_STREAM_INPUT,569,26753
#define SNDRV_RAWMIDI_INFO_OUTPUT	572,26814
#define SNDRV_RAWMIDI_INFO_INPUT	573,26860
#define SNDRV_RAWMIDI_INFO_DUPLEX	574,26905
struct snd_rawmidi_info 576,26952
	unsigned int device;577,26978
	unsigned int subdevice;578,27038
	int stream;579,27104
	int card;580,27136
	unsigned int flags;581,27170
	unsigned char id[id582,27222
	unsigned char name[name583,27273
	unsigned char subname[subname584,27320
	unsigned int subdevices_count;585,27391
	unsigned int subdevices_avail;586,27423
	unsigned char reserved[reserved587,27455
struct snd_rawmidi_params 590,27518
	int stream;591,27546
	size_t buffer_size;592,27559
	size_t avail_min;593,27607
	unsigned int no_active_sensing:no_active_sensing594,27664
	unsigned char reserved[reserved595,27749
struct snd_rawmidi_status 598,27812
	int stream;599,27840
	struct timespec tstamp;600,27853
	size_t avail;601,27895
	size_t xruns;602,27934
	unsigned char reserved[reserved603,28004
#define SNDRV_RAWMIDI_IOCTL_PVERSION	606,28067
#define SNDRV_RAWMIDI_IOCTL_INFO	607,28125
#define SNDRV_RAWMIDI_IOCTL_PARAMS	608,28199
#define SNDRV_RAWMIDI_IOCTL_STATUS	609,28278
#define SNDRV_RAWMIDI_IOCTL_DROP	610,28357
#define SNDRV_RAWMIDI_IOCTL_DRAIN	611,28411
#define SNDRV_TIMER_VERSION	617,28510
	SNDRV_TIMER_CLASS_NONE 620,28579
	SNDRV_TIMER_CLASS_SLAVE 621,28609
	SNDRV_TIMER_CLASS_GLOBAL,622,28639
	SNDRV_TIMER_CLASS_CARD,623,28666
	SNDRV_TIMER_CLASS_PCM,624,28691
	SNDRV_TIMER_CLASS_LAST 625,28715
	SNDRV_TIMER_CLASS_LAST = SNDRV_TIMER_CLASS_PCM,625,28715
	SNDRV_TIMER_SCLASS_NONE 630,28801
	SNDRV_TIMER_SCLASS_APPLICATION,631,28831
	SNDRV_TIMER_SCLASS_SEQUENCER,632,28864
	SNDRV_TIMER_SCLASS_OSS_SEQUENCER,633,28908
	SNDRV_TIMER_SCLASS_LAST 634,28955
	SNDRV_TIMER_SCLASS_LAST = SNDRV_TIMER_SCLASS_OSS_SEQUENCER,634,28955
#define SNDRV_TIMER_GLOBAL_SYSTEM	638,29056
#define SNDRV_TIMER_GLOBAL_RTC	639,29092
#define SNDRV_TIMER_GLOBAL_HPET	640,29126
#define SNDRV_TIMER_GLOBAL_HRTIMER	641,29161
#define SNDRV_TIMER_FLG_SLAVE	644,29216
struct snd_timer_id 646,29282
	int dev_class;647,29304
	int dev_sclass;648,29320
	int card;649,29337
	int device;650,29348
	int subdevice;651,29361
struct snd_timer_ginfo 654,29381
	struct snd_timer_id tid;655,29406
	unsigned int flags;656,29457
	int card;657,29517
	unsigned char id[id658,29548
	unsigned char name[name659,29599
	unsigned long reserved0;660,29642
	unsigned long resolution;661,29698
	unsigned long resolution_min;662,29763
	unsigned long resolution_max;663,29832
	unsigned int clients;664,29901
	unsigned char reserved[reserved665,29952
struct snd_timer_gparams 668,29985
	struct snd_timer_id tid;669,30012
	unsigned long period_num;670,30063
	unsigned long period_den;671,30155
	unsigned char reserved[reserved672,30249
struct snd_timer_gstatus 675,30282
	struct snd_timer_id tid;676,30309
	unsigned long resolution;677,30360
	unsigned long resolution_num;678,30425
	unsigned long resolution_den;679,30521
	unsigned char reserved[reserved680,30619
struct snd_timer_select 683,30652
	struct snd_timer_id id;684,30678
	unsigned char reserved[reserved685,30726
struct snd_timer_info 688,30774
	unsigned int flags;689,30798
	int card;690,30858
	unsigned char id[id691,30889
	unsigned char name[name692,30939
	unsigned long reserved0;693,30982
	unsigned long resolution;694,31038
	unsigned char reserved[reserved695,31103
#define SNDRV_TIMER_PSFLG_AUTO	698,31151
#define SNDRV_TIMER_PSFLG_EXCLUSIVE	699,31227
#define SNDRV_TIMER_PSFLG_EARLY_EVENT	700,31325
struct snd_timer_params 702,31413
	unsigned int flags;703,31439
	unsigned int ticks;704,31495
	unsigned int queue_size;705,31553
	unsigned int reserved0;706,31615
	unsigned int filter;707,31680
	unsigned char reserved[reserved708,31755
struct snd_timer_status 711,31803
	struct timespec tstamp;712,31829
	unsigned int resolution;713,31885
	unsigned int lost;714,31949
	unsigned int overrun;715,32004
	unsigned int queue;716,32063
	unsigned char reserved[reserved717,32107
#define SNDRV_TIMER_IOCTL_PVERSION	720,32155
#define SNDRV_TIMER_IOCTL_NEXT_DEVICE	721,32211
#define SNDRV_TIMER_IOCTL_TREAD	722,32287
#define SNDRV_TIMER_IOCTL_GINFO	723,32341
#define SNDRV_TIMER_IOCTL_GPARAMS	724,32415
#define SNDRV_TIMER_IOCTL_GSTATUS	725,32491
#define SNDRV_TIMER_IOCTL_SELECT	726,32568
#define SNDRV_TIMER_IOCTL_INFO	727,32642
#define SNDRV_TIMER_IOCTL_PARAMS	728,32713
#define SNDRV_TIMER_IOCTL_STATUS	729,32787
#define SNDRV_TIMER_IOCTL_START	731,32936
#define SNDRV_TIMER_IOCTL_STOP	732,32984
#define SNDRV_TIMER_IOCTL_CONTINUE	733,33031
#define SNDRV_TIMER_IOCTL_PAUSE	734,33081
struct snd_timer_read 736,33130
	unsigned int resolution;737,33154
	unsigned int ticks;738,33180
	SNDRV_TIMER_EVENT_RESOLUTION 742,33212
	SNDRV_TIMER_EVENT_TICK,743,33276
	SNDRV_TIMER_EVENT_START,744,33321
	SNDRV_TIMER_EVENT_STOP,745,33377
	SNDRV_TIMER_EVENT_CONTINUE,746,33418
	SNDRV_TIMER_EVENT_PAUSE,747,33477
	SNDRV_TIMER_EVENT_EARLY,748,33518
	SNDRV_TIMER_EVENT_SUSPEND,749,33572
	SNDRV_TIMER_EVENT_RESUME,750,33615
	SNDRV_TIMER_EVENT_MSTART 752,33725
	SNDRV_TIMER_EVENT_MSTART = SNDRV_TIMER_EVENT_START 752,33725
	SNDRV_TIMER_EVENT_MSTOP 753,33783
	SNDRV_TIMER_EVENT_MSTOP = SNDRV_TIMER_EVENT_STOP 753,33783
	SNDRV_TIMER_EVENT_MCONTINUE 754,33839
	SNDRV_TIMER_EVENT_MCONTINUE = SNDRV_TIMER_EVENT_CONTINUE 754,33839
	SNDRV_TIMER_EVENT_MPAUSE 755,33903
	SNDRV_TIMER_EVENT_MPAUSE = SNDRV_TIMER_EVENT_PAUSE 755,33903
	SNDRV_TIMER_EVENT_MSUSPEND 756,33961
	SNDRV_TIMER_EVENT_MSUSPEND = SNDRV_TIMER_EVENT_SUSPEND 756,33961
	SNDRV_TIMER_EVENT_MRESUME 757,34023
	SNDRV_TIMER_EVENT_MRESUME = SNDRV_TIMER_EVENT_RESUME 757,34023
struct snd_timer_tread 760,34087
	int event;761,34112
	struct timespec tstamp;762,34124
	unsigned int val;763,34149
#define SNDRV_CTL_VERSION	772,34564
struct snd_ctl_card_info 774,34624
	int card;775,34651
	int pad;776,34682
	unsigned char id[id777,34731
	unsigned char driver[driver778,34790
	unsigned char name[name779,34835
	unsigned char longname[longname780,34891
	unsigned char reserved_[reserved_781,34959
	unsigned char mixername[mixername782,35033
	unsigned char components[components783,35097
typedef int __bitwise snd_ctl_elem_type_t;786,35216
#define	SNDRV_CTL_ELEM_TYPE_NONE	787,35259
#define	SNDRV_CTL_ELEM_TYPE_BOOLEAN	788,35340
#define	SNDRV_CTL_ELEM_TYPE_INTEGER	789,35429
#define	SNDRV_CTL_ELEM_TYPE_ENUMERATED	790,35518
#define	SNDRV_CTL_ELEM_TYPE_BYTES	791,35613
#define	SNDRV_CTL_ELEM_TYPE_IEC958	792,35698
#define	SNDRV_CTL_ELEM_TYPE_INTEGER64	793,35795
#define	SNDRV_CTL_ELEM_TYPE_LAST	794,35893
typedef int __bitwise snd_ctl_elem_iface_t;796,35957
#define	SNDRV_CTL_ELEM_IFACE_CARD	797,36001
#define	SNDRV_CTL_ELEM_IFACE_HWDEP	798,36091
#define	SNDRV_CTL_ELEM_IFACE_MIXER	799,36193
#define	SNDRV_CTL_ELEM_IFACE_PCM	800,36290
#define	SNDRV_CTL_ELEM_IFACE_RAWMIDI	801,36375
#define	SNDRV_CTL_ELEM_IFACE_TIMER	802,36468
#define	SNDRV_CTL_ELEM_IFACE_SEQUENCER	803,36557
#define	SNDRV_CTL_ELEM_IFACE_LAST	804,36654
#define SNDRV_CTL_ELEM_ACCESS_READ	806,36720
#define SNDRV_CTL_ELEM_ACCESS_WRITE	807,36763
#define SNDRV_CTL_ELEM_ACCESS_READWRITE	808,36807
#define SNDRV_CTL_ELEM_ACCESS_VOLATILE	809,36905
#define SNDRV_CTL_ELEM_ACCESS_TIMESTAMP	810,37010
#define SNDRV_CTL_ELEM_ACCESS_TLV_READ	811,37089
#define SNDRV_CTL_ELEM_ACCESS_TLV_WRITE	812,37163
#define SNDRV_CTL_ELEM_ACCESS_TLV_READWRITE	813,37239
#define SNDRV_CTL_ELEM_ACCESS_TLV_COMMAND	814,37348
#define SNDRV_CTL_ELEM_ACCESS_INACTIVE	815,37427
#define SNDRV_CTL_ELEM_ACCESS_LOCK	816,37530
#define SNDRV_CTL_ELEM_ACCESS_OWNER	817,37590
#define SNDRV_CTL_ELEM_ACCESS_TLV_CALLBACK	818,37658
#define SNDRV_CTL_ELEM_ACCESS_USER	819,37742
#define SNDRV_CTL_POWER_D0	823,37947
#define SNDRV_CTL_POWER_D1	824,37996
#define SNDRV_CTL_POWER_D2	825,38048
#define SNDRV_CTL_POWER_D3	826,38100
#define SNDRV_CTL_POWER_D3hot	827,38145
#define SNDRV_CTL_POWER_D3cold	828,38226
#define SNDRV_CTL_ELEM_ID_NAME_MAXLEN	830,38312
struct snd_ctl_elem_id 832,38354
	unsigned int numid;833,38379
	snd_ctl_elem_iface_t iface;834,38442
	unsigned int device;835,38498
	unsigned int subdevice;836,38548
	unsigned char name[name837,38609
	unsigned int index;838,38660
struct snd_ctl_elem_list 841,38706
	unsigned int offset;842,38733
	unsigned int space;843,38789
	unsigned int used;844,38848
	unsigned int count;845,38903
	struct snd_ctl_elem_id __user *pids;pids846,38956
	unsigned char reserved[reserved847,39007
struct snd_ctl_elem_info 850,39040
	struct snd_ctl_elem_id id;851,39067
	snd_ctl_elem_type_t type;852,39115
	unsigned int access;853,39186
	unsigned int count;854,39267
	__kernel_pid_t owner;855,39311
			long min;858,39389
			long max;859,39426
			long step;860,39463
		} integer;861,39505
			long long min;863,39529
			long long max;864,39571
			long long step;865,39613
		} integer64;866,39660
			unsigned int items;868,39686
			unsigned int item;869,39734
			char name[name870,39777
			__u64 names_ptr;871,39816
			unsigned int names_length;872,39872
		} enumerated;873,39902
		unsigned char reserved[reserved874,39918
	} value;875,39949
		unsigned short d[d877,39968
		unsigned short *d_ptr;d_ptr878,40009
	} dimen;879,40062
	unsigned char reserved[reserved880,40072
struct snd_ctl_elem_value 883,40130
	struct snd_ctl_elem_id id;884,40158
	unsigned int indirect:indirect885,40206
			long value[value888,40289
			long *value_ptr;value_ptr889,40309
		} integer;890,40345
			long long value[value892,40368
			long long *value_ptr;value_ptr893,40392
		} integer64;894,40433
			unsigned int item[item896,40458
			unsigned int *item_ptr;item_ptr897,40485
		} enumerated;898,40528
			unsigned char data[data900,40554
			unsigned char *data_ptr;data_ptr901,40582
		} bytes;902,40626
		struct snd_aes_iec958 iec958;903,40637
	} value;904,40669
	struct timespec tstamp;905,40689
	unsigned char reserved[reserved906,40714
struct snd_ctl_tlv 909,40772
	unsigned int numid;910,40793
	unsigned int length;911,40859
	unsigned int tlv[tlv912,40909
#define SNDRV_CTL_IOCTL_PVERSION	915,40951
#define SNDRV_CTL_IOCTL_CARD_INFO	916,41005
#define SNDRV_CTL_IOCTL_ELEM_LIST	917,41081
#define SNDRV_CTL_IOCTL_ELEM_INFO	918,41158
#define SNDRV_CTL_IOCTL_ELEM_READ	919,41235
#define SNDRV_CTL_IOCTL_ELEM_WRITE	920,41313
#define SNDRV_CTL_IOCTL_ELEM_LOCK	921,41392
#define SNDRV_CTL_IOCTL_ELEM_UNLOCK	922,41466
#define SNDRV_CTL_IOCTL_SUBSCRIBE_EVENTS 923,41542
#define SNDRV_CTL_IOCTL_ELEM_ADD	924,41605
#define SNDRV_CTL_IOCTL_ELEM_REPLACE	925,41681
#define SNDRV_CTL_IOCTL_ELEM_REMOVE	926,41761
#define SNDRV_CTL_IOCTL_TLV_READ	927,41838
#define SNDRV_CTL_IOCTL_TLV_WRITE	928,41908
#define SNDRV_CTL_IOCTL_TLV_COMMAND	929,41979
#define SNDRV_CTL_IOCTL_HWDEP_NEXT_DEVICE 930,42052
#define SNDRV_CTL_IOCTL_HWDEP_INFO	931,42116
#define SNDRV_CTL_IOCTL_PCM_NEXT_DEVICE	932,42190
#define SNDRV_CTL_IOCTL_PCM_INFO	933,42251
#define SNDRV_CTL_IOCTL_PCM_PREFER_SUBDEVICE 934,42322
#define SNDRV_CTL_IOCTL_RAWMIDI_NEXT_DEVICE 935,42388
#define SNDRV_CTL_IOCTL_RAWMIDI_INFO	936,42454
#define SNDRV_CTL_IOCTL_RAWMIDI_PREFER_SUBDEVICE 937,42533
#define SNDRV_CTL_IOCTL_POWER	938,42603
#define SNDRV_CTL_IOCTL_POWER_STATE	939,42656
enum sndrv_ctl_event_type 945,42742
	SNDRV_CTL_EVENT_ELEM 946,42770
	SNDRV_CTL_EVENT_LAST 947,42797
	SNDRV_CTL_EVENT_LAST = SNDRV_CTL_EVENT_ELEM,947,42797
#define SNDRV_CTL_EVENT_MASK_VALUE	950,42847
#define SNDRV_CTL_EVENT_MASK_INFO	951,42921
#define SNDRV_CTL_EVENT_MASK_ADD	952,42993
#define SNDRV_CTL_EVENT_MASK_TLV	953,43057
#define SNDRV_CTL_EVENT_MASK_REMOVE	954,43132
struct snd_ctl_event 956,43201
	int type;957,43224
			unsigned int mask;960,43292
			struct snd_ctl_elem_id id;961,43314
		} elem;962,43344
		unsigned char data8[data8963,43354
	} data;964,43381
#define SNDRV_CTL_NAME_NONE	971,43420
#define SNDRV_CTL_NAME_PLAYBACK	972,43454
#define SNDRV_CTL_NAME_CAPTURE	973,43501
#define SNDRV_CTL_NAME_IEC958_NONE	975,43547
#define SNDRV_CTL_NAME_IEC958_SWITCH	976,43587
#define SNDRV_CTL_NAME_IEC958_VOLUME	977,43635
#define SNDRV_CTL_NAME_IEC958_DEFAULT	978,43683
#define SNDRV_CTL_NAME_IEC958_MASK	979,43733
#define SNDRV_CTL_NAME_IEC958_CON_MASK	980,43777
#define SNDRV_CTL_NAME_IEC958_PRO_MASK	981,43829
#define SNDRV_CTL_NAME_IEC958_PCM_STREAM	982,43881
#define SNDRV_CTL_NAME_IEC958(983,43936

alsa-lib-1.0.29/include/sound/emu10k1.h,9177
#define __SOUND_EMU10K1_H2,26
#define EMU10K1_CARD_CREATIVE	32,982
#define EMU10K1_CARD_EMUAPS	33,1025
#define EMU10K1_FX8010_PCM_COUNT	35,1067
#define iMAC0	38,1126
#define iMAC1	39,1189
#define iMAC2	40,1252
#define iMAC3	41,1315
#define iMACINT0 42,1378
#define iMACINT1 43,1436
#define iACC3	44,1503
#define iMACMV 45,1559
#define iANDXOR 46,1613
#define iTSTNEG 47,1657
#define iLIMITGE 48,1707
#define iLIMITLT 49,1756
#define iLOG	50,1804
#define iEXP	51,1889
#define iINTERP 52,1974
#define iSKIP 53,2044
#define FXBUS(56,2123
#define EXTIN(57,2175
#define EXTOUT(58,2227
#define C_00000000	59,2280
#define C_00000001	60,2304
#define C_00000002	61,2328
#define C_00000003	62,2352
#define C_00000004	63,2376
#define C_00000008	64,2400
#define C_00000010	65,2424
#define C_00000020	66,2448
#define C_00000100	67,2472
#define C_00010000	68,2496
#define C_00080000	69,2520
#define C_10000000	70,2544
#define C_20000000	71,2568
#define C_40000000	72,2592
#define C_80000000	73,2616
#define C_7fffffff	74,2640
#define C_ffffffff	75,2664
#define C_fffffffe	76,2688
#define C_c0000000	77,2712
#define C_4f1bbcdc	78,2736
#define C_5a7ef9db	79,2760
#define C_00100000	80,2784
#define GPR_ACCU	81,2818
#define GPR_COND	82,2866
#define GPR_NOISE0	83,2919
#define GPR_NOISE1	84,2963
#define GPR_IRQ	85,3007
#define GPR_DBAC	86,3049
#define GPR(87,3110
#define ITRAM_DATA(88,3179
#define ETRAM_DATA(89,3257
#define ITRAM_ADDR(90,3335
#define ETRAM_ADDR(91,3413
#define A_FXBUS(93,3492
#define A_EXTIN(94,3547
#define A_EXTOUT(95,3602
#define A_GPR(96,3658
#define CC_REG_NORMALIZED 99,3721
#define CC_REG_BORROW	100,3758
#define CC_REG_MINUS	101,3791
#define CC_REG_ZERO	102,3823
#define CC_REG_SATURATE	103,3854
#define CC_REG_NONZERO	104,3889
#define FXBUS_PCM_LEFT	107,3939
#define FXBUS_PCM_RIGHT	108,3968
#define FXBUS_PCM_LEFT_REAR	109,3998
#define FXBUS_PCM_RIGHT_REAR	110,4031
#define FXBUS_MIDI_LEFT	111,4065
#define FXBUS_MIDI_RIGHT	112,4095
#define FXBUS_PCM_CENTER	113,4125
#define FXBUS_PCM_LFE	114,4155
#define FXBUS_PCM_LEFT_FRONT	115,4183
#define FXBUS_PCM_RIGHT_FRONT	116,4217
#define FXBUS_MIDI_REVERB	117,4252
#define FXBUS_MIDI_CHORUS	118,4283
#define FXBUS_PCM_LEFT_SIDE	119,4314
#define FXBUS_PCM_RIGHT_SIDE	120,4347
#define FXBUS_PT_LEFT	121,4381
#define FXBUS_PT_RIGHT	122,4409
#define EXTIN_AC97_L	125,4452
#define EXTIN_AC97_R	126,4516
#define EXTIN_SPDIF_CD_L 127,4581
#define EXTIN_SPDIF_CD_R 128,4655
#define EXTIN_ZOOM_L	129,4730
#define EXTIN_ZOOM_R	130,4787
#define EXTIN_TOSLINK_L	131,4845
#define EXTIN_TOSLINK_R 132,4918
#define EXTIN_LINE1_L	133,4992
#define EXTIN_LINE1_R	134,5058
#define EXTIN_COAX_SPDIF_L 135,5125
#define EXTIN_COAX_SPDIF_R 136,5197
#define EXTIN_LINE2_L	137,5270
#define EXTIN_LINE2_R	138,5336
#define EXTOUT_AC97_L	141,5418
#define EXTOUT_AC97_R	142,5484
#define EXTOUT_TOSLINK_L 143,5551
#define EXTOUT_TOSLINK_R 144,5624
#define EXTOUT_AC97_CENTER 145,5698
#define EXTOUT_AC97_LFE	146,5757
#define EXTOUT_HEADPHONE_L 147,5813
#define EXTOUT_HEADPHONE_R 148,5880
#define EXTOUT_REAR_L	149,5948
#define EXTOUT_REAR_R	150,6004
#define EXTOUT_ADC_CAP_L 151,6061
#define EXTOUT_ADC_CAP_R 152,6125
#define EXTOUT_MIC_CAP	153,6190
#define EXTOUT_AC97_REAR_L 154,6246
#define EXTOUT_AC97_REAR_R 155,6317
#define EXTOUT_ACENTER	156,6389
#define EXTOUT_ALFE	157,6440
#define A_EXTIN_AC97_L	160,6506
#define A_EXTIN_AC97_R	161,6570
#define A_EXTIN_SPDIF_CD_L	162,6635
#define A_EXTIN_SPDIF_CD_R	163,6689
#define A_EXTIN_OPT_SPDIF_L 164,6743
#define A_EXTIN_OPT_SPDIF_R 165,6823
#define A_EXTIN_LINE2_L	166,6905
#define A_EXTIN_LINE2_R	167,6972
#define A_EXTIN_ADC_L	168,7040
#define A_EXTIN_ADC_R	169,7096
#define A_EXTIN_AUX2_L	170,7153
#define A_EXTIN_AUX2_R	171,7213
#define A_EXTOUT_FRONT_L	174,7297
#define A_EXTOUT_FRONT_R	175,7352
#define A_EXTOUT_CENTER	176,7408
#define A_EXTOUT_LFE	177,7465
#define A_EXTOUT_HEADPHONE_L	178,7516
#define A_EXTOUT_HEADPHONE_R	179,7584
#define A_EXTOUT_REAR_L	180,7653
#define A_EXTOUT_REAR_R	181,7707
#define A_EXTOUT_AFRONT_L	182,7762
#define A_EXTOUT_AFRONT_R	183,7817
#define A_EXTOUT_ACENTER	184,7873
#define A_EXTOUT_ALFE	185,7923
#define A_EXTOUT_ASIDE_L	186,7968
#define A_EXTOUT_ASIDE_R	187,8036
#define A_EXTOUT_AREAR_L	188,8104
#define A_EXTOUT_AREAR_R	189,8157
#define A_EXTOUT_AC97_L	190,8211
#define A_EXTOUT_AC97_R	191,8265
#define A_EXTOUT_ADC_CAP_L	192,8312
#define A_EXTOUT_ADC_CAP_R	193,8374
#define A_EXTOUT_MIC_CAP	194,8437
#define A_C_00000000	197,8516
#define A_C_00000001	198,8542
#define A_C_00000002	199,8568
#define A_C_00000003	200,8594
#define A_C_00000004	201,8620
#define A_C_00000008	202,8646
#define A_C_00000010	203,8672
#define A_C_00000020	204,8698
#define A_C_00000100	205,8724
#define A_C_00010000	206,8750
#define A_C_00000800	207,8776
#define A_C_10000000	208,8802
#define A_C_20000000	209,8828
#define A_C_40000000	210,8854
#define A_C_80000000	211,8880
#define A_C_7fffffff	212,8906
#define A_C_ffffffff	213,8932
#define A_C_fffffffe	214,8958
#define A_C_c0000000	215,8984
#define A_C_4f1bbcdc	216,9010
#define A_C_5a7ef9db	217,9036
#define A_C_00100000	218,9062
#define A_GPR_ACCU	219,9088
#define A_GPR_COND	220,9138
#define A_GPR_NOISE0	221,9193
#define A_GPR_NOISE1	222,9239
#define A_GPR_IRQ	223,9285
#define A_GPR_DBAC	224,9328
#define A_GPR_DBACE	225,9402
#define EMU10K1_DBG_ZC	228,9515
#define EMU10K1_DBG_SATURATION_OCCURED	229,9575
#define EMU10K1_DBG_SATURATION_ADDR	230,9650
#define EMU10K1_DBG_SINGLE_STEP	231,9722
#define EMU10K1_DBG_STEP	232,9789
#define EMU10K1_DBG_CONDITION_CODE	233,9850
#define EMU10K1_DBG_SINGLE_STEP_ADDR	234,9917
#define TANKMEMADDRREG_ADDR_MASK 238,10042
#define TANKMEMADDRREG_CLEAR	239,10120
#define TANKMEMADDRREG_ALIGN	240,10188
#define TANKMEMADDRREG_WRITE	241,10279
#define TANKMEMADDRREG_READ	242,10350
	unsigned int internal_tram_size;246,10445
	unsigned int external_tram_size;247,10496
	char fxbus_names[fxbus_names248,10547
	char extin_names[extin_names249,10598
	char extout_names[extout_names250,10657
	unsigned int gpr_controls;251,10718
} emu10k1_fx8010_info_t;252,10775
#define EMU10K1_GPR_TRANSLATION_NONE	254,10801
#define EMU10K1_GPR_TRANSLATION_TABLE100	255,10841
#define EMU10K1_GPR_TRANSLATION_BASS	256,10884
#define EMU10K1_GPR_TRANSLATION_TREBLE	257,10924
#define EMU10K1_GPR_TRANSLATION_ONOFF	258,10966
enum emu10k1_ctl_elem_iface 260,11008
	EMU10K1_CTL_ELEM_IFACE_MIXER 261,11038
	EMU10K1_CTL_ELEM_IFACE_PCM 262,11100
	unsigned int pad;266,11172
	int iface;267,11208
	unsigned int device;268,11249
	unsigned int subdevice;269,11299
	unsigned char name[name270,11360
	unsigned int index;271,11412
} emu10k1_ctl_elem_id_t;272,11454
	emu10k1_ctl_elem_id_t id;275,11497
	unsigned int vcount;276,11557
	unsigned int count;277,11600
	unsigned short gpr[gpr278,11649
	unsigned int value[value279,11695
	unsigned int min;280,11742
	unsigned int max;281,11782
	unsigned int translation;282,11822
	unsigned int *tlv;tlv283,11899
} emu10k1_fx8010_control_gpr_t;284,11919
	char name[name287,11969
	uint32_t *gpr_map;gpr_map290,12082
	unsigned int gpr_add_control_count;292,12125
	emu10k1_fx8010_control_gpr_t *gpr_add_controls;gpr_add_controls293,12205
	unsigned int gpr_del_control_count;295,12289
	emu10k1_ctl_elem_id_t *gpr_del_controls;gpr_del_controls296,12364
	unsigned int gpr_list_control_count;298,12443
	unsigned int gpr_list_control_total;299,12517
	emu10k1_fx8010_control_gpr_t *gpr_list_controls;gpr_list_controls300,12589
	uint32_t *tram_data_map;tram_data_map303,12762
	uint32_t *tram_addr_map;tram_addr_map304,12812
	uint32_t *code;code307,12958
} emu10k1_fx8010_code_t;308,13009
	unsigned int address;311,13052
	unsigned int size;312,13111
	unsigned int *samples;samples313,13164
} emu10k1_fx8010_tram_t;315,13253
	unsigned int substream;318,13296
	unsigned int res1;319,13345
	unsigned int channels;320,13381
	unsigned int tram_start;321,13464
	unsigned int buffer_size;322,13538
	unsigned short gpr_size;323,13597
	unsigned short gpr_ptr;324,13682
	unsigned short gpr_count;325,13787
	unsigned short gpr_tmpcount;326,13882
	unsigned short gpr_trigger;327,13992
	unsigned short gpr_running;328,14080
	unsigned char pad;329,14162
	unsigned char etram[etram330,14198
	unsigned int res2;331,14277
} emu10k1_fx8010_pcm_t;332,14313
#define SNDRV_EMU10K1_IOCTL_INFO	334,14338
#define SNDRV_EMU10K1_IOCTL_CODE_POKE	335,14411
#define SNDRV_EMU10K1_IOCTL_CODE_PEEK	336,14489
#define SNDRV_EMU10K1_IOCTL_TRAM_SETUP	337,14567
#define SNDRV_EMU10K1_IOCTL_TRAM_POKE	338,14628
#define SNDRV_EMU10K1_IOCTL_TRAM_PEEK	339,14706
#define SNDRV_EMU10K1_IOCTL_PCM_POKE	340,14784
#define SNDRV_EMU10K1_IOCTL_PCM_PEEK	341,14860
#define SNDRV_EMU10K1_IOCTL_PVERSION	342,14936
#define SNDRV_EMU10K1_IOCTL_STOP	343,14995
#define SNDRV_EMU10K1_IOCTL_CONTINUE	344,15045
#define SNDRV_EMU10K1_IOCTL_ZERO_TRAM_COUNTER 345,15099
#define SNDRV_EMU10K1_IOCTL_SINGLE_STEP	346,15161
#define SNDRV_EMU10K1_IOCTL_DBG_READ	347,15223

alsa-lib-1.0.29/include/sound/asound_fm.h,2230
#define __SOUND_ASOUND_FM_H2,28
#define SNDRV_DM_FM_MODE_OPL2	29,1042
#define SNDRV_DM_FM_MODE_OPL3	30,1077
struct snd_dm_fm_info 32,1113
	unsigned char fm_mode;33,1137
	unsigned char rhythm;34,1203
struct snd_dm_fm_voice 41,1324
	unsigned char op;42,1349
	unsigned char voice;43,1398
	unsigned char am;45,1447
	unsigned char vibrato;46,1494
	unsigned char do_sustain;47,1540
	unsigned char kbd_scale;48,1587
	unsigned char harmonic;49,1636
	unsigned char scale_level;50,1700
	unsigned char volume;51,1769
	unsigned char attack;53,1815
	unsigned char decay;54,1865
	unsigned char sustain;55,1913
	unsigned char release;56,1966
	unsigned char feedback;58,2019
	unsigned char connection;59,2076
	unsigned char left;60,2138
	unsigned char right;61,2178
	unsigned char waveform;62,2220
struct snd_dm_fm_note 70,2384
	unsigned char voice;71,2408
	unsigned char octave;72,2455
	unsigned int fnum;73,2512
	unsigned char key_on;74,2564
struct snd_dm_fm_params 81,2716
	unsigned char am_depth;82,2742
	unsigned char vib_depth;83,2808
	unsigned char kbd_split;84,2861
	unsigned char rhythm;85,2908
	unsigned char bass;88,3014
	unsigned char snare;89,3035
	unsigned char tomtom;90,3057
	unsigned char cymbal;91,3080
	unsigned char hihat;92,3103
#define SNDRV_DM_FM_IOCTL_INFO	99,3164
#define SNDRV_DM_FM_IOCTL_RESET	100,3235
#define SNDRV_DM_FM_IOCTL_PLAY_NOTE	101,3284
#define SNDRV_DM_FM_IOCTL_SET_VOICE	102,3359
#define SNDRV_DM_FM_IOCTL_SET_PARAMS	103,3435
#define SNDRV_DM_FM_IOCTL_SET_MODE	104,3513
#define SNDRV_DM_FM_IOCTL_SET_CONNECTION	106,3589
#define SNDRV_DM_FM_IOCTL_CLEAR_PATCHES	108,3678
#define SNDRV_DM_FM_OSS_IOCTL_RESET	110,3735
#define SNDRV_DM_FM_OSS_IOCTL_PLAY_NOTE	111,3777
#define SNDRV_DM_FM_OSS_IOCTL_SET_VOICE	112,3823
#define SNDRV_DM_FM_OSS_IOCTL_SET_PARAMS	113,3869
#define SNDRV_DM_FM_OSS_IOCTL_SET_MODE	114,3915
#define SNDRV_DM_FM_OSS_IOCTL_SET_OPL	115,3960
#define FM_KEY_SBI	121,4052
#define FM_KEY_2OP	122,4081
#define FM_KEY_4OP	123,4110
struct sbi_patch 125,4140
	unsigned char prog;126,4159
	unsigned char bank;127,4180
	char key[key128,4201
	char name[name129,4215
	char extension[extension130,4231
	unsigned char data[data131,4251

alsa-lib-1.0.29/include/sound/type_compat.h,701
#define __TYPE_COMPAT_H2,24
typedef uint8_t __u8;6,88
typedef uint16_t __u16;7,110
typedef uint32_t __u32;8,134
typedef int8_t __s8;9,158
typedef int16_t __s16;10,179
typedef int32_t __s32;11,202
#define __cpu_to_le32(16,304
#define __cpu_to_be32(17,333
#define __cpu_to_le16(18,370
#define __cpu_to_be16(19,399
#define __cpu_to_le32(21,442
#define __cpu_to_be32(22,479
#define __cpu_to_le16(23,508
#define __cpu_to_be16(24,545
#define __le32_to_cpu 27,582
#define __be32_to_cpu 28,618
#define __le16_to_cpu 29,654
#define __be16_to_cpu 30,690
#define __le64 32,727
#define __le32 33,748
#define __le16 34,769
#define __be64 35,790
#define __be32 36,811
#define __be16 37,832

alsa-lib-1.0.29/include/sound/asoundef.h,7527
#define __SOUND_ASOUNDEF_H2,27
#define IEC958_AES0_PROFESSIONAL	32,1319
#define IEC958_AES0_NONAUDIO	33,1396
#define IEC958_AES0_PRO_EMPHASIS	34,1464
#define IEC958_AES0_PRO_EMPHASIS_NOTID	35,1526
#define IEC958_AES0_PRO_EMPHASIS_NONE	36,1601
#define IEC958_AES0_PRO_EMPHASIS_5015	37,1666
#define IEC958_AES0_PRO_EMPHASIS_CCITT	38,1734
#define IEC958_AES0_PRO_FREQ_UNLOCKED	39,1806
#define IEC958_AES0_PRO_FS	40,1907
#define IEC958_AES0_PRO_FS_NOTID	41,1972
#define IEC958_AES0_PRO_FS_44100	42,2035
#define IEC958_AES0_PRO_FS_48000	43,2089
#define IEC958_AES0_PRO_FS_32000	44,2141
#define IEC958_AES0_CON_NOT_COPYRIGHT	45,2193
#define IEC958_AES0_CON_EMPHASIS	46,2277
#define IEC958_AES0_CON_EMPHASIS_NONE	47,2339
#define IEC958_AES0_CON_EMPHASIS_5015	48,2404
#define IEC958_AES0_CON_MODE	49,2472
#define IEC958_AES1_PRO_MODE	50,2527
#define IEC958_AES1_PRO_MODE_NOTID	51,2591
#define IEC958_AES1_PRO_MODE_STEREOPHONIC 52,2653
#define IEC958_AES1_PRO_MODE_SINGLE	53,2736
#define IEC958_AES1_PRO_MODE_TWO	54,2800
#define IEC958_AES1_PRO_MODE_PRIMARY	55,2859
#define IEC958_AES1_PRO_MODE_BYTE3	56,2928
#define IEC958_AES1_PRO_USERBITS	57,2994
#define IEC958_AES1_PRO_USERBITS_NOTID	58,3058
#define IEC958_AES1_PRO_USERBITS_192	59,3124
#define IEC958_AES1_PRO_USERBITS_UDEF	60,3192
#define IEC958_AES1_CON_CATEGORY	61,3269
#define IEC958_AES1_CON_GENERAL	62,3307
#define IEC958_AES1_CON_EXPERIMENTAL	63,3345
#define IEC958_AES1_CON_SOLIDMEM_MASK	64,3387
#define IEC958_AES1_CON_SOLIDMEM_ID	65,3430
#define IEC958_AES1_CON_BROADCAST1_MASK 66,3471
#define IEC958_AES1_CON_BROADCAST1_ID	67,3516
#define IEC958_AES1_CON_DIGDIGCONV_MASK 68,3559
#define IEC958_AES1_CON_DIGDIGCONV_ID	69,3604
#define IEC958_AES1_CON_ADC_COPYRIGHT_MASK 70,3647
#define IEC958_AES1_CON_ADC_COPYRIGHT_ID 71,3695
#define IEC958_AES1_CON_ADC_MASK	72,3741
#define IEC958_AES1_CON_ADC_ID	73,3779
#define IEC958_AES1_CON_BROADCAST2_MASK 74,3816
#define IEC958_AES1_CON_BROADCAST2_ID	75,3861
#define IEC958_AES1_CON_LASEROPT_MASK	76,3904
#define IEC958_AES1_CON_LASEROPT_ID	77,3947
#define IEC958_AES1_CON_MUSICAL_MASK	78,3988
#define IEC958_AES1_CON_MUSICAL_ID	79,4030
#define IEC958_AES1_CON_MAGNETIC_MASK	80,4070
#define IEC958_AES1_CON_MAGNETIC_ID	81,4113
#define IEC958_AES1_CON_IEC908_CD	82,4154
#define IEC958_AES1_CON_NON_IEC908_CD	83,4223
#define IEC958_AES1_CON_PCM_CODER	84,4296
#define IEC958_AES1_CON_SAMPLER	85,4367
#define IEC958_AES1_CON_MIXER	86,4437
#define IEC958_AES1_CON_RATE_CONVERTER	87,4505
#define IEC958_AES1_CON_SYNTHESIZER	88,4581
#define IEC958_AES1_CON_MICROPHONE	89,4651
#define IEC958_AES1_CON_DAT	90,4720
#define IEC958_AES1_CON_VCR	91,4784
#define IEC958_AES1_CON_ORIGINAL	92,4848
#define IEC958_AES2_PRO_SBITS	93,4933
#define IEC958_AES2_PRO_SBITS_20	94,4996
#define IEC958_AES2_PRO_SBITS_24	95,5064
#define IEC958_AES2_PRO_SBITS_UDEF	96,5130
#define IEC958_AES2_PRO_WORDLEN	97,5203
#define IEC958_AES2_PRO_WORDLEN_NOTID	98,5275
#define IEC958_AES2_PRO_WORDLEN_22_18	99,5340
#define IEC958_AES2_PRO_WORDLEN_23_19	100,5408
#define IEC958_AES2_PRO_WORDLEN_24_20	101,5476
#define IEC958_AES2_PRO_WORDLEN_20_16	102,5544
#define IEC958_AES2_CON_SOURCE	103,5612
#define IEC958_AES2_CON_SOURCE_UNSPEC	104,5679
#define IEC958_AES2_CON_CHANNEL	105,5742
#define IEC958_AES2_CON_CHANNEL_UNSPEC	106,5811
#define IEC958_AES3_CON_FS	107,5875
#define IEC958_AES3_CON_FS_44100	108,5941
#define IEC958_AES3_CON_FS_48000	109,5995
#define IEC958_AES3_CON_FS_32000	110,6047
#define IEC958_AES3_CON_CLOCK	111,6099
#define IEC958_AES3_CON_CLOCK_1000PPM	112,6165
#define IEC958_AES3_CON_CLOCK_50PPM	113,6225
#define IEC958_AES3_CON_CLOCK_VARIABLE	114,6281
#define MIDI_CHANNELS	122,6746
#define MIDI_GM_DRUM_CHANNEL	123,6773
#define MIDI_CMD_NOTE_OFF	129,6837
#define MIDI_CMD_NOTE_ON	130,6869
#define MIDI_CMD_NOTE_PRESSURE	131,6900
#define MIDI_CMD_CONTROL	132,6937
#define MIDI_CMD_PGM_CHANGE	133,6968
#define MIDI_CMD_CHANNEL_PRESSURE	134,7002
#define MIDI_CMD_BENDER	135,7041
#define MIDI_CMD_COMMON_SYSEX	137,7073
#define MIDI_CMD_COMMON_MTC_QUARTER	138,7109
#define MIDI_CMD_COMMON_SONG_POS	139,7150
#define MIDI_CMD_COMMON_SONG_SELECT	140,7188
#define MIDI_CMD_COMMON_TUNE_REQUEST	141,7229
#define MIDI_CMD_COMMON_SYSEX_END	142,7271
#define MIDI_CMD_COMMON_CLOCK	143,7310
#define MIDI_CMD_COMMON_START	144,7346
#define MIDI_CMD_COMMON_CONTINUE	145,7382
#define MIDI_CMD_COMMON_STOP	146,7420
#define MIDI_CMD_COMMON_SENSING	147,7455
#define MIDI_CMD_COMMON_RESET	148,7493
#define MIDI_CTL_MSB_BANK	154,7559
#define MIDI_CTL_MSB_MODWHEEL 155,7591
#define MIDI_CTL_MSB_BREATH 156,7635
#define MIDI_CTL_MSB_FOOT 157,7679
#define MIDI_CTL_MSB_PORTAMENTO_TIME 158,7723
#define MIDI_CTL_MSB_DATA_ENTRY	159,7766
#define MIDI_CTL_MSB_MAIN_VOLUME 160,7804
#define MIDI_CTL_MSB_BALANCE 161,7848
#define MIDI_CTL_MSB_PAN 162,7892
#define MIDI_CTL_MSB_EXPRESSION 163,7936
#define MIDI_CTL_MSB_EFFECT1	164,7980
#define MIDI_CTL_MSB_EFFECT2	165,8015
#define MIDI_CTL_MSB_GENERAL_PURPOSE1 166,8050
#define MIDI_CTL_MSB_GENERAL_PURPOSE2 167,8094
#define MIDI_CTL_MSB_GENERAL_PURPOSE3 168,8138
#define MIDI_CTL_MSB_GENERAL_PURPOSE4 169,8182
#define MIDI_CTL_LSB_BANK	170,8226
#define MIDI_CTL_LSB_MODWHEEL 171,8258
#define MIDI_CTL_LSB_BREATH 172,8301
#define MIDI_CTL_LSB_FOOT 173,8345
#define MIDI_CTL_LSB_PORTAMENTO_TIME 174,8389
#define MIDI_CTL_LSB_DATA_ENTRY	175,8432
#define MIDI_CTL_LSB_MAIN_VOLUME 176,8470
#define MIDI_CTL_LSB_BALANCE 177,8514
#define MIDI_CTL_LSB_PAN 178,8558
#define MIDI_CTL_LSB_EXPRESSION 179,8602
#define MIDI_CTL_LSB_EFFECT1	180,8646
#define MIDI_CTL_LSB_EFFECT2	181,8681
#define MIDI_CTL_LSB_GENERAL_PURPOSE1 182,8716
#define MIDI_CTL_LSB_GENERAL_PURPOSE2 183,8760
#define MIDI_CTL_LSB_GENERAL_PURPOSE3 184,8804
#define MIDI_CTL_LSB_GENERAL_PURPOSE4 185,8848
#define MIDI_CTL_SUSTAIN 186,8892
#define MIDI_CTL_PORTAMENTO 187,8936
#define MIDI_CTL_SUSTENUTO 188,8980
#define MIDI_CTL_SOFT_PEDAL 189,9024
#define MIDI_CTL_LEGATO_FOOTSWITCH	190,9068
#define MIDI_CTL_HOLD2 191,9108
#define MIDI_CTL_SC1_SOUND_VARIATION	192,9152
#define MIDI_CTL_SC2_TIMBRE	193,9194
#define MIDI_CTL_SC3_RELEASE_TIME	194,9228
#define MIDI_CTL_SC4_ATTACK_TIME	195,9267
#define MIDI_CTL_SC5_BRIGHTNESS	196,9305
#define MIDI_CTL_SC6	197,9343
#define MIDI_CTL_SC7	198,9371
#define MIDI_CTL_SC8	199,9399
#define MIDI_CTL_SC9	200,9427
#define MIDI_CTL_SC10	201,9455
#define MIDI_CTL_GENERAL_PURPOSE5 202,9484
#define MIDI_CTL_GENERAL_PURPOSE6 203,9528
#define MIDI_CTL_GENERAL_PURPOSE7 204,9572
#define MIDI_CTL_GENERAL_PURPOSE8 205,9616
#define MIDI_CTL_PORTAMENTO_CONTROL	206,9660
#define MIDI_CTL_E1_REVERB_DEPTH	207,9701
#define MIDI_CTL_E2_TREMOLO_DEPTH	208,9739
#define MIDI_CTL_E3_CHORUS_DEPTH	209,9778
#define MIDI_CTL_E4_DETUNE_DEPTH	210,9816
#define MIDI_CTL_E5_PHASER_DEPTH	211,9854
#define MIDI_CTL_DATA_INCREMENT 212,9892
#define MIDI_CTL_DATA_DECREMENT 213,9936
#define MIDI_CTL_NONREG_PARM_NUM_LSB 214,9980
#define MIDI_CTL_NONREG_PARM_NUM_MSB 215,10024
#define MIDI_CTL_REGIST_PARM_NUM_LSB 216,10068
#define MIDI_CTL_REGIST_PARM_NUM_MSB	217,10112
#define MIDI_CTL_ALL_SOUNDS_OFF	218,10154
#define MIDI_CTL_RESET_CONTROLLERS	219,10192
#define MIDI_CTL_LOCAL_CONTROL_SWITCH	220,10232
#define MIDI_CTL_ALL_NOTES_OFF	221,10275
#define MIDI_CTL_OMNI_OFF	222,10312
#define MIDI_CTL_OMNI_ON	223,10344
#define MIDI_CTL_MONO1	224,10375
#define MIDI_CTL_MONO2	225,10405

alsa-lib-1.0.29/include/sound/asequencer.h,13677
#define _UAPI__SOUND_ASEQUENCER_H23,963
#define SNDRV_SEQ_VERSION 27,1031
#define SNDRV_SEQ_EVENT_SYSTEM	36,1200
#define SNDRV_SEQ_EVENT_RESULT	37,1234
#define SNDRV_SEQ_EVENT_NOTE	42,1348
#define SNDRV_SEQ_EVENT_NOTEON	43,1380
#define SNDRV_SEQ_EVENT_NOTEOFF	44,1414
#define SNDRV_SEQ_EVENT_KEYPRESS	45,1449
#define SNDRV_SEQ_EVENT_CONTROLLER	50,1568
#define SNDRV_SEQ_EVENT_PGMCHANGE	51,1606
#define SNDRV_SEQ_EVENT_CHANPRESS	52,1643
#define SNDRV_SEQ_EVENT_PITCHBEND	53,1680
#define SNDRV_SEQ_EVENT_CONTROL14	54,1744
#define SNDRV_SEQ_EVENT_NONREGPARAM	55,1813
#define SNDRV_SEQ_EVENT_REGPARAM	56,1904
#define SNDRV_SEQ_EVENT_SONGPOS	61,2063
#define SNDRV_SEQ_EVENT_SONGSEL	62,2151
#define SNDRV_SEQ_EVENT_QFRAME	63,2225
#define SNDRV_SEQ_EVENT_TIMESIGN	64,2295
#define SNDRV_SEQ_EVENT_KEYSIGN	65,2362
#define SNDRV_SEQ_EVENT_START	70,2507
#define SNDRV_SEQ_EVENT_CONTINUE	71,2576
#define SNDRV_SEQ_EVENT_STOP	72,2650
#define	SNDRV_SEQ_EVENT_SETPOS_TICK	73,2718
#define SNDRV_SEQ_EVENT_SETPOS_TIME	74,2787
#define SNDRV_SEQ_EVENT_TEMPO	75,2860
#define SNDRV_SEQ_EVENT_CLOCK	76,2918
#define SNDRV_SEQ_EVENT_TICK	77,2987
#define SNDRV_SEQ_EVENT_QUEUE_SKEW	78,3054
#define SNDRV_SEQ_EVENT_TUNE_REQUEST	83,3157
#define SNDRV_SEQ_EVENT_RESET	84,3216
#define SNDRV_SEQ_EVENT_SENSING	85,3280
#define SNDRV_SEQ_EVENT_ECHO	90,3419
#define SNDRV_SEQ_EVENT_OSS	91,3469
#define SNDRV_SEQ_EVENT_CLIENT_START	96,3615
#define SNDRV_SEQ_EVENT_CLIENT_EXIT	97,3686
#define SNDRV_SEQ_EVENT_CLIENT_CHANGE	98,3758
#define SNDRV_SEQ_EVENT_PORT_START	99,3836
#define SNDRV_SEQ_EVENT_PORT_EXIT	100,3901
#define SNDRV_SEQ_EVENT_PORT_CHANGE	101,3973
#define SNDRV_SEQ_EVENT_PORT_SUBSCRIBED	106,4117
#define SNDRV_SEQ_EVENT_PORT_UNSUBSCRIBED 107,4182
#define SNDRV_SEQ_EVENT_USR0	114,4370
#define SNDRV_SEQ_EVENT_USR1	115,4403
#define SNDRV_SEQ_EVENT_USR2	116,4436
#define SNDRV_SEQ_EVENT_USR3	117,4469
#define SNDRV_SEQ_EVENT_USR4	118,4502
#define SNDRV_SEQ_EVENT_USR5	119,4535
#define SNDRV_SEQ_EVENT_USR6	120,4568
#define SNDRV_SEQ_EVENT_USR7	121,4601
#define SNDRV_SEQ_EVENT_USR8	122,4634
#define SNDRV_SEQ_EVENT_USR9	123,4667
#define SNDRV_SEQ_EVENT_SYSEX	132,4894
#define SNDRV_SEQ_EVENT_BOUNCE	133,4975
#define SNDRV_SEQ_EVENT_USR_VAR0	135,5053
#define SNDRV_SEQ_EVENT_USR_VAR1	136,5090
#define SNDRV_SEQ_EVENT_USR_VAR2	137,5127
#define SNDRV_SEQ_EVENT_USR_VAR3	138,5164
#define SNDRV_SEQ_EVENT_USR_VAR4	139,5201
#define SNDRV_SEQ_EVENT_KERNEL_ERROR	142,5308
#define SNDRV_SEQ_EVENT_KERNEL_QUOTE	143,5349
#define SNDRV_SEQ_EVENT_NONE	150,5497
typedef unsigned char snd_seq_event_type_t;153,5533
struct snd_seq_addr 156,5599
	unsigned char client;157,5621
	unsigned char port;158,5714
struct snd_seq_connect 162,5830
	struct snd_seq_addr sender;163,5855
	struct snd_seq_addr dest;164,5884
#define SNDRV_SEQ_ADDRESS_UNKNOWN	168,5916
#define SNDRV_SEQ_ADDRESS_SUBSCRIBERS	169,5975
#define SNDRV_SEQ_ADDRESS_BROADCAST	170,6058
#define SNDRV_SEQ_QUEUE_DIRECT	171,6152
#define SNDRV_SEQ_TIME_STAMP_TICK	174,6265
#define SNDRV_SEQ_TIME_STAMP_REAL	175,6337
#define SNDRV_SEQ_TIME_STAMP_MASK	176,6407
#define SNDRV_SEQ_TIME_MODE_ABS	178,6449
#define SNDRV_SEQ_TIME_MODE_REL	179,6514
#define SNDRV_SEQ_TIME_MODE_MASK	180,6585
#define SNDRV_SEQ_EVENT_LENGTH_FIXED	182,6626
#define SNDRV_SEQ_EVENT_LENGTH_VARIABLE	183,6693
#define SNDRV_SEQ_EVENT_LENGTH_VARUSR	184,6766
#define SNDRV_SEQ_EVENT_LENGTH_MASK	185,6857
#define SNDRV_SEQ_PRIORITY_NORMAL	187,6901
#define SNDRV_SEQ_PRIORITY_HIGH	188,6964
#define SNDRV_SEQ_PRIORITY_MASK	189,7050
struct snd_seq_ev_note 193,7110
	unsigned char channel;194,7135
	unsigned char note;195,7159
	unsigned char velocity;196,7180
	unsigned char off_velocity;197,7205
	unsigned int duration;198,7270
struct snd_seq_ev_ctrl 202,7359
	unsigned char channel;203,7384
	unsigned char unused1,204,7408
	unsigned char unused1, unused2,204,7408
	unsigned char unused1, unused2, unused3;204,7408
	unsigned int param;205,7460
	signed int value;206,7481
struct snd_seq_ev_raw8 210,7543
	unsigned char d[d211,7568
struct snd_seq_ev_raw32 215,7654
	unsigned int d[d216,7680
struct snd_seq_ev_ext 220,7751
	unsigned int len;221,7775
	void *ptr;ptr222,7815
struct snd_seq_result 225,7899
	int event;226,7923
	int result;227,7963
struct snd_seq_real_time 231,7981
	unsigned int tv_sec;232,8008
	unsigned int tv_nsec;233,8044
typedef unsigned int snd_seq_tick_time_t;236,8089
union snd_seq_timestamp 238,8149
	snd_seq_tick_time_t tick;239,8175
	struct snd_seq_real_time time;240,8202
struct snd_seq_queue_skew 243,8238
	unsigned int value;244,8266
	unsigned int base;245,8287
struct snd_seq_ev_queue_control 249,8338
	unsigned char queue;250,8372
	unsigned char pad[pad251,8417
		signed int value;253,8466
		union snd_seq_timestamp time;254,8521
		unsigned int position;255,8564
		struct snd_seq_queue_skew skew;256,8610
		unsigned int d32[d32257,8644
		unsigned char d8[d8258,8667
	} param;259,8690
struct snd_seq_ev_quote 263,8749
	struct snd_seq_addr origin;264,8775
	unsigned short value;265,8827
	struct snd_seq_event *event;event266,8871
struct snd_seq_event 271,8973
	snd_seq_event_type_t type;272,8996
	unsigned char flags;273,9041
	char tag;274,9082
	unsigned char queue;276,9095
	union snd_seq_timestamp time;277,9139
	struct snd_seq_addr source;280,9192
	struct snd_seq_addr dest;281,9242
		struct snd_seq_ev_note note;284,9328
		struct snd_seq_ev_ctrl control;285,9359
		struct snd_seq_ev_raw8 raw8;286,9393
		struct snd_seq_ev_raw32 raw32;287,9424
		struct snd_seq_ev_ext ext;288,9457
		struct snd_seq_ev_queue_control queue;289,9486
		union snd_seq_timestamp time;290,9527
		struct snd_seq_addr addr;291,9559
		struct snd_seq_connect connect;292,9587
		struct snd_seq_result result;293,9621
		struct snd_seq_ev_quote quote;294,9653
	} data;295,9686
struct snd_seq_event_bounce 302,9754
	int err;303,9784
	struct snd_seq_event event;304,9794
struct snd_seq_system_info 310,9889
	int queues;311,9918
	int clients;312,9960
	int ports;313,10004
	int channels;314,10049
	int cur_clients;315,10098
	int cur_queues;316,10139
	char reserved[reserved317,10179
struct snd_seq_running_info 322,10238
	unsigned char client;323,10268
	unsigned char big_endian;324,10308
	unsigned char cpu_mode;325,10356
	unsigned char pad;326,10409
	unsigned char reserved[reserved327,10445
#define SNDRV_SEQ_CLIENT_SYSTEM	332,10507
#define SNDRV_SEQ_CLIENT_DUMMY	334,10573
#define SNDRV_SEQ_CLIENT_OSS	335,10627
typedef int __bitwise snd_seq_client_type_t;339,10711
#define	NO_CLIENT	340,10756
#define	USER_CLIENT	341,10810
#define	KERNEL_CLIENT	342,10866
#define SNDRV_SEQ_FILTER_BROADCAST	345,10975
#define SNDRV_SEQ_FILTER_MULTICAST	346,11049
#define SNDRV_SEQ_FILTER_BOUNCE	347,11123
#define SNDRV_SEQ_FILTER_USE_EVENT	348,11198
struct snd_seq_client_info 350,11265
	int client;351,11294
	snd_seq_client_type_t type;352,11340
	char name[name353,11387
	unsigned int filter;354,11423
	unsigned char multicast_filter[multicast_filter355,11465
	unsigned char event_filter[event_filter356,11531
	int num_ports;357,11590
	int event_lost;358,11634
	char reserved[reserved359,11681
struct snd_seq_client_pool 364,11751
	int client;365,11780
	int output_pool;366,11826
	int input_pool;367,11878
	int output_room;368,11929
	int output_free;369,12002
	int input_free;370,12039
	char reserved[reserved371,12076
#define SNDRV_SEQ_REMOVE_INPUT	377,12144
#define SNDRV_SEQ_REMOVE_OUTPUT	378,12208
#define SNDRV_SEQ_REMOVE_DEST	379,12274
#define SNDRV_SEQ_REMOVE_DEST_CHANNEL	380,12356
#define SNDRV_SEQ_REMOVE_TIME_BEFORE	381,12427
#define SNDRV_SEQ_REMOVE_TIME_AFTER	382,12501
#define SNDRV_SEQ_REMOVE_TIME_TICK	383,12576
#define SNDRV_SEQ_REMOVE_EVENT_TYPE	384,12641
#define SNDRV_SEQ_REMOVE_IGNORE_OFF 385,12713
#define SNDRV_SEQ_REMOVE_TAG_MATCH 386,12787
struct snd_seq_remove_events 388,12871
	unsigned int  remove_mode;389,12902
	union snd_seq_timestamp time;391,12976
	unsigned char queue;393,13008
	struct snd_seq_addr dest;394,13058
	unsigned char channel;395,13115
	int  type;397,13170
	char  tag;398,13210
	int  reserved[reserved400,13248
#define SNDRV_SEQ_PORT_SYSTEM_TIMER	406,13347
#define SNDRV_SEQ_PORT_SYSTEM_ANNOUNCE	407,13385
#define SNDRV_SEQ_PORT_CAP_READ	410,13462
#define SNDRV_SEQ_PORT_CAP_WRITE	411,13532
#define SNDRV_SEQ_PORT_CAP_SYNC_READ	413,13601
#define SNDRV_SEQ_PORT_CAP_SYNC_WRITE	414,13645
#define SNDRV_SEQ_PORT_CAP_DUPLEX	416,13691
#define SNDRV_SEQ_PORT_CAP_SUBS_READ	418,13733
#define SNDRV_SEQ_PORT_CAP_SUBS_WRITE	419,13807
#define SNDRV_SEQ_PORT_CAP_NO_EXPORT	420,13883
#define SNDRV_SEQ_PORT_TYPE_SPECIFIC	423,13971
#define SNDRV_SEQ_PORT_TYPE_MIDI_GENERIC 424,14039
#define SNDRV_SEQ_PORT_TYPE_MIDI_GM	425,14113
#define SNDRV_SEQ_PORT_TYPE_MIDI_GS	426,14193
#define SNDRV_SEQ_PORT_TYPE_MIDI_XG	427,14263
#define SNDRV_SEQ_PORT_TYPE_MIDI_MT32	428,14333
#define SNDRV_SEQ_PORT_TYPE_MIDI_GM2	429,14408
#define SNDRV_SEQ_PORT_TYPE_SYNTH	432,14516
#define SNDRV_SEQ_PORT_TYPE_DIRECT_SAMPLE 433,14617
#define SNDRV_SEQ_PORT_TYPE_SAMPLE	434,14715
#define SNDRV_SEQ_PORT_TYPE_HARDWARE	436,14827
#define SNDRV_SEQ_PORT_TYPE_SOFTWARE	437,14907
#define SNDRV_SEQ_PORT_TYPE_SYNTHESIZER	438,14982
#define SNDRV_SEQ_PORT_TYPE_PORT	439,15052
#define SNDRV_SEQ_PORT_TYPE_APPLICATION	440,15127
#define SNDRV_SEQ_PORT_FLG_GIVEN_PORT	443,15244
#define SNDRV_SEQ_PORT_FLG_TIMESTAMP	444,15289
#define SNDRV_SEQ_PORT_FLG_TIME_REAL	445,15333
struct snd_seq_port_info 447,15378
	struct snd_seq_addr addr;448,15405
	char name[name449,15458
	unsigned int capability;451,15493
	unsigned int type;452,15546
	int midi_channels;453,15588
	int midi_voices;454,15638
	int synth_voices;455,15684
	int read_use;457,15733
	int write_use;458,15801
	void *kernel;kernel460,15868
	unsigned int flags;461,15930
	unsigned char time_queue;462,15977
	char reserved[reserved463,16035
#define SNDRV_SEQ_QUEUE_FLG_SYNC	468,16100
struct snd_seq_queue_info 471,16184
	int queue;472,16212
	int owner;478,16371
	unsigned locked:locked479,16423
	char name[name480,16486
	unsigned int flags;481,16528
	char reserved[reserved482,16561
struct snd_seq_queue_status 487,16631
	int queue;488,16661
	int events;489,16690
	snd_seq_tick_time_t tick;490,16734
	struct snd_seq_real_time time;491,16780
	int running;492,16831
	int flags;493,16876
	char reserved[reserved494,16910
struct snd_seq_queue_tempo 499,16975
	int queue;500,17004
	unsigned int tempo;501,17040
	int ppq;502,17091
	unsigned int skew_value;503,17140
	unsigned int skew_base;504,17183
	char reserved[reserved505,17231
#define SNDRV_SEQ_TIMER_ALSA	510,17308
#define SNDRV_SEQ_TIMER_MIDI_CLOCK	511,17357
#define SNDRV_SEQ_TIMER_MIDI_TICK	512,17425
struct snd_seq_queue_timer 515,17520
	int queue;516,17549
	int type;517,17585
			struct snd_timer_id id;520,17642
			unsigned int resolution;521,17691
		} alsa;522,17742
	} u;523,17752
	char reserved[reserved524,17758
struct snd_seq_queue_client 528,17809
	int queue;529,17839
	int client;530,17874
	int used;531,17911
	char reserved[reserved534,18031
#define SNDRV_SEQ_PORT_SUBS_EXCLUSIVE	538,18077
#define SNDRV_SEQ_PORT_SUBS_TIMESTAMP	539,18149
#define SNDRV_SEQ_PORT_SUBS_TIME_REAL	540,18194
struct snd_seq_port_subscribe 542,18240
	struct snd_seq_addr sender;543,18272
	struct snd_seq_addr dest;544,18322
	unsigned int voices;545,18375
	unsigned int flags;546,18454
	unsigned char queue;547,18488
	unsigned char pad[pad548,18551
	char reserved[reserved549,18590
#define SNDRV_SEQ_QUERY_SUBS_READ	553,18647
#define SNDRV_SEQ_QUERY_SUBS_WRITE	554,18683
struct snd_seq_query_subs 556,18721
	struct snd_seq_addr root;557,18749
	int type;558,18812
	int index;559,18844
	int num_subs;560,18870
	struct snd_seq_addr addr;561,18934
	unsigned char queue;562,18979
	unsigned int flags;563,19019
	char reserved[reserved564,19058
#define SNDRV_SEQ_IOCTL_PVERSION	572,19131
#define SNDRV_SEQ_IOCTL_CLIENT_ID	573,19186
#define SNDRV_SEQ_IOCTL_SYSTEM_INFO	574,19242
#define SNDRV_SEQ_IOCTL_RUNNING_MODE	575,19323
#define SNDRV_SEQ_IOCTL_GET_CLIENT_INFO	577,19407
#define SNDRV_SEQ_IOCTL_SET_CLIENT_INFO	578,19492
#define SNDRV_SEQ_IOCTL_CREATE_PORT	580,19578
#define SNDRV_SEQ_IOCTL_DELETE_PORT	581,19657
#define SNDRV_SEQ_IOCTL_GET_PORT_INFO	582,19736
#define SNDRV_SEQ_IOCTL_SET_PORT_INFO	583,19817
#define SNDRV_SEQ_IOCTL_SUBSCRIBE_PORT	585,19899
#define SNDRV_SEQ_IOCTL_UNSUBSCRIBE_PORT 586,19986
#define SNDRV_SEQ_IOCTL_CREATE_QUEUE	588,20076
#define SNDRV_SEQ_IOCTL_DELETE_QUEUE	589,20157
#define SNDRV_SEQ_IOCTL_GET_QUEUE_INFO	590,20238
#define SNDRV_SEQ_IOCTL_SET_QUEUE_INFO	591,20321
#define SNDRV_SEQ_IOCTL_GET_NAMED_QUEUE	592,20404
#define SNDRV_SEQ_IOCTL_GET_QUEUE_STATUS 593,20488
#define SNDRV_SEQ_IOCTL_GET_QUEUE_TEMPO	594,20575
#define SNDRV_SEQ_IOCTL_SET_QUEUE_TEMPO	595,20660
#define SNDRV_SEQ_IOCTL_GET_QUEUE_OWNER	596,20745
#define SNDRV_SEQ_IOCTL_SET_QUEUE_OWNER	597,20830
#define SNDRV_SEQ_IOCTL_GET_QUEUE_TIMER	598,20915
#define SNDRV_SEQ_IOCTL_SET_QUEUE_TIMER	599,21000
#define SNDRV_SEQ_IOCTL_GET_QUEUE_CLIENT	604,21261
#define SNDRV_SEQ_IOCTL_SET_QUEUE_CLIENT	605,21348
#define SNDRV_SEQ_IOCTL_GET_CLIENT_POOL	606,21435
#define SNDRV_SEQ_IOCTL_SET_CLIENT_POOL	607,21520
#define SNDRV_SEQ_IOCTL_REMOVE_EVENTS	608,21605
#define SNDRV_SEQ_IOCTL_QUERY_SUBS	609,21690
#define SNDRV_SEQ_IOCTL_GET_SUBSCRIPTION	610,21769
#define SNDRV_SEQ_IOCTL_QUERY_NEXT_CLIENT	611,21858
#define SNDRV_SEQ_IOCTL_QUERY_NEXT_PORT	612,21945

alsa-lib-1.0.29/include/sound/sb16_csp.h,2173
#define __SOUND_SB16_CSP_H2,27
#define SNDRV_SB_CSP_MODE_NONE	27,965
#define SNDRV_SB_CSP_MODE_DSP_READ	28,1002
#define SNDRV_SB_CSP_MODE_DSP_WRITE	29,1064
#define SNDRV_SB_CSP_MODE_QSOUND	30,1123
#define SNDRV_SB_CSP_LOAD_FROMUSER	33,1197
#define SNDRV_SB_CSP_LOAD_INITBLOCK	34,1237
#define SNDRV_SB_CSP_SAMPLE_8BIT	37,1302
#define SNDRV_SB_CSP_SAMPLE_16BIT	38,1341
#define SNDRV_SB_CSP_MONO	41,1401
#define SNDRV_SB_CSP_STEREO	42,1434
#define SNDRV_SB_CSP_RATE_8000	45,1485
#define SNDRV_SB_CSP_RATE_11025	46,1522
#define SNDRV_SB_CSP_RATE_22050	47,1560
#define SNDRV_SB_CSP_RATE_44100	48,1598
#define SNDRV_SB_CSP_RATE_ALL	49,1636
#define SNDRV_SB_CSP_ST_IDLE	52,1697
#define SNDRV_SB_CSP_ST_LOADED	53,1732
#define SNDRV_SB_CSP_ST_RUNNING	54,1769
#define SNDRV_SB_CSP_ST_PAUSED	55,1807
#define SNDRV_SB_CSP_ST_AUTO	56,1844
#define SNDRV_SB_CSP_ST_QSOUND	57,1879
#define SNDRV_SB_CSP_QSOUND_MAX_RIGHT	60,1964
#define SNDRV_SB_CSP_MAX_MICROCODE_FILE_SIZE	63,2047
typedef struct snd_sb_csp_mc_header 66,2123
	char codec_name[codec_name67,2161
	unsigned short func_req;68,2207
} snd_sb_csp_mc_header_t;69,2258
typedef struct snd_sb_csp_microcode 72,2314
	snd_sb_csp_mc_header_t info;73,2352
	unsigned char data[data74,2382
} snd_sb_csp_microcode_t;75,2441
typedef struct snd_sb_csp_start 78,2517
	int sample_width;79,2551
	int channels;80,2601
} snd_sb_csp_start_t;81,2644
typedef struct snd_sb_csp_info 84,2689
	char codec_name[codec_name85,2722
	unsigned short func_nr;86,2768
	unsigned int acc_format;87,2816
	unsigned short acc_channels;88,2869
	unsigned short acc_width;89,2923
	unsigned short acc_rates;90,2978
	unsigned short csp_mode;91,3033
	unsigned short run_channels;92,3085
	unsigned short run_width;93,3139
	unsigned short version;94,3193
	unsigned short state;95,3249
} snd_sb_csp_info_t;96,3290
#define SNDRV_SB_CSP_IOCTL_INFO	100,3359
#define SNDRV_SB_CSP_IOCTL_LOAD_CODE	102,3455
#define SNDRV_SB_CSP_IOCTL_UNLOAD_CODE	104,3564
#define SNDRV_SB_CSP_IOCTL_START	106,3634
#define SNDRV_SB_CSP_IOCTL_STOP	108,3718
#define SNDRV_SB_CSP_IOCTL_PAUSE	110,3799
#define SNDRV_SB_CSP_IOCTL_RESTART	112,3882

alsa-lib-1.0.29/include/mixer.h,1743
#define __ALSA_MIXER_H29,1095
typedef struct _snd_mixer snd_mixer_t;42,1256
typedef struct _snd_mixer_class snd_mixer_class_t;44,1330
typedef struct _snd_mixer_elem snd_mixer_elem_t;46,1409
typedef int (*snd_mixer_callback_t)snd_mixer_callback_t55,1659
typedef int (*snd_mixer_elem_callback_t)snd_mixer_elem_callback_t65,1936
typedef int (*snd_mixer_compare_t)snd_mixer_compare_t74,2199
typedef int (*snd_mixer_event_t)snd_mixer_event_t85,2596
typedef enum _snd_mixer_elem_type 90,2758
	SND_MIXER_ELEM_SIMPLE,92,2823
	SND_MIXER_ELEM_LAST 93,2847
	SND_MIXER_ELEM_LAST = SND_MIXER_ELEM_SIMPLE93,2847
} snd_mixer_elem_type_t;94,2892
#define snd_mixer_class_alloca(147,5737
typedef enum _snd_mixer_selem_channel_id 170,6851
	SND_MIXER_SCHN_UNKNOWN 172,6910
	SND_MIXER_SCHN_FRONT_LEFT 174,6959
	SND_MIXER_SCHN_FRONT_RIGHT,176,7011
	SND_MIXER_SCHN_REAR_LEFT,178,7058
	SND_MIXER_SCHN_REAR_RIGHT,180,7104
	SND_MIXER_SCHN_FRONT_CENTER,182,7153
	SND_MIXER_SCHN_WOOFER,184,7198
	SND_MIXER_SCHN_SIDE_LEFT,186,7240
	SND_MIXER_SCHN_SIDE_RIGHT,188,7286
	SND_MIXER_SCHN_REAR_CENTER,190,7334
	SND_MIXER_SCHN_LAST 191,7363
	SND_MIXER_SCHN_MONO 193,7422
	SND_MIXER_SCHN_MONO = SND_MIXER_SCHN_FRONT_LEFT193,7422
} snd_mixer_selem_channel_id_t;194,7471
enum snd_mixer_selem_regopt_abstract 197,7571
	SND_MIXER_SABSTRACT_NONE 199,7678
	SND_MIXER_SABSTRACT_BASIC,201,7772
struct snd_mixer_selem_regopt 205,7851
	int ver;207,7909
	enum snd_mixer_selem_regopt_abstract abstract;209,7956
	const char *device;device211,8084
	snd_pcm_t *playback_pcm;playback_pcm213,8171
	snd_pcm_t *capture_pcm;capture_pcm215,8262
typedef struct _snd_mixer_selem_id snd_mixer_selem_id_t;219,8330
#define snd_mixer_selem_id_alloca(299,13724

alsa-lib-1.0.29/include/local.h,4600
#define __LOCAL_H23,892
#define __BYTE_ORDER 38,1169
#define __LITTLE_ENDIAN 41,1232
#define __BIG_ENDIAN 44,1298
#define RTLD_NOW	62,1623
#define SND_LITTLE_ENDIAN66,1686
#define SNDRV_LITTLE_ENDIAN67,1712
#define SND_BIG_ENDIAN69,1775
#define SNDRV_BIG_ENDIAN70,1798
#define _snd_config_iterator 75,1868
#define _snd_interval 76,1907
#define _snd_pcm_info 77,1942
#define _snd_pcm_hw_params 78,1977
#define _snd_pcm_sw_params 79,2022
#define _snd_pcm_status 80,2067
#define _snd_ctl_card_info 82,2107
#define _snd_ctl_elem_id 83,2152
#define _snd_ctl_elem_list 84,2193
#define _snd_ctl_elem_info 85,2238
#define _snd_ctl_elem_value 86,2283
#define _snd_ctl_event 87,2330
#define _snd_rawmidi_info 89,2368
#define _snd_rawmidi_params 90,2411
#define _snd_rawmidi_status 91,2458
#define _snd_hwdep_info 93,2506
#define _snd_hwdep_dsp_status 94,2545
#define _snd_hwdep_dsp_image 95,2596
#define _snd_seq_queue_tempo 97,2646
#define _snd_seq_client_info 98,2695
#define _snd_seq_port_info 99,2744
#define _snd_seq_system_info 100,2789
#define _snd_seq_queue_info 101,2838
#define _snd_seq_queue_status 102,2885
#define _snd_seq_queue_timer 103,2936
#define _snd_seq_port_subscribe 104,2985
#define _snd_seq_query_subscribe 105,3040
#define _snd_seq_client_pool 106,3092
#define _snd_seq_remove_events 107,3141
#define _snd_timer_id 109,3195
#define _snd_timer_ginfo 110,3230
#define _snd_timer_gparams 111,3271
#define _snd_timer_gstatus 112,3316
#define _snd_timer_select 113,3361
#define _snd_timer_info 114,3404
#define _snd_timer_params 115,3443
#define _snd_timer_status 116,3486
#define ALSA_LIBRARY_BUILD118,3530
#define snd_aes_iec958	121,3632
#define snd_pcm_uframes_t	122,3673
#define snd_pcm_sframes_t	123,3719
#define snd_pcm_access_t	124,3765
#define snd_pcm_format_t	125,3809
#define snd_pcm_subformat_t	126,3853
#define snd_pcm_state_t	127,3903
#define snd_interval	128,3946
#define snd_mask	129,3983
#define snd_ctl_elem_type_t	130,4012
#define snd_ctl_elem_iface_t	131,4062
#define snd_ctl_tlv	132,4114
#define __user136,4210
#define __force139,4248
#undef snd_aes_iec958145,4359
#undef snd_pcm_uframes_t146,4381
#undef snd_pcm_sframes_t147,4406
#undef snd_pcm_access_t148,4431
#undef snd_pcm_format_t149,4455
#undef snd_pcm_subformat_t150,4479
#undef snd_pcm_state_t151,4506
#undef snd_ctl_elem_type_t152,4529
#undef snd_ctl_elem_iface_t153,4556
#define snd_seq_addr	174,5011
#define snd_seq_tick_time_t	175,5048
#define snd_seq_real_time	176,5098
#define snd_seq_timestamp	177,5144
#define snd_seq_event_type_t	178,5190
#define snd_seq_event	179,5242
#define snd_seq_connect	180,5281
#define snd_seq_ev_note	181,5324
#define snd_seq_ev_ctrl	182,5367
#define snd_seq_ev_raw8	183,5410
#define snd_seq_ev_raw32	184,5453
#define snd_seq_ev_ext	185,5497
#define snd_seq_result	186,5538
#define snd_seq_queue_skew	187,5579
#define snd_seq_ev_queue_control	188,5627
#define snd_seq_client_t	189,5687
#define snd_seq_client_type_t	190,5731
#undef snd_seq_client_t195,5846
#undef snd_seq_client_type_t196,5870
struct _snd_async_handler 202,5967
		SND_ASYNC_HANDLER_GENERIC,204,6003
		SND_ASYNC_HANDLER_CTL,205,6032
		SND_ASYNC_HANDLER_PCM,206,6057
		SND_ASYNC_HANDLER_TIMER,207,6082
	} type;208,6109
	int fd;209,6118
		snd_ctl_t *ctl;ctl211,6136
		snd_pcm_t *pcm;pcm212,6154
		snd_timer_t *timer;timer213,6172
	} u;214,6194
	snd_async_callback_t callback;215,6200
	void *private_data;private_data216,6232
	struct list_head glist;217,6253
	struct list_head hlist;218,6278
typedef enum _snd_set_mode 221,6307
	SND_CHANGE,222,6336
	SND_TRY,223,6349
	SND_TEST,224,6359
} snd_set_mode_t;225,6370
#define CHECK_SANITY(240,6751
#define SNDMSG(242,6821
#define SYSMSG(243,6902
#define CHECK_SANITY(245,6993
#define SNDMSG(246,7039
#define SYSMSG(247,7073
#define HAVE_GNU_LD252,7122
#define HAVE_ELF253,7142
#define HAVE_ASM_PREVIOUS_DIRECTIVE254,7159
#define ASM_NAME(261,7341
#   define __make_section_unallocated(268,7526
#   define __make_section_unallocated(271,7680
#   define __make_section_unallocated(274,7802
#   define link_warning(280,8035
#   define link_warning(285,8288
#  define link_warning(291,8545
# define link_warning(297,8754
static inline int snd_open_device(300,8797
#define snd_dlobj_cache_get 324,9253
#define snd_dlobj_cache_put 326,9305
#define snd_dlobj_cache_cleanup 328,9357
#define snd_config_set_hop 330,9417
#define snd_config_check_hop 332,9467
#define snd_config_search_alias_hooks 334,9521
#define SND_CONF_MAX_HOPS	345,9914

alsa-lib-1.0.29/include/hwdep.h,1648
#define __ALSA_HWDEP_H29,1095
#define SND_HWDEP_DLSYM_VERSION	42,1312
typedef struct _snd_hwdep_info snd_hwdep_info_t;45,1398
typedef struct _snd_hwdep_dsp_status snd_hwdep_dsp_status_t;48,1482
typedef struct _snd_hwdep_dsp_image snd_hwdep_dsp_image_t;51,1577
typedef enum _snd_hwdep_iface 54,1660
	SND_HWDEP_IFACE_OPL2 55,1692
	SND_HWDEP_IFACE_OPL3,56,1743
	SND_HWDEP_IFACE_OPL4,57,1791
	SND_HWDEP_IFACE_SB16CSP,58,1839
	SND_HWDEP_IFACE_EMU10K1,59,1888
	SND_HWDEP_IFACE_YSS225,60,1937
	SND_HWDEP_IFACE_ICS2115,61,1985
	SND_HWDEP_IFACE_SSCAPE,62,2034
	SND_HWDEP_IFACE_VX,63,2108
	SND_HWDEP_IFACE_MIXART,64,2156
	SND_HWDEP_IFACE_USX2Y,65,2212
	SND_HWDEP_IFACE_EMUX_WAVETABLE,66,2277
	SND_HWDEP_IFACE_BLUETOOTH,67,2333
	SND_HWDEP_IFACE_USX2Y_PCM,68,2385
	SND_HWDEP_IFACE_PCXHR,69,2461
	SND_HWDEP_IFACE_SB_RC,70,2509
	SND_HWDEP_IFACE_HDA,71,2577
	SND_HWDEP_IFACE_USB_STREAM,72,2617
	SND_HWDEP_IFACE_FW_DICE,73,2682
	SND_HWDEP_IFACE_FW_FIREWORKS,74,2740
	SND_HWDEP_IFACE_FW_BEBOB,75,2813
	SND_HWDEP_IFACE_FW_OXFW,76,2876
	SND_HWDEP_IFACE_LAST 78,2943
	SND_HWDEP_IFACE_LAST = SND_HWDEP_IFACE_FW_OXFW	78,2943
} snd_hwdep_iface_t;79,3026
#define SND_HWDEP_OPEN_READ	82,3072
#define SND_HWDEP_OPEN_WRITE	84,3136
#define SND_HWDEP_OPEN_DUPLEX	86,3213
#define SND_HWDEP_OPEN_NONBLOCK	88,3298
typedef enum _snd_hwdep_type 91,3370
	SND_HWDEP_TYPE_HW,93,3428
	SND_HWDEP_TYPE_SHM,95,3505
	SND_HWDEP_TYPE_INET97,3574
} snd_hwdep_type_t;98,3595
typedef struct _snd_hwdep snd_hwdep_t;101,3636
#define snd_hwdep_info_alloca(118,4651
#define snd_hwdep_dsp_status_alloca(132,5404
#define snd_hwdep_dsp_image_alloca(145,6217

alsa-lib-1.0.29/include/input.h,225
#define __ALSA_INPUT_H29,1095
typedef struct _snd_input snd_input_t;54,1730
typedef enum _snd_input_type 57,1789
	SND_INPUT_STDIO,59,1855
	SND_INPUT_BUFFER61,1909
} snd_input_type_t;62,1927
int snd_input_scanf(68,2228

alsa-lib-1.0.29/include/alisp.h,335
struct alisp_cfg 22,862
	int verbose:verbose23,881
	    warning:warning24,898
	    debug:debug25,915
	snd_input_t *in;in26,930
	snd_output_t *out;out27,967
	snd_output_t *eout;eout28,1008
	snd_output_t *vout;vout29,1048
	snd_output_t *wout;wout30,1090
	snd_output_t *dout;dout31,1132
int alsa_lisp_function(42,1491

alsa-lib-1.0.29/include/output.h,234
#define __ALSA_OUTPUT_H29,1097
typedef struct _snd_output snd_output_t;54,1762
typedef enum _snd_output_type 57,1824
	SND_OUTPUT_STDIO,59,1890
	SND_OUTPUT_BUFFER61,1944
} snd_output_type_t;62,1963
int snd_output_printf(69,2310

alsa-lib-1.0.29/include/global.h,859
#define __ALSA_GLOBAL_H_29,1098
#define ATTRIBUTE_UNUSED 51,1578
#define __SND_DLSYM_VERSION(57,1746
#define SND_DLSYM_BUILD_VERSION(62,1917
struct snd_dlsym_link 66,2032
	struct snd_dlsym_link *next;next67,2056
	const char *dlsym_name;dlsym_name68,2086
	const void *dlsym_ptr;dlsym_ptr69,2111
#define __SND_DLSYM_VERSION(75,2261
#define SND_DLSYM_BUILD_VERSION(80,2450
#define __STRING(94,3141
#define SND_DLSYM_VERSION(98,3243
#define __snd_alloca(106,3481
typedef struct _snd_async_handler snd_async_handler_t;114,3841
typedef void (*snd_async_callback_t)snd_async_callback_t121,4003
struct timeval 138,4765
	time_t		tv_sec;139,4782
	long		tv_usec;140,4814
struct timespec 143,4853
	time_t		tv_sec;144,4871
	long		tv_nsec;145,4903
typedef struct timeval snd_timestamp_t;151,4972
typedef struct timespec snd_htimestamp_t;153,5036

alsa-lib-1.0.29/include/list.h,697
#define _LIST_H2,16
struct list_head 19,473
	struct list_head *next,next20,492
	struct list_head *next, *prev;prev20,492
#define LIST_HEAD_INIT(24,535
#define LIST_HEAD(26,586
#define INIT_LIST_HEAD(29,659
static __inline__ void __list_add(39,919
static __inline__ void list_add(57,1322
static __inline__ void list_add_tail(70,1650
static __inline__ void __list_del(82,1961
static __inline__ void list_del(94,2289
static __inline__ void list_del_init(103,2512
static __inline__ int list_empty(113,2725
static __inline__ void list_splice(123,2935
#define list_for_each(144,3386
#define list_for_each_safe(153,3720
#define list_entry(162,4064
#define list_entry_offset(171,4362

alsa-lib-1.0.29/include/seq_event.h,5394
#define __ALSA_SEQ_EVENT_H29,1103
typedef unsigned char snd_seq_event_type_t;41,1291
enum snd_seq_event_type 44,1364
	SND_SEQ_EVENT_SYSTEM 46,1449
	SND_SEQ_EVENT_RESULT,48,1544
	SND_SEQ_EVENT_NOTE 51,1644
	SND_SEQ_EVENT_NOTEON,53,1723
	SND_SEQ_EVENT_NOTEOFF,55,1801
	SND_SEQ_EVENT_KEYPRESS,57,1904
	SND_SEQ_EVENT_CONTROLLER 60,1988
	SND_SEQ_EVENT_PGMCHANGE,62,2081
	SND_SEQ_EVENT_CHANPRESS,64,2170
	SND_SEQ_EVENT_PITCHBEND,66,2282
	SND_SEQ_EVENT_CONTROL14,68,2378
	SND_SEQ_EVENT_NONREGPARAM,70,2463
	SND_SEQ_EVENT_REGPARAM,72,2548
	SND_SEQ_EVENT_SONGPOS 75,2648
	SND_SEQ_EVENT_SONGSEL,77,2755
	SND_SEQ_EVENT_QFRAME,79,2854
	SND_SEQ_EVENT_TIMESIGN,81,2948
	SND_SEQ_EVENT_KEYSIGN,83,3043
	SND_SEQ_EVENT_START 86,3161
	SND_SEQ_EVENT_CONTINUE,88,3275
	SND_SEQ_EVENT_STOP,90,3383
	SND_SEQ_EVENT_SETPOS_TICK,92,3483
	SND_SEQ_EVENT_SETPOS_TIME,94,3595
	SND_SEQ_EVENT_TEMPO,96,3696
	SND_SEQ_EVENT_CLOCK,98,3802
	SND_SEQ_EVENT_TICK,100,3907
	SND_SEQ_EVENT_QUEUE_SKEW,102,4000
	SND_SEQ_EVENT_SYNC_POS,104,4104
	SND_SEQ_EVENT_TUNE_REQUEST 107,4175
	SND_SEQ_EVENT_RESET,109,4265
	SND_SEQ_EVENT_SENSING,111,4340
	SND_SEQ_EVENT_ECHO 114,4417
	SND_SEQ_EVENT_OSS,116,4503
	SND_SEQ_EVENT_CLIENT_START 119,4592
	SND_SEQ_EVENT_CLIENT_EXIT,121,4696
	SND_SEQ_EVENT_CLIENT_CHANGE,123,4798
	SND_SEQ_EVENT_PORT_START,125,4892
	SND_SEQ_EVENT_PORT_EXIT,127,4991
	SND_SEQ_EVENT_PORT_CHANGE,129,5089
	SND_SEQ_EVENT_PORT_SUBSCRIBED,132,5180
	SND_SEQ_EVENT_PORT_UNSUBSCRIBED,134,5277
	SND_SEQ_EVENT_USR0 137,5375
	SND_SEQ_EVENT_USR1,139,5464
	SND_SEQ_EVENT_USR2,141,5548
	SND_SEQ_EVENT_USR3,143,5632
	SND_SEQ_EVENT_USR4,145,5716
	SND_SEQ_EVENT_USR5,147,5800
	SND_SEQ_EVENT_USR6,149,5884
	SND_SEQ_EVENT_USR7,151,5968
	SND_SEQ_EVENT_USR8,153,6052
	SND_SEQ_EVENT_USR9,155,6136
	SND_SEQ_EVENT_SYSEX 158,6244
	SND_SEQ_EVENT_BOUNCE,160,6330
	SND_SEQ_EVENT_USR_VAR0 162,6422
	SND_SEQ_EVENT_USR_VAR1,164,6521
	SND_SEQ_EVENT_USR_VAR2,166,6614
	SND_SEQ_EVENT_USR_VAR3,168,6707
	SND_SEQ_EVENT_USR_VAR4,170,6800
	SND_SEQ_EVENT_NONE 173,6859
typedef struct snd_seq_addr 178,6921
	unsigned char client;179,6951
	unsigned char port;180,6992
} snd_seq_addr_t;181,7029
typedef struct snd_seq_connect 184,7095
	snd_seq_addr_t sender;185,7128
	snd_seq_addr_t dest;186,7175
} snd_seq_connect_t;187,7225
typedef struct snd_seq_real_time 191,7277
	unsigned int tv_sec;192,7312
	unsigned int tv_nsec;193,7351
} snd_seq_real_time_t;194,7395
typedef unsigned int snd_seq_tick_time_t;197,7455
typedef union snd_seq_timestamp 200,7524
	snd_seq_tick_time_t tick;201,7558
	struct snd_seq_real_time time;202,7603
} snd_seq_timestamp_t;203,7653
#define SND_SEQ_TIME_STAMP_TICK	211,7741
#define SND_SEQ_TIME_STAMP_REAL	212,7814
#define SND_SEQ_TIME_STAMP_MASK	213,7885
#define SND_SEQ_TIME_MODE_ABS	215,7958
#define SND_SEQ_TIME_MODE_REL	216,8023
#define SND_SEQ_TIME_MODE_MASK	217,8094
#define SND_SEQ_EVENT_LENGTH_FIXED	219,8166
#define SND_SEQ_EVENT_LENGTH_VARIABLE	220,8233
#define SND_SEQ_EVENT_LENGTH_VARUSR	221,8306
#define SND_SEQ_EVENT_LENGTH_MASK	222,8397
#define SND_SEQ_PRIORITY_NORMAL	224,8474
#define SND_SEQ_PRIORITY_HIGH	225,8538
#define SND_SEQ_PRIORITY_MASK	226,8624
typedef struct snd_seq_ev_note 230,8713
	unsigned char channel;231,8746
	unsigned char note;232,8794
	unsigned char velocity;233,8829
	unsigned char off_velocity;234,8872
	unsigned int duration;235,8957
} snd_seq_ev_note_t;236,9044
typedef struct snd_seq_ev_ctrl 239,9090
	unsigned char channel;240,9123
	unsigned char unused[unused241,9171
	unsigned int param;242,9214
	signed int value;243,9262
} snd_seq_ev_ctrl_t;244,9304
typedef struct snd_seq_ev_raw8 247,9365
	unsigned char d[d248,9398
} snd_seq_ev_raw8_t;249,9441
typedef struct snd_seq_ev_raw32 252,9505
	unsigned int d[d253,9539
} snd_seq_ev_raw32_t;254,9581
struct snd_seq_ev_ext 257,9632
	unsigned int len;258,9656
	void *ptr;ptr259,9699
typedef struct snd_seq_ev_ext snd_seq_ev_ext_t;262,9814
typedef snd_seq_ev_ext snd_seq_ev_ext_t;265,9922
typedef struct snd_seq_result 269,9992
	int event;270,10024
	int result;271,10066
} snd_seq_result_t;272,10095
typedef struct snd_seq_queue_skew 275,10141
	unsigned int value;276,10177
	unsigned int base;277,10217
} snd_seq_queue_skew_t;278,10255
typedef struct snd_seq_ev_queue_control 281,10307
	unsigned char queue;282,10349
	unsigned char unused[unused283,10396
		signed int value;285,10449
		snd_seq_timestamp_t time;286,10506
		unsigned int position;287,10547
		snd_seq_queue_skew_t skew;288,10595
		unsigned int d32[d32289,10643
		unsigned char d8[d8290,10684
	} param;291,10725
} snd_seq_ev_queue_control_t;292,10763
typedef struct snd_seq_event 296,10818
	snd_seq_event_type_t type;297,10849
	unsigned char flags;298,10896
	unsigned char tag;299,10939
	unsigned char queue;301,10974
	snd_seq_timestamp_t time;302,11020
	snd_seq_addr_t source;304,11070
	snd_seq_addr_t dest;305,11118
		snd_seq_ev_note_t note;308,11179
		snd_seq_ev_ctrl_t control;309,11231
		snd_seq_ev_raw8_t raw8;310,11293
		snd_seq_ev_raw32_t raw32;311,11338
		snd_seq_ev_ext_t ext;312,11385
		snd_seq_ev_queue_control_t queue;313,11432
		snd_seq_timestamp_t time;314,11490
		snd_seq_addr_t addr;315,11536
		snd_seq_connect_t connect;316,11576
		snd_seq_result_t result;317,11633
	} data;318,11690
} snd_seq_event_t;319,11724

alsa-lib-1.0.29/include/search.h,911
#define	_SEARCH_H 21,965
#define __need_size_t25,1009
struct qelem35,1267
    struct qelem *q_forw;q_forw37,1284
    struct qelem *q_back;q_back38,1310
    char q_data[q_data39,1336
# define __COMPAR_FN_T54,1651
typedef int (*__compar_fn_t)__compar_fn_t55,1674
typedef __compar_fn_t comparison_fn_t;58,1766
    FIND,65,1902
    ENTER66,1912
ACTION;68,1926
typedef struct entry70,1935
    char *key;key72,1960
    void *data;data73,1975
extern ENTRY *hsearch hsearch88,2468
extern ENTRY *hsearch __P ((ENTRY __item,88,2468
struct hsearch_data98,2789
    struct _ENTRY *table;table100,2813
    unsigned int size;101,2839
    unsigned int filled;102,2862
  preorder,121,3495
  postorder,122,3507
  endorder,123,3520
  leaf124,3532
VISIT;126,3541
# define __ACTION_FN_T143,4213
typedef void (*__action_fn_t)__action_fn_t144,4236
typedef void (*__free_fn_t)__free_fn_t156,4658

alsa-lib-1.0.29/include/control_external.h,2880
#define __ALSA_CONTROL_EXTERNAL_H27,973
#define SND_CTL_PLUGIN_ENTRY(43,1206
#define SND_CTL_PLUGIN_SYMBOL(48,1337
#define SND_CTL_PLUGIN_DEFINE_FUNC(53,1491
typedef struct snd_ctl_ext snd_ctl_ext_t;58,1705
typedef struct snd_ctl_ext_callback snd_ctl_ext_callback_t;60,1784
typedef unsigned long snd_ctl_ext_key_t;62,1883
typedef snd_ctl_ext snd_ctl_ext_t;65,1986
typedef snd_ctl_ext_callback snd_ctl_ext_callback_t;66,2021
typedef int (snd_ctl_ext_tlv_rw_t)69,2121
#define SND_CTL_EXT_VERSION_MAJOR	75,2310
#define SND_CTL_EXT_VERSION_MINOR	76,2377
#define SND_CTL_EXT_VERSION_TINY	77,2444
#define SND_CTL_EXT_VERSION	81,2553
struct snd_ctl_ext 86,2722
	unsigned int version;91,2857
	int card_idx;95,2966
	char id[id99,3071
	char driver[driver103,3177
	char name[name107,3286
	char longname[longname111,3392
	char mixername[mixername115,3503
	int poll_fd;119,3554
	const snd_ctl_ext_callback_t *callback;callback124,3664
	void *private_data;private_data128,3782
	snd_ctl_t *handle;handle132,3864
	int nonblock;134,3885
	int subscribed;135,3936
		snd_ctl_ext_tlv_rw_t *c;c141,4073
		const unsigned int *p;p142,4100
	} tlv;143,4125
struct snd_ctl_ext_callback 147,4167
	void (*close)close151,4246
	int (*elem_count)elem_count155,4342
	int (*elem_list)elem_list159,4462
	snd_ctl_ext_key_t (*find_elem)find_elem163,4608
	void (*free_key)free_key167,4740
	int (*get_attribute)get_attribute171,4859
	int (*get_integer_info)get_integer_info176,5042
	int (*get_integer64_info)get_integer64_info181,5212
	int (*get_enumerated_info)get_enumerated_info186,5396
	int (*get_enumerated_name)get_enumerated_name190,5539
	int (*read_integer)read_integer195,5724
	int (*read_integer64)read_integer64199,5858
	int (*read_enumerated)read_enumerated203,5998
	int (*read_bytes)read_bytes207,6139
	int (*read_iec958)read_iec958212,6299
	int (*write_integer)write_integer216,6467
	int (*write_integer64)write_integer64220,6626
	int (*write_enumerated)write_enumerated224,6791
	int (*write_bytes)write_bytes228,6957
	int (*write_iec958)write_iec958233,7143
	void (*subscribe_events)subscribe_events237,7303
	int (*read_event)read_event241,7423
	int (*poll_descriptors_count)poll_descriptors_count245,7574
	int (*poll_descriptors)poll_descriptors249,7676
	int (*poll_revents)poll_revents253,7816
typedef enum snd_ctl_ext_access 259,7992
	SND_CTL_EXT_ACCESS_READ 260,8026
	SND_CTL_EXT_ACCESS_WRITE 261,8061
	SND_CTL_EXT_ACCESS_READWRITE 262,8097
	SND_CTL_EXT_ACCESS_VOLATILE 263,8137
	SND_CTL_EXT_ACCESS_TLV_READ 264,8176
	SND_CTL_EXT_ACCESS_TLV_WRITE 265,8215
	SND_CTL_EXT_ACCESS_TLV_READWRITE 266,8255
	SND_CTL_EXT_ACCESS_TLV_COMMAND 267,8299
	SND_CTL_EXT_ACCESS_INACTIVE 268,8341
	SND_CTL_EXT_ACCESS_TLV_CALLBACK 269,8380
} snd_ctl_ext_access_t;270,8424
#define SND_CTL_EXT_KEY_NOT_FOUND	275,8532

alsa-lib-1.0.29/include/conf.h,850
#define __ALSA_CONF_H29,1093
#define SND_CONFIG_DLSYM_VERSION_EVALUATE	43,1417
#define SND_CONFIG_DLSYM_VERSION_HOOK	45,1547
typedef enum _snd_config_type 48,1649
        SND_CONFIG_TYPE_INTEGER,50,1705
        SND_CONFIG_TYPE_INTEGER64,52,1769
        SND_CONFIG_TYPE_REAL,54,1825
        SND_CONFIG_TYPE_STRING,56,1881
        SND_CONFIG_TYPE_POINTER,58,1969
	SND_CONFIG_TYPE_COMPOUND 60,2025
} snd_config_type_t;61,2058
typedef struct _snd_config snd_config_t;69,2295
typedef struct _snd_config_iterator *snd_config_iterator_t;snd_config_iterator_t77,2590
typedef struct _snd_config_update snd_config_update_t;83,2809
#define snd_config_for_each(172,7185
typedef struct snd_devname snd_devname_t;187,7698
struct snd_devname 192,7790
	char *name;name193,7811
	char *comment;comment194,7851
	snd_devname_t *next;next195,7884

alsa-lib-1.0.29/include/aserver.h,3355
typedef enum _snd_dev_type 27,1035
	SND_DEV_TYPE_PCM,28,1064
	SND_DEV_TYPE_CONTROL,29,1083
	SND_DEV_TYPE_RAWMIDI,30,1106
	SND_DEV_TYPE_TIMER,31,1129
	SND_DEV_TYPE_HWDEP,32,1150
	SND_DEV_TYPE_SEQ,33,1171
} snd_dev_type_t;34,1190
typedef enum _snd_transport_type 36,1209
	SND_TRANSPORT_TYPE_SHM,37,1244
	SND_TRANSPORT_TYPE_TCP,38,1269
} snd_transport_type_t;39,1294
#define SND_PCM_IOCTL_HWSYNC	41,1319
#define SND_PCM_IOCTL_STATE	42,1365
#define SND_PCM_IOCTL_MMAP	43,1410
#define SND_PCM_IOCTL_MUNMAP	44,1454
#define SND_PCM_IOCTL_MMAP_COMMIT	45,1500
#define SND_PCM_IOCTL_AVAIL_UPDATE	46,1550
#define SND_PCM_IOCTL_ASYNC	47,1601
#define SND_PCM_IOCTL_CLOSE	48,1646
#define SND_PCM_IOCTL_POLL_DESCRIPTOR	49,1691
#define SND_PCM_IOCTL_HW_PTR_FD	50,1745
#define SND_PCM_IOCTL_APPL_PTR_FD	51,1794
#define SND_PCM_IOCTL_FORWARD	52,1844
	snd_pcm_uframes_t ptr;55,1909
	int use_mmap;56,1933
	off_t offset;57,1948
	int changed;58,1979
} snd_pcm_shm_rbptr_t;59,1993
	long result;62,2034
	int cmd;63,2048
	snd_pcm_shm_rbptr_t hw;64,2058
	snd_pcm_shm_rbptr_t appl;65,2083
			int sig;68,2130
			pid_t pid;69,2142
		} async;70,2156
		snd_pcm_info_t info;71,2167
		snd_pcm_hw_params_t hw_refine;72,2190
		snd_pcm_hw_params_t hw_params;73,2223
		snd_pcm_sw_params_t sw_params;74,2256
		snd_pcm_status_t status;75,2289
			snd_pcm_uframes_t frames;77,2327
		} avail;78,2356
			snd_pcm_sframes_t frames;80,2378
		} delay;81,2407
			int enable;83,2429
		} pause;84,2444
		snd_pcm_channel_info_t channel_info;85,2455
			snd_pcm_uframes_t frames;87,2505
		} rewind;88,2534
			snd_pcm_uframes_t frames;90,2557
		} forward;91,2586
			int fd;93,2610
		} link;94,2621
			snd_pcm_uframes_t offset;96,2642
			snd_pcm_uframes_t frames;97,2671
		} mmap_commit;98,2700
			char use_mmap;100,2728
			int shmid;101,2746
			off_t offset;102,2760
		} rbptr;103,2777
	} u;104,2788
	char data[data105,2794
} snd_pcm_shm_ctrl_t;106,2809
#define PCM_SHM_SIZE 108,2832
#define SND_CTL_IOCTL_READ	110,2883
#define SND_CTL_IOCTL_CLOSE	111,2944
#define SND_CTL_IOCTL_POLL_DESCRIPTOR	112,2989
#define SND_CTL_IOCTL_ASYNC	113,3043
	int result;116,3106
	int cmd;117,3119
			int sig;120,3149
			pid_t pid;121,3161
		} async;122,3175
		int device;123,3186
		int subscribe_events;124,3200
		snd_ctl_card_info_t card_info;125,3224
		snd_ctl_elem_list_t element_list;126,3257
		snd_ctl_elem_info_t element_info;127,3293
		snd_ctl_elem_value_t element_read;128,3329
		snd_ctl_elem_value_t element_write;129,3366
		snd_ctl_elem_id_t element_lock;130,3404
		snd_ctl_elem_id_t element_unlock;131,3438
		snd_hwdep_info_t hwdep_info;132,3474
		snd_pcm_info_t pcm_info;133,3505
		int pcm_prefer_subdevice;134,3532
		snd_rawmidi_info_t rawmidi_info;135,3560
		int rawmidi_prefer_subdevice;136,3595
		unsigned int power_state;137,3627
		snd_ctl_event_t read;138,3655
	} u;139,3679
	char data[data140,3685
} snd_ctl_shm_ctrl_t;141,3700
#define CTL_SHM_SIZE 143,3723
#define CTL_SHM_DATA_MAXLEN 144,3750
	unsigned char dev_type;147,3848
	unsigned char transport_type;148,3873
	unsigned char stream;149,3904
	unsigned char mode;150,3927
	unsigned char namelen;151,3948
	char name[name152,3972
} snd_client_open_request_t;153,3987
	long result;156,4034
	int cookie;157,4048
} snd_client_open_answer_t;158,4061

alsa-lib-1.0.29/include/seq.h,5816
#define __ALSA_SEQ_H30,1094
#define SND_SEQ_DLSYM_VERSION	44,1331
typedef struct _snd_seq snd_seq_t;47,1402
#define SND_SEQ_OPEN_OUTPUT	52,1480
#define SND_SEQ_OPEN_INPUT	53,1542
#define SND_SEQ_OPEN_DUPLEX	54,1601
#define SND_SEQ_NONBLOCK	59,1757
typedef enum _snd_seq_type 62,1865
	SND_SEQ_TYPE_HW,63,1894
	SND_SEQ_TYPE_SHM,64,1930
	SND_SEQ_TYPE_INET	65,1978
} snd_seq_type_t;66,2020
#define SND_SEQ_ADDRESS_UNKNOWN	69,2072
#define SND_SEQ_ADDRESS_SUBSCRIBERS	70,2132
#define SND_SEQ_ADDRESS_BROADCAST	71,2215
#define SND_SEQ_CLIENT_SYSTEM	74,2338
typedef struct _snd_seq_system_info snd_seq_system_info_t;95,3388
#define snd_seq_system_info_alloca(99,3549
typedef struct _snd_seq_client_info snd_seq_client_info_t;125,4526
typedef enum snd_seq_client_type 128,4606
	SND_SEQ_USER_CLIENT 129,4641
	SND_SEQ_KERNEL_CLIENT 130,4691
} snd_seq_client_type_t;131,4742
#define snd_seq_client_info_alloca(135,4893
typedef struct _snd_seq_client_pool snd_seq_client_pool_t;170,6958
#define snd_seq_client_pool_alloca(174,7119
typedef struct _snd_seq_port_info snd_seq_port_info_t;205,8448
#define SND_SEQ_PORT_SYSTEM_TIMER	208,8530
#define SND_SEQ_PORT_SYSTEM_ANNOUNCE	209,8592
#define SND_SEQ_PORT_CAP_READ	212,8696
#define SND_SEQ_PORT_CAP_WRITE	213,8766
#define SND_SEQ_PORT_CAP_SYNC_READ	215,8836
#define SND_SEQ_PORT_CAP_SYNC_WRITE	216,8911
#define SND_SEQ_PORT_CAP_DUPLEX	218,8989
#define SND_SEQ_PORT_CAP_SUBS_READ	220,9062
#define SND_SEQ_PORT_CAP_SUBS_WRITE	221,9136
#define SND_SEQ_PORT_CAP_NO_EXPORT	222,9212
#define SND_SEQ_PORT_TYPE_SPECIFIC	226,9370
#define SND_SEQ_PORT_TYPE_MIDI_GENERIC	228,9456
#define SND_SEQ_PORT_TYPE_MIDI_GM	230,9570
#define SND_SEQ_PORT_TYPE_MIDI_GS	232,9671
#define SND_SEQ_PORT_TYPE_MIDI_XG	234,9777
#define SND_SEQ_PORT_TYPE_MIDI_MT32	236,9872
#define SND_SEQ_PORT_TYPE_MIDI_GM2	238,9985
#define SND_SEQ_PORT_TYPE_SYNTH	241,10125
#define SND_SEQ_PORT_TYPE_DIRECT_SAMPLE 244,10275
#define SND_SEQ_PORT_TYPE_SAMPLE	247,10451
#define SND_SEQ_PORT_TYPE_HARDWARE	249,10537
#define SND_SEQ_PORT_TYPE_SOFTWARE	251,10625
#define SND_SEQ_PORT_TYPE_SYNTHESIZER	253,10724
#define SND_SEQ_PORT_TYPE_PORT	256,10859
#define SND_SEQ_PORT_TYPE_APPLICATION	258,10974
#define snd_seq_port_info_alloca(263,11119
typedef struct _snd_seq_port_subscribe snd_seq_port_subscribe_t;317,14184
#define snd_seq_port_subscribe_alloca(321,14357
typedef struct _snd_seq_query_subscribe snd_seq_query_subscribe_t;349,16006
	SND_SEQ_QUERY_SUBS_READ,353,16123
	SND_SEQ_QUERY_SUBS_WRITE	354,16182
} snd_seq_query_subs_type_t;355,16242
#define snd_seq_query_subscribe_alloca(359,16381
typedef struct _snd_seq_queue_info snd_seq_queue_info_t;396,18354
typedef struct _snd_seq_queue_status snd_seq_queue_status_t;398,18441
typedef struct _snd_seq_queue_tempo snd_seq_queue_tempo_t;400,18531
typedef struct _snd_seq_queue_timer snd_seq_queue_timer_t;402,18631
#define SND_SEQ_QUEUE_DIRECT	405,18716
#define snd_seq_queue_info_alloca(409,18874
#define snd_seq_queue_status_alloca(441,20517
#define snd_seq_queue_tempo_alloca(459,21438
	SND_SEQ_TIMER_ALSA 483,22666
	SND_SEQ_TIMER_MIDI_CLOCK 484,22709
	SND_SEQ_TIMER_MIDI_TICK 485,22771
} snd_seq_queue_timer_type_t;486,22834
#define snd_seq_queue_timer_alloca(490,22966
typedef struct _snd_seq_remove_events snd_seq_remove_events_t;533,24994
#define SND_SEQ_REMOVE_INPUT	536,25090
#define SND_SEQ_REMOVE_OUTPUT	537,25154
#define SND_SEQ_REMOVE_DEST	538,25220
#define SND_SEQ_REMOVE_DEST_CHANNEL	539,25302
#define SND_SEQ_REMOVE_TIME_BEFORE	540,25373
#define SND_SEQ_REMOVE_TIME_AFTER	541,25447
#define SND_SEQ_REMOVE_TIME_TICK	542,25522
#define SND_SEQ_REMOVE_EVENT_TYPE	543,25587
#define SND_SEQ_REMOVE_IGNORE_OFF 544,25659
#define SND_SEQ_REMOVE_TAG_MATCH 545,25733
#define snd_seq_remove_events_alloca(549,25922
	SND_SEQ_EVFLG_RESULT,599,27971
	SND_SEQ_EVFLG_NOTE,600,27994
	SND_SEQ_EVFLG_CONTROL,601,28015
	SND_SEQ_EVFLG_QUEUE,602,28039
	SND_SEQ_EVFLG_SYSTEM,603,28061
	SND_SEQ_EVFLG_MESSAGE,604,28084
	SND_SEQ_EVFLG_CONNECTION,605,28108
	SND_SEQ_EVFLG_SAMPLE,606,28135
	SND_SEQ_EVFLG_USERS,607,28158
	SND_SEQ_EVFLG_INSTR,608,28180
	SND_SEQ_EVFLG_QUOTE,609,28202
	SND_SEQ_EVFLG_NONE,610,28224
	SND_SEQ_EVFLG_RAW,611,28245
	SND_SEQ_EVFLG_FIXED,612,28265
	SND_SEQ_EVFLG_VARIABLE,613,28287
	SND_SEQ_EVFLG_VARUSR614,28312
	SND_SEQ_EVFLG_NOTE_ONEARG,618,28345
	SND_SEQ_EVFLG_NOTE_TWOARG619,28373
	SND_SEQ_EVFLG_QUEUE_NOARG,623,28411
	SND_SEQ_EVFLG_QUEUE_TICK,624,28439
	SND_SEQ_EVFLG_QUEUE_TIME,625,28466
	SND_SEQ_EVFLG_QUEUE_VALUE626,28493
#define _SND_SEQ_TYPE(636,28662
#define _SND_SEQ_TYPE_OPT(637,28724
#define snd_seq_type_check(640,28821
#define snd_seq_ev_is_result_type(643,28947
#define snd_seq_ev_is_note_type(646,29070
#define snd_seq_ev_is_control_type(649,29192
#define snd_seq_ev_is_channel_type(652,29329
#define snd_seq_ev_is_queue_type(656,29529
#define snd_seq_ev_is_message_type(659,29661
#define snd_seq_ev_is_subscribe_type(662,29797
#define snd_seq_ev_is_sample_type(665,29931
#define snd_seq_ev_is_user_type(668,30064
#define snd_seq_ev_is_instr_type(671,30196
#define snd_seq_ev_is_fixed_type(674,30325
#define snd_seq_ev_is_variable_type(677,30457
#define snd_seq_ev_is_varusr_type(680,30592
#define snd_seq_ev_is_reserved(683,30723
#define snd_seq_ev_is_prior(690,30857
#define snd_seq_ev_length_type(694,30990
#define snd_seq_ev_is_fixed(697,31097
#define snd_seq_ev_is_variable(700,31221
#define snd_seq_ev_is_varusr(703,31358
#define snd_seq_ev_timestamp_type(707,31478
#define snd_seq_ev_is_tick(710,31588
#define snd_seq_ev_is_real(713,31710
#define snd_seq_ev_timemode_type(717,31826
#define snd_seq_ev_is_abstime(720,31939
#define snd_seq_ev_is_reltime(723,32066
#define snd_seq_ev_is_direct(727,32192

alsa-lib-1.0.29/include/pcm_external.h,158
#define __ALSA_PCM_EXTERNAL_H27,955
#define SND_PCM_PLUGIN_ENTRY(43,1169
#define SND_PCM_PLUGIN_SYMBOL(48,1292
#define SND_PCM_PLUGIN_DEFINE_FUNC(53,1434

alsa-lib-1.0.29/include/error.h,393
#define __ALSA_ERROR_H29,1095
#define SND_ERROR_BEGIN	41,1251
#define SND_ERROR_INCOMPATIBLE_VERSION	42,1332
#define SND_ERROR_ALISP_NIL	43,1445
typedef void (*snd_lib_error_handler_t)snd_lib_error_handler_t59,2004
#define SNDERR(64,2349
#define SYSERR(65,2470
#define SNDERR(67,2624
#define SYSERR(68,2744
typedef void (*snd_local_error_handler_t)snd_local_error_handler_t78,2980

alsa-lib-1.0.29/include/iatomic.h,1195
#define __ALSA_IATOMIC_H2,25
#define mb(5,67
#define rmb(6,142
#define wmb(7,161
#define IATOMIC_DEFINED	8,214
#define mb(12,268
#define rmb(13,316
#define wmb(14,364
#define IATOMIC_DEFINED	15,412
#define mb(41,1472
#define rmb(42,1526
#define wmb(43,1545
#define IATOMIC_DEFINED	45,1565
#define mb(51,1634
#define rmb(54,1690
#define wmb(57,1747
#define IATOMIC_DEFINED	60,1805
#define mb(82,2627
#define rmb(83,2686
#define wmb(84,2746
#define IATOMIC_DEFINED	86,2808
#define mb(94,2947
#define rmb(95,2981
#define wmb(96,3000
#define IATOMIC_DEFINED	98,3020
#define MAX_SPIN_COUNT 111,3348
#define SPIN_SLEEP_DURATION 121,3672
	unsigned int begin,125,3733
	unsigned int begin, end;125,3733
} snd_atomic_write_t;126,3759
	volatile const snd_atomic_write_t *write;write129,3799
	unsigned int end;130,3842
} snd_atomic_read_t;131,3861
static __inline__ void snd_atomic_write_init(135,3933
static __inline__ void snd_atomic_write_begin(141,4034
static __inline__ void snd_atomic_write_end(147,4129
static __inline__ void snd_atomic_read_init(153,4220
static __inline__ void snd_atomic_read_begin(158,4329
static __inline__ int snd_atomic_read_ok(164,4434

alsa-lib-1.0.29/include/timer.h,3117
#define __ALSA_TIMER_H29,1095
#define SND_TIMER_DLSYM_VERSION	42,1320
#define SND_TIMER_QUERY_DLSYM_VERSION	44,1420
typedef struct _snd_timer_id snd_timer_id_t;47,1520
typedef struct _snd_timer_ginfo snd_timer_ginfo_t;49,1600
typedef struct _snd_timer_gparams snd_timer_gparams_t;51,1688
typedef struct _snd_timer_gstatus snd_timer_gstatus_t;53,1780
typedef struct _snd_timer_info snd_timer_info_t;55,1863
typedef struct _snd_timer_params snd_timer_params_t;57,1942
typedef struct _snd_timer_status snd_timer_status_t;59,2025
typedef enum _snd_timer_class 61,2104
	SND_TIMER_CLASS_NONE 62,2136
	SND_TIMER_CLASS_SLAVE 63,2180
	SND_TIMER_CLASS_GLOBAL,64,2228
	SND_TIMER_CLASS_CARD,65,2275
	SND_TIMER_CLASS_PCM,66,2318
	SND_TIMER_CLASS_LAST 67,2359
	SND_TIMER_CLASS_LAST = SND_TIMER_CLASS_PCM	67,2359
} snd_timer_class_t;68,2422
typedef enum _snd_timer_slave_class 71,2469
	SND_TIMER_SCLASS_NONE 72,2507
	SND_TIMER_SCLASS_APPLICATION,73,2549
	SND_TIMER_SCLASS_SEQUENCER,74,2606
	SND_TIMER_SCLASS_OSS_SEQUENCER,75,2660
	SND_TIMER_SCLASS_LAST 76,2722
	SND_TIMER_SCLASS_LAST = SND_TIMER_SCLASS_OSS_SEQUENCER	76,2722
} snd_timer_slave_class_t;77,2803
typedef enum _snd_timer_event 80,2870
	SND_TIMER_EVENT_RESOLUTION 81,2902
	SND_TIMER_EVENT_TICK,82,2964
	SND_TIMER_EVENT_START,83,3006
	SND_TIMER_EVENT_STOP,84,3060
	SND_TIMER_EVENT_CONTINUE,85,3098
	SND_TIMER_EVENT_PAUSE,86,3154
	SND_TIMER_EVENT_EARLY,87,3193
	SND_TIMER_EVENT_SUSPEND,88,3232
	SND_TIMER_EVENT_RESUME,89,3272
	SND_TIMER_EVENT_MSTART 91,3380
	SND_TIMER_EVENT_MSTART = SND_TIMER_EVENT_START 91,3380
	SND_TIMER_EVENT_MSTOP 92,3434
	SND_TIMER_EVENT_MSTOP = SND_TIMER_EVENT_STOP 92,3434
	SND_TIMER_EVENT_MCONTINUE 93,3486
	SND_TIMER_EVENT_MCONTINUE = SND_TIMER_EVENT_CONTINUE 93,3486
	SND_TIMER_EVENT_MPAUSE 94,3546
	SND_TIMER_EVENT_MPAUSE = SND_TIMER_EVENT_PAUSE 94,3546
	SND_TIMER_EVENT_MSUSPEND 95,3600
	SND_TIMER_EVENT_MSUSPEND = SND_TIMER_EVENT_SUSPEND 95,3600
	SND_TIMER_EVENT_MRESUME 96,3658
	SND_TIMER_EVENT_MRESUME = SND_TIMER_EVENT_RESUME 96,3658
} snd_timer_event_t;97,3714
typedef struct _snd_timer_read 100,3764
	unsigned int resolution;101,3797
        unsigned int ticks;102,3862
} snd_timer_read_t;103,3923
typedef struct _snd_timer_tread 106,3987
	snd_timer_event_t event;107,4021
	snd_htimestamp_t tstamp;108,4067
	unsigned int val;109,4126
} snd_timer_tread_t;110,4166
#define SND_TIMER_GLOBAL_SYSTEM 113,4217
#define SND_TIMER_GLOBAL_RTC 115,4277
#define SND_TIMER_GLOBAL_HPET	117,4336
#define SND_TIMER_GLOBAL_HRTIMER 119,4398
#define SND_TIMER_OPEN_NONBLOCK	122,4487
#define SND_TIMER_OPEN_TREAD	124,4588
typedef enum _snd_timer_type 127,4651
	SND_TIMER_TYPE_HW 129,4709
	SND_TIMER_TYPE_SHM,131,4790
	SND_TIMER_TYPE_INET133,4859
} snd_timer_type_t;134,4880
typedef struct _snd_timer_query snd_timer_query_t;137,4927
typedef struct _snd_timer snd_timer_t;139,4998
#define snd_timer_id_alloca(169,6804
#define snd_timer_ginfo_alloca(187,7689
#define snd_timer_info_alloca(205,8687
#define snd_timer_params_alloca(218,9320
#define snd_timer_status_alloca(238,10566

alsa-lib-1.0.29/include/mixer_abst.h,1736
#define __ALSA_MIXER_ABST_H27,1045
#define	SM_PLAY	39,1230
#define SM_CAPT	40,1250
#define SM_CAP_GVOLUME	42,1271
#define SM_CAP_GSWITCH	43,1302
#define SM_CAP_PVOLUME	44,1333
#define SM_CAP_PVOLUME_JOIN	45,1364
#define SM_CAP_PSWITCH	46,1399
#define SM_CAP_PSWITCH_JOIN	47,1431
#define SM_CAP_CVOLUME	48,1467
#define SM_CAP_CVOLUME_JOIN	49,1499
#define SM_CAP_CSWITCH	50,1535
#define SM_CAP_CSWITCH_JOIN	51,1567
#define SM_CAP_CSWITCH_EXCL	52,1603
#define SM_CAP_PENUM	53,1639
#define SM_CAP_CENUM	54,1669
#define SM_OPS_IS_ACTIVE	57,1747
#define SM_OPS_IS_MONO	58,1774
#define SM_OPS_IS_CHANNEL	59,1800
#define SM_OPS_IS_ENUMERATED	60,1828
#define SM_OPS_IS_ENUMCNT	61,1859
#define sm_selem(63,1888
#define sm_selem_ops(64,1945
typedef struct _sm_selem 66,2012
	snd_mixer_selem_id_t *id;id67,2039
	struct sm_elem_ops *ops;ops68,2066
	unsigned int caps;69,2092
	unsigned int capture_group;70,2112
} sm_selem_t;71,2141
typedef struct _sm_class_basic 73,2156
	char *device;device74,2189
	snd_ctl_t *ctl;ctl75,2204
	snd_hctl_t *hctl;hctl76,2221
	snd_ctl_card_info_t *info;info77,2240
} sm_class_basic_t;78,2268
struct sm_elem_ops 80,2289
	int (*is)is81,2311
	int (*get_range)get_range82,2374
	int (*set_range)set_range83,2448
	int (*get_dB_range)get_dB_range84,2520
	int (*ask_vol_dB)ask_vol_dB85,2597
	int (*ask_dB_vol)ask_dB_vol86,2677
	int (*get_volume)get_volume87,2767
	int (*get_dB)get_dB88,2871
	int (*set_volume)set_volume89,2971
	int (*set_dB)set_dB90,3074
	int (*get_switch)get_switch91,3183
	int (*set_switch)set_switch92,3286
	int (*enum_item_name)enum_item_name93,3388
	int (*get_enum_item)get_enum_item94,3481
	int (*set_enum_item)set_enum_item95,3587

alsa-lib-1.0.29/include/asoundef.h,10327
#define __ALSA_ASOUNDEF_H29,1096
#define IEC958_AES0_PROFESSIONAL	41,1289
#define IEC958_AES0_NONAUDIO	42,1368
#define IEC958_AES0_PRO_EMPHASIS	43,1438
#define IEC958_AES0_PRO_EMPHASIS_NOTID	44,1502
#define IEC958_AES0_PRO_EMPHASIS_NONE	45,1579
#define IEC958_AES0_PRO_EMPHASIS_5015	46,1644
#define IEC958_AES0_PRO_EMPHASIS_CCITT	47,1714
#define IEC958_AES0_PRO_FREQ_UNLOCKED	48,1788
#define IEC958_AES0_PRO_FS	49,1891
#define IEC958_AES0_PRO_FS_NOTID	50,1958
#define IEC958_AES0_PRO_FS_44100	51,2023
#define IEC958_AES0_PRO_FS_48000	52,2079
#define IEC958_AES0_PRO_FS_32000	53,2133
#define IEC958_AES0_CON_NOT_COPYRIGHT	54,2187
#define IEC958_AES0_CON_EMPHASIS	55,2273
#define IEC958_AES0_CON_EMPHASIS_NONE	56,2337
#define IEC958_AES0_CON_EMPHASIS_5015	57,2402
#define IEC958_AES0_CON_MODE	58,2472
#define IEC958_AES1_PRO_MODE	59,2529
#define IEC958_AES1_PRO_MODE_NOTID	60,2595
#define IEC958_AES1_PRO_MODE_STEREOPHONIC 61,2664
#define IEC958_AES1_PRO_MODE_SINGLE	62,2749
#define IEC958_AES1_PRO_MODE_TWO	63,2815
#define IEC958_AES1_PRO_MODE_PRIMARY	64,2876
#define IEC958_AES1_PRO_MODE_BYTE3	65,2947
#define IEC958_AES1_PRO_USERBITS	66,3015
#define IEC958_AES1_PRO_USERBITS_NOTID	67,3081
#define IEC958_AES1_PRO_USERBITS_192	68,3159
#define IEC958_AES1_PRO_USERBITS_UDEF	69,3229
#define IEC958_AES1_CON_CATEGORY	70,3308
#define IEC958_AES1_CON_GENERAL	71,3372
#define IEC958_AES1_CON_LASEROPT_MASK	72,3435
#define IEC958_AES1_CON_LASEROPT_ID	73,3505
#define IEC958_AES1_CON_IEC908_CD	74,3571
#define IEC958_AES1_CON_NON_IEC908_CD	75,3676
#define IEC958_AES1_CON_MINI_DISC	76,3789
#define IEC958_AES1_CON_DVD	77,3883
#define IEC958_AES1_CON_LASTEROPT_OTHER	78,3966
#define IEC958_AES1_CON_DIGDIGCONV_MASK 79,4077
#define IEC958_AES1_CON_DIGDIGCONV_ID	80,4163
#define IEC958_AES1_CON_PCM_CODER	81,4245
#define IEC958_AES1_CON_MIXER	82,4334
#define IEC958_AES1_CON_RATE_CONVERTER	83,4431
#define IEC958_AES1_CON_SAMPLER	84,4530
#define IEC958_AES1_CON_DSP	85,4620
#define IEC958_AES1_CON_DIGDIGCONV_OTHER 86,4718
#define IEC958_AES1_CON_MAGNETIC_MASK	87,4836
#define IEC958_AES1_CON_MAGNETIC_ID	88,4908
#define IEC958_AES1_CON_DAT	89,4976
#define IEC958_AES1_CON_VCR	90,5067
#define IEC958_AES1_CON_DCC	91,5154
#define IEC958_AES1_CON_MAGNETIC_DISC	92,5251
#define IEC958_AES1_CON_MAGNETIC_OTHER	93,5367
#define IEC958_AES1_CON_BROADCAST1_MASK 94,5471
#define IEC958_AES1_CON_BROADCAST1_ID	95,5539
#define IEC958_AES1_CON_DAB_JAPAN	96,5603
#define IEC958_AES1_CON_DAB_EUROPE	97,5714
#define IEC958_AES1_CON_DAB_USA	98,5827
#define IEC958_AES1_CON_SOFTWARE	99,5935
#define IEC958_AES1_CON_IEC62105	100,6042
#define IEC958_AES1_CON_BROADCAST1_OTHER 101,6157
#define IEC958_AES1_CON_BROADCAST2_MASK 102,6267
#define IEC958_AES1_CON_BROADCAST2_ID	103,6347
#define IEC958_AES1_CON_MUSICAL_MASK	104,6423
#define IEC958_AES1_CON_MUSICAL_ID	105,6493
#define IEC958_AES1_CON_SYNTHESIZER	106,6559
#define IEC958_AES1_CON_MICROPHONE	107,6649
#define IEC958_AES1_CON_MUSICAL_OTHER	108,6737
#define IEC958_AES1_CON_ADC_MASK	109,6838
#define IEC958_AES1_CON_ADC_ID	110,6893
#define IEC958_AES1_CON_ADC	111,6945
#define IEC958_AES1_CON_ADC_OTHER	112,7046
#define IEC958_AES1_CON_ADC_COPYRIGHT_MASK 113,7168
#define IEC958_AES1_CON_ADC_COPYRIGHT_ID 114,7243
#define IEC958_AES1_CON_ADC_COPYRIGHT	115,7314
#define IEC958_AES1_CON_ADC_COPYRIGHT_OTHER 116,7431
#define IEC958_AES1_CON_SOLIDMEM_MASK	117,7568
#define IEC958_AES1_CON_SOLIDMEM_ID	118,7652
#define IEC958_AES1_CON_SOLIDMEM_DIGITAL_RECORDER_PLAYER 119,7732
#define IEC958_AES1_CON_SOLIDMEM_OTHER	120,7891
#define IEC958_AES1_CON_EXPERIMENTAL	121,8012
#define IEC958_AES1_CON_ORIGINAL	122,8084
#define IEC958_AES2_PRO_SBITS	123,8171
#define IEC958_AES2_PRO_SBITS_20	124,8236
#define IEC958_AES2_PRO_SBITS_24	125,8306
#define IEC958_AES2_PRO_SBITS_UDEF	126,8374
#define IEC958_AES2_PRO_WORDLEN	127,8449
#define IEC958_AES2_PRO_WORDLEN_NOTID	128,8523
#define IEC958_AES2_PRO_WORDLEN_22_18	129,8609
#define IEC958_AES2_PRO_WORDLEN_23_19	130,8679
#define IEC958_AES2_PRO_WORDLEN_24_20	131,8749
#define IEC958_AES2_PRO_WORDLEN_20_16	132,8819
#define IEC958_AES2_CON_SOURCE	133,8889
#define IEC958_AES2_CON_SOURCE_UNSPEC	134,8958
#define IEC958_AES2_CON_CHANNEL	135,9037
#define IEC958_AES2_CON_CHANNEL_UNSPEC	136,9108
#define IEC958_AES3_CON_FS	137,9189
#define IEC958_AES3_CON_FS_44100	138,9257
#define IEC958_AES3_CON_FS_NOTID	139,9313
#define IEC958_AES3_CON_FS_48000	140,9392
#define IEC958_AES3_CON_FS_32000	141,9446
#define IEC958_AES3_CON_FS_22050	142,9500
#define IEC958_AES3_CON_FS_24000	143,9557
#define IEC958_AES3_CON_FS_88200	144,9611
#define IEC958_AES3_CON_FS_768000	145,9667
#define IEC958_AES3_CON_FS_96000	146,9723
#define IEC958_AES3_CON_FS_176400	147,9778
#define IEC958_AES3_CON_FS_192000	148,9837
#define IEC958_AES3_CON_CLOCK	149,9894
#define IEC958_AES3_CON_CLOCK_1000PPM	150,9962
#define IEC958_AES3_CON_CLOCK_50PPM	151,10024
#define IEC958_AES3_CON_CLOCK_VARIABLE	152,10082
#define IEC958_AES4_CON_MAX_WORDLEN_24	153,10151
#define IEC958_AES4_CON_WORDLEN	154,10228
#define IEC958_AES4_CON_WORDLEN_NOTID	155,10302
#define IEC958_AES4_CON_WORDLEN_20_16	156,10369
#define IEC958_AES4_CON_WORDLEN_22_18	157,10439
#define IEC958_AES4_CON_WORDLEN_23_19	158,10509
#define IEC958_AES4_CON_WORDLEN_24_20	159,10579
#define IEC958_AES4_CON_WORDLEN_21_17	160,10649
#define IEC958_AES4_CON_ORIGFS	161,10719
#define IEC958_AES4_CON_ORIGFS_NOTID	162,10800
#define IEC958_AES4_CON_ORIGFS_192000	163,10892
#define IEC958_AES4_CON_ORIGFS_12000	164,10952
#define IEC958_AES4_CON_ORIGFS_176400	165,11010
#define IEC958_AES4_CON_ORIGFS_96000	166,11072
#define IEC958_AES4_CON_ORIGFS_8000	167,11130
#define IEC958_AES4_CON_ORIGFS_88200	168,11186
#define IEC958_AES4_CON_ORIGFS_16000	169,11246
#define IEC958_AES4_CON_ORIGFS_24000	170,11304
#define IEC958_AES4_CON_ORIGFS_11025	171,11362
#define IEC958_AES4_CON_ORIGFS_22050	172,11425
#define IEC958_AES4_CON_ORIGFS_32000	173,11487
#define IEC958_AES4_CON_ORIGFS_48000	174,11546
#define IEC958_AES4_CON_ORIGFS_44100	175,11605
#define IEC958_AES5_CON_CGMSA	176,11666
#define IEC958_AES5_CON_CGMSA_COPYFREELY 177,11726
#define IEC958_AES5_CON_CGMSA_COPYONCE	178,11823
#define IEC958_AES5_CON_CGMSA_COPYNOMORE 179,11914
#define IEC958_AES5_CON_CGMSA_COPYNEVER	180,11992
#define MIDI_CHANNELS	190,12178
#define MIDI_GM_DRUM_CHANNEL	191,12248
#define MIDI_CMD_NOTE_OFF	199,12402
#define MIDI_CMD_NOTE_ON	200,12451
#define MIDI_CMD_NOTE_PRESSURE	201,12498
#define MIDI_CMD_CONTROL	202,12556
#define MIDI_CMD_PGM_CHANGE	203,12610
#define MIDI_CMD_CHANNEL_PRESSURE	204,12667
#define MIDI_CMD_BENDER	205,12731
#define MIDI_CMD_COMMON_SYSEX	207,12784
#define MIDI_CMD_COMMON_MTC_QUARTER	208,12859
#define MIDI_CMD_COMMON_SONG_POS	209,12926
#define MIDI_CMD_COMMON_SONG_SELECT	210,12986
#define MIDI_CMD_COMMON_TUNE_REQUEST	211,13047
#define MIDI_CMD_COMMON_SYSEX_END	212,13110
#define MIDI_CMD_COMMON_CLOCK	213,13170
#define MIDI_CMD_COMMON_START	214,13220
#define MIDI_CMD_COMMON_CONTINUE	215,13270
#define MIDI_CMD_COMMON_STOP	216,13325
#define MIDI_CMD_COMMON_SENSING	217,13373
#define MIDI_CMD_COMMON_RESET	218,13434
#define MIDI_CTL_MSB_BANK	228,13586
#define MIDI_CTL_MSB_MODWHEEL 229,13641
#define MIDI_CTL_MSB_BREATH 230,13704
#define MIDI_CTL_MSB_FOOT 231,13763
#define MIDI_CTL_MSB_PORTAMENTO_TIME 232,13820
#define MIDI_CTL_MSB_DATA_ENTRY	233,13887
#define MIDI_CTL_MSB_MAIN_VOLUME 234,13944
#define MIDI_CTL_MSB_BALANCE 235,14008
#define MIDI_CTL_MSB_PAN 236,14068
#define MIDI_CTL_MSB_EXPRESSION 237,14127
#define MIDI_CTL_MSB_EFFECT1	238,14190
#define MIDI_CTL_MSB_EFFECT2	239,14241
#define MIDI_CTL_MSB_GENERAL_PURPOSE1 240,14292
#define MIDI_CTL_MSB_GENERAL_PURPOSE2 241,14362
#define MIDI_CTL_MSB_GENERAL_PURPOSE3 242,14432
#define MIDI_CTL_MSB_GENERAL_PURPOSE4 243,14502
#define MIDI_CTL_LSB_BANK	244,14572
#define MIDI_CTL_LSB_MODWHEEL 245,14627
#define MIDI_CTL_LSB_BREATH 246,14689
#define MIDI_CTL_LSB_FOOT 247,14748
#define MIDI_CTL_LSB_PORTAMENTO_TIME 248,14805
#define MIDI_CTL_LSB_DATA_ENTRY	249,14872
#define MIDI_CTL_LSB_MAIN_VOLUME 250,14929
#define MIDI_CTL_LSB_BALANCE 251,14993
#define MIDI_CTL_LSB_PAN 252,15053
#define MIDI_CTL_LSB_EXPRESSION 253,15112
#define MIDI_CTL_LSB_EFFECT1	254,15175
#define MIDI_CTL_LSB_EFFECT2	255,15226
#define MIDI_CTL_LSB_GENERAL_PURPOSE1 256,15277
#define MIDI_CTL_LSB_GENERAL_PURPOSE2 257,15347
#define MIDI_CTL_LSB_GENERAL_PURPOSE3 258,15417
#define MIDI_CTL_LSB_GENERAL_PURPOSE4 259,15487
#define MIDI_CTL_SUSTAIN 260,15557
#define MIDI_CTL_PORTAMENTO 261,15623
#define MIDI_CTL_SOSTENUTO 262,15686
#define MIDI_CTL_SUSTENUTO 263,15748
#define MIDI_CTL_SOFT_PEDAL 264,15840
#define MIDI_CTL_LEGATO_FOOTSWITCH	265,15903
#define MIDI_CTL_HOLD2 266,15970
#define MIDI_CTL_SC1_SOUND_VARIATION	267,16028
#define MIDI_CTL_SC2_TIMBRE	268,16098
#define MIDI_CTL_SC3_RELEASE_TIME	269,16151
#define MIDI_CTL_SC4_ATTACK_TIME	270,16215
#define MIDI_CTL_SC5_BRIGHTNESS	271,16277
#define MIDI_CTL_SC6	272,16338
#define MIDI_CTL_SC7	273,16378
#define MIDI_CTL_SC8	274,16418
#define MIDI_CTL_SC9	275,16458
#define MIDI_CTL_SC10	276,16498
#define MIDI_CTL_GENERAL_PURPOSE5 277,16540
#define MIDI_CTL_GENERAL_PURPOSE6 278,16610
#define MIDI_CTL_GENERAL_PURPOSE7 279,16680
#define MIDI_CTL_GENERAL_PURPOSE8 280,16750
#define MIDI_CTL_PORTAMENTO_CONTROL	281,16820
#define MIDI_CTL_E1_REVERB_DEPTH	282,16888
#define MIDI_CTL_E2_TREMOLO_DEPTH	283,16950
#define MIDI_CTL_E3_CHORUS_DEPTH	284,17014
#define MIDI_CTL_E4_DETUNE_DEPTH	285,17076
#define MIDI_CTL_E5_PHASER_DEPTH	286,17138
#define MIDI_CTL_DATA_INCREMENT 287,17200
#define MIDI_CTL_DATA_DECREMENT 288,17267
#define MIDI_CTL_NONREG_PARM_NUM_LSB 289,17334
#define MIDI_CTL_NONREG_PARM_NUM_MSB 290,17418
#define MIDI_CTL_REGIST_PARM_NUM_LSB 291,17502
#define MIDI_CTL_REGIST_PARM_NUM_MSB	292,17582
#define MIDI_CTL_ALL_SOUNDS_OFF	293,17660
#define MIDI_CTL_RESET_CONTROLLERS	294,17721
#define MIDI_CTL_LOCAL_CONTROL_SWITCH	295,17787
#define MIDI_CTL_ALL_NOTES_OFF	296,17859
#define MIDI_CTL_OMNI_OFF	297,17918
#define MIDI_CTL_OMNI_ON	298,17967
#define MIDI_CTL_MONO1	299,18014
#define MIDI_CTL_MONO2	300,18058

alsa-lib-1.0.29/modules/mixer/simple/sbase.h,1876
#define MAX_CHANNEL	26,936
#define SID_MASTER	28,959
#define SID_HEADPHONE	29,980
#define SID_FRONT	30,1004
#define SID_PCM	31,1024
#define SID_CD	32,1043
struct melem_sids 34,1062
	unsigned short sid;35,1082
	const char *sname;sname36,1103
	unsigned short sindex;37,1123
	unsigned short weight;38,1147
	unsigned int chanmap[chanmap39,1171
	struct sm_elem_ops *sops;sops40,1197
#define PURPOSE_VOLUME	43,1228
#define PURPOSE_SWITCH	44,1254
#define PURPOSE_ENUMLIST	45,1280
struct helem_selector 47,1308
	snd_ctl_elem_iface_t iface;48,1332
	const char *name;name49,1361
	unsigned short index;50,1380
	unsigned short sid;51,1403
	unsigned short purpose;52,1424
	unsigned short caps;53,1449
struct helem_base 56,1475
	struct list_head list;57,1495
	snd_hctl_elem_t *helem;helem58,1519
	unsigned short purpose;59,1544
	unsigned int caps;60,1569
	unsigned int inactive:inactive61,1589
	long min,62,1616
	long min, max;62,1616
	unsigned int count;63,1632
struct selem_base 66,1657
	sm_selem_t selem;67,1677
	struct list_head helems;68,1696
	unsigned short sid;69,1722
		unsigned int chanmap;71,1753
		unsigned int forced_range:forced_range72,1777
		long min,73,1809
		long min, max;73,1809
		long vol[vol74,1826
	} dir[dir75,1851
struct bclass_selector 78,1866
	struct list_head list;79,1891
	struct helem_selector *selectors;selectors80,1915
	unsigned int count;81,1950
struct bclass_sid 84,1975
	struct list_head list;85,1995
	struct melem_sids *sids;sids86,2019
	unsigned int count;87,2045
typedef struct bclass_base_ops 90,2070
	int (*event)event91,2103
	int (*selreg)selreg93,2219
	int (*sidreg)sidreg96,2331
} bclass_base_ops_t;99,2434
struct bclass_private 101,2456
	struct list_head selectors;102,2480
	struct list_head sids;103,2509
	void *dl_sbase;dl_sbase104,2533
	bclass_base_ops_t ops;105,2550

alsa-lib-1.0.29/modules/mixer/simple/sbasedl.c,64
#define SO_PATH 36,1156
int mixer_simple_basic_dlopen(38,1199

alsa-lib-1.0.29/modules/mixer/simple/python.c,2736
struct python_priv 28,1000
	int py_initialized;29,1021
	PyObject *py_event_func;py_event_func30,1042
	PyObject *py_mdict;py_mdict31,1068
	PyObject *py_mixer;py_mixer32,1089
#define SCRIPT 35,1114
struct pymelem 37,1171
	sm_selem_t selem;39,1203
	PyObject *py_mixer;py_mixer40,1222
	snd_mixer_elem_t *melem;melem41,1243
struct pymixer 44,1273
	snd_mixer_t *mixer;mixer47,1332
	PyObject *mdict;mdict48,1353
	int hctl_count;49,1371
	void **hctl;hctl50,1388
	int helem_count;51,1402
	void **helem;helem52,1420
	int melem_count;53,1435
	void **melem;melem54,1453
static PyInterpreterState *main_interpreter;main_interpreter57,1472
static void *get_C_ptr(get_C_ptr59,1518
static struct pymelem *melem_to_pymelem(melem_to_pymelem75,1896
static int pcall(80,2069
static int is_ops(127,3076
static int get_x_range_ops(155,3838
static int get_range_ops(187,4780
static int set_range_ops(193,4951
static int get_x_ops(206,5350
static int get_volume_ops(238,6180
static int get_switch_ops(244,6362
static int ask_vol_dB_ops(254,6620
static int ask_dB_vol_ops(262,6787
static int get_dB_ops(297,7653
static int get_dB_range_ops(305,7888
static int set_volume_ops(311,8067
static int set_switch_ops(324,8505
static int set_dB_ops(337,8942
static int enum_item_name_ops(352,9454
static int get_enum_item_ops(385,10272
static int set_enum_item_ops(411,10957
static struct sm_elem_ops simple_python_ops 424,11380
static void selem_free(442,12047
pymelem_cap(453,12256
pymelem_get_caps(459,12381
pymelem_get_name(465,12520
pymelem_get_index(471,12691
pymelem_set_caps(477,12852
pymelem_ignore(488,13139
pymelem_ignore1(494,13269
pymelem_error(500,13400
pymelem_attach(506,13542
pymelem_detach(526,14040
pymelem_event_info(546,14538
pymelem_event_value(554,14731
pymelem_init(562,14919
pymelem_dealloc(588,15625
static PyGetSetDef pymelem_getseters[pymelem_getseters594,15732
static PyMethodDef pymelem_methods[pymelem_methods617,17023
static PyTypeObject pymelem_type 636,17807
pymixer_attach_hctl(652,18432
pymixer_register(683,19256
pymixer_melement_new(698,19598
pymixer_melement_add(737,20756
pymixer_init(755,21177
pymixer_free(773,21633
pymixer_dealloc(800,22287
static PyGetSetDef pymixer_getseters[pymixer_getseters806,22389
static PyMethodDef pymixer_methods[pymixer_methods810,22464
static PyTypeObject pymixer_type 818,22812
static PyMethodDef python_methods[python_methods833,23416
static PyObject *new_helem(new_helem837,23483
static PyObject *find_helem(find_helem885,24789
static PyObject *find_melem(find_melem897,25098
int alsa_mixer_simple_event(909,25408
static void alsa_mixer_simple_free(954,26561
int alsa_mixer_simple_finit(969,26895

alsa-lib-1.0.29/modules/mixer/simple/sbase.c,1045
static unsigned int chanmap_to_channels(43,1187
static long to_user(54,1377
static long from_user(63,1674
static void update_ranges(73,2022
static int is_ops(112,2950
static int get_range_ops(154,3849
static int get_dB_range_ops(165,4060
static int set_range_ops(173,4253
static int get_volume_ops(188,4550
static int get_dB_ops(197,4777
static int get_switch_ops(205,4996
static int set_volume_ops(215,5264
static int set_dB_ops(224,5536
static int set_switch_ops(233,5789
static int enum_item_name_ops(243,6080
static int get_enum_item_ops(252,6353
static int set_enum_item_ops(260,6612
static struct sm_elem_ops simple_ac97_ops 268,6869
static int selem_read(288,7338
static int simple_event_remove(294,7434
static void selem_free(301,7595
static int simple_event_add1(316,7978
static int simple_event_add(456,11378
int alsa_mixer_sbasic_event(482,12187
static void sbasic_cpriv_free(515,12921
void alsa_mixer_sbasic_initpriv(533,13384
int alsa_mixer_sbasic_selreg(542,13651
int alsa_mixer_sbasic_sidreg(564,14167

alsa-lib-1.0.29/modules/mixer/simple/ac97.c,239
static struct sm_elem_ops simple_ac97_ops;33,1088
struct melem_sids sids[sids35,1132
#define SELECTORS 46,1294
struct helem_selector selectors[selectors48,1354
int alsa_mixer_simple_event(67,1743
int alsa_mixer_simple_init(74,1997

alsa-lib-1.0.29/modules/mixer/simple/hda.c,238
static struct sm_elem_ops simple_hda_ops;34,1088
struct melem_sids sids[sids36,1131
#define SELECTORS 47,1290
struct helem_selector selectors[selectors49,1350
int alsa_mixer_simple_event(68,1735
int alsa_mixer_simple_init(75,1989

alsa-lib-1.0.29/src/dlmisc.c,772
struct snd_dlsym_link *snd_dlsym_start snd_dlsym_start38,1126
void *snd_dlopen(snd_dlopen51,1565
int snd_dlclose(102,2735
static int snd_dlsym_verify(125,3255
void *snd_dlsym(snd_dlsym162,4291
struct dlobj_cache 198,4948
	const char *lib;lib199,4969
	const char *name;name200,4987
	void *dlobj;dlobj201,5006
	void *func;func202,5020
	unsigned int refcnt;203,5033
	struct list_head list;204,5055
static pthread_mutex_t snd_dlobj_mutex 208,5106
static inline void snd_dlobj_lock(210,5175
static inline void snd_dlobj_unlock(215,5259
static inline void snd_dlobj_lock(220,5352
static inline void snd_dlobj_unlock(221,5395
void *snd_dlobj_cache_get(snd_dlobj_cache_get226,5483
int snd_dlobj_cache_put(288,6792
void snd_dlobj_cache_cleanup(312,7228

alsa-lib-1.0.29/src/timer/timer_symbols.c,294
static const char **snd_timer_open_objects[snd_timer_open_objects25,903
void *snd_timer_open_symbols(snd_timer_open_symbols29,980
static const char **snd_timer_query_open_objects[snd_timer_query_open_objects37,1112
void *snd_timer_query_open_symbols(snd_timer_query_open_symbols41,1201

alsa-lib-1.0.29/src/timer/timer_query.c,1560
static int snd_timer_query_open_conf(37,1189
static int snd_timer_query_open_noupdate(142,3896
int snd_timer_query_open(166,4677
int snd_timer_query_open_lconf(187,5344
int snd_timer_query_close(202,5771
int snd_timer_query_next_device(223,6292
size_t snd_timer_ginfo_sizeof(234,6586
int snd_timer_ginfo_malloc(247,6918
void snd_timer_ginfo_free(263,7298
void snd_timer_ginfo_copy(274,7552
int snd_timer_ginfo_set_tid(286,7881
snd_timer_id_t *snd_timer_ginfo_get_tid(snd_timer_ginfo_get_tid297,8142
unsigned int snd_timer_ginfo_get_flags(307,8359
int snd_timer_ginfo_get_card(317,8577
char *snd_timer_ginfo_get_id(snd_timer_ginfo_get_id327,8783
char *snd_timer_ginfo_get_name(snd_timer_ginfo_get_name337,8975
unsigned long snd_timer_ginfo_get_resolution(347,9195
unsigned long snd_timer_ginfo_get_resolution_min(357,9443
unsigned long snd_timer_ginfo_get_resolution_max(367,9699
unsigned int snd_timer_ginfo_get_clients(377,9937
int INTERNAL(389,10217
int INTERNAL(407,10742
int INTERNAL(425,11281
size_t snd_timer_id_sizeof(440,11768
int snd_timer_id_malloc(453,12085
void snd_timer_id_free(469,12448
void snd_timer_id_copy(480,12686
void snd_timer_id_set_class(491,12924
int snd_timer_id_get_class(502,13145
void snd_timer_id_set_sclass(513,13373
int snd_timer_id_get_sclass(524,13606
void snd_timer_id_set_card(535,13811
int snd_timer_id_get_card(546,14021
void snd_timer_id_set_device(557,14224
int snd_timer_id_get_device(568,14446
void snd_timer_id_set_subdevice(579,14662
int snd_timer_id_get_subdevice(590,14902

alsa-lib-1.0.29/src/timer/timer_hw.c,1277
const char *_snd_module_timer_hw _snd_module_timer_hw32,1060
#define SNDRV_FILE_TIMER	35,1107
#define SNDRV_TIMER_VERSION_MAX	36,1163
#define SNDRV_TIMER_IOCTL_STATUS_OLD	38,1228
	SNDRV_TIMER_IOCTL_START_OLD 41,1314
	SNDRV_TIMER_IOCTL_START_OLD = _IO(41,1314
	SNDRV_TIMER_IOCTL_START_OLD = _IO('T', 0x20)x2041,1314
	SNDRV_TIMER_IOCTL_STOP_OLD 42,1361
	SNDRV_TIMER_IOCTL_STOP_OLD = _IO(42,1361
	SNDRV_TIMER_IOCTL_STOP_OLD = _IO('T', 0x21)x2142,1361
	SNDRV_TIMER_IOCTL_CONTINUE_OLD 43,1407
	SNDRV_TIMER_IOCTL_CONTINUE_OLD = _IO(43,1407
	SNDRV_TIMER_IOCTL_CONTINUE_OLD = _IO('T', 0x22)x2243,1407
	SNDRV_TIMER_IOCTL_PAUSE_OLD 44,1457
	SNDRV_TIMER_IOCTL_PAUSE_OLD = _IO(44,1457
	SNDRV_TIMER_IOCTL_PAUSE_OLD = _IO('T', 0x23)x2344,1457
static int snd_timer_hw_close(47,1508
static int snd_timer_hw_nonblock(58,1690
static int snd_timer_hw_async(73,2003
static int snd_timer_hw_info(105,2609
static int snd_timer_hw_params(117,2850
static int snd_timer_hw_status(129,3103
static int snd_timer_hw_start(146,3476
static int snd_timer_hw_stop(163,3807
static int snd_timer_hw_continue(180,4135
static ssize_t snd_timer_hw_read(197,4475
static const snd_timer_ops_t snd_timer_hw_ops 211,4761
int snd_timer_hw_open(224,5134
int _snd_timer_hw_open(288,6693

alsa-lib-1.0.29/src/timer/timer_query_hw.c,525
const char *_snd_module_timer_query_hw _snd_module_timer_query_hw32,1060
#define SNDRV_FILE_TIMER	35,1113
#define SNDRV_TIMER_VERSION_MAX	36,1169
static int snd_timer_query_hw_close(38,1234
static int snd_timer_query_hw_next_device(48,1406
static int snd_timer_query_hw_info(57,1639
static int snd_timer_query_hw_params(66,1864
static int snd_timer_query_hw_status(75,2101
static const snd_timer_query_ops_t snd_timer_query_hw_ops 84,2338
int snd_timer_query_hw_open(92,2597
int _snd_timer_query_hw_open(127,3400

alsa-lib-1.0.29/src/timer/timer.c,2301
static int snd_timer_open_conf(79,2371
static int snd_timer_open_noupdate(183,5014
int snd_timer_open(207,5761
int snd_timer_open_lconf(228,6400
int snd_timer_close(243,6797
const char *snd_timer_name(snd_timer_name267,7420
snd_timer_type_t snd_timer_type(280,7679
int snd_async_add_timer_handler(296,8104
snd_timer_t *snd_async_handler_get_timer(snd_async_handler_get_timer326,8880
int snd_timer_poll_descriptors_count(340,9292
int snd_timer_poll_descriptors(353,9580
int snd_timer_poll_descriptors_revents(384,10317
int snd_timer_nonblock(400,10784
int snd_timer_async(423,11343
size_t snd_timer_info_sizeof(438,11688
int snd_timer_info_malloc(451,12013
void snd_timer_info_free(467,12388
void snd_timer_info_copy(478,12636
int snd_timer_info_is_slave(489,12891
int snd_timer_info_get_card(500,13133
const char *snd_timer_info_get_id(snd_timer_info_get_id511,13331
const char *snd_timer_info_get_name(snd_timer_info_get_name522,13551
long snd_timer_info_get_resolution(534,13794
int snd_timer_info(546,14106
size_t snd_timer_params_sizeof(557,14378
int snd_timer_params_malloc(570,14713
void snd_timer_params_free(586,15110
void snd_timer_params_copy(597,15374
int snd_timer_params_set_auto_start(608,15640
int snd_timer_params_get_auto_start(623,16027
int INTERNAL(635,16331
int INTERNAL(655,16947
int snd_timer_params_set_early_event(670,17432
int snd_timer_params_get_early_event(685,17842
void snd_timer_params_set_ticks(696,18114
long snd_timer_params_get_ticks(707,18348
void snd_timer_params_set_queue_size(718,18604
long snd_timer_params_get_queue_size(729,18856
void INTERNAL(741,19133
unsigned int INTERNAL(757,19615
int snd_timer_params(773,20119
size_t snd_timer_status_sizeof(784,20403
int snd_timer_status_malloc(797,20738
void snd_timer_status_free(813,21135
void snd_timer_status_copy(824,21399
snd_htimestamp_t snd_timer_status_get_timestamp(837,21635
long snd_timer_status_get_resolution(848,21877
long snd_timer_status_get_lost(859,22130
long snd_timer_status_get_overrun(870,22353
long snd_timer_status_get_queue(881,22612
int snd_timer_status(893,22923
int snd_timer_start(905,23193
int snd_timer_stop(916,23409
int snd_timer_continue(927,23627
ssize_t snd_timer_read(939,23899
long snd_timer_info_get_ticks(952,24300

alsa-lib-1.0.29/src/timer/timer_local.h,1100
	int (*close)close29,988
	int (*nonblock)nonblock30,1023
	int (*async)async31,1075
	int (*info)info32,1130
	int (*params)params33,1188
	int (*status)status34,1252
	int (*rt_start)rt_start35,1316
	int (*rt_stop)rt_stop36,1354
	int (*rt_continue)rt_continue37,1391
	ssize_t (*read)read38,1432
} snd_timer_ops_t;39,1497
struct _snd_timer 41,1517
	unsigned int version;42,1537
	void *dl_handle;dl_handle43,1560
	char *name;name44,1578
	snd_timer_type_t type;45,1591
	int mode;46,1615
	int poll_fd;47,1626
	const snd_timer_ops_t *ops;ops48,1640
	void *private_data;private_data49,1669
	struct list_head async_handlers;50,1690
	int (*close)close54,1745
	int (*next_device)next_device55,1786
	int (*info)info56,1854
	int (*params)params57,1919
	int (*status)status58,1988
} snd_timer_query_ops_t;59,2057
struct _snd_timer_query 61,2083
	void *dl_handle;dl_handle62,2109
	char *name;name63,2127
	snd_timer_type_t type;64,2140
	int mode;65,2164
	int poll_fd;66,2175
	const snd_timer_query_ops_t *ops;ops67,2189
	void *private_data;private_data68,2224

alsa-lib-1.0.29/src/hwdep/hwdep_local.h,449
	int (*close)close28,969
	int (*nonblock)nonblock29,1004
	int (*info)info30,1056
	int (*ioctl)ioctl31,1114
	ssize_t (*write)write32,1183
	ssize_t (*read)read33,1255
} snd_hwdep_ops_t;34,1320
struct _snd_hwdep 36,1340
	void *dl_handle;dl_handle37,1360
	char *name;name38,1378
	snd_hwdep_type_t type;39,1391
	int mode;40,1415
	int poll_fd;41,1426
	const snd_hwdep_ops_t *ops;ops42,1440
	void *private_data;private_data43,1469

alsa-lib-1.0.29/src/hwdep/hwdep.c,2217
static int snd_hwdep_open_conf(39,1309
static int snd_hwdep_open_noupdate(145,3984
int snd_hwdep_open(169,4731
int snd_hwdep_open_lconf(190,5379
int snd_hwdep_close(205,5776
const char *snd_hwdep_name(snd_hwdep_name225,6226
snd_hwdep_type_t snd_hwdep_type(238,6485
int snd_hwdep_poll_descriptors_count(249,6710
int snd_hwdep_poll_descriptors(262,6998
int snd_hwdep_poll_descriptors_revents(293,7736
int snd_hwdep_nonblock(309,8345
size_t snd_hwdep_info_sizeof(326,8749
int snd_hwdep_info_malloc(339,9074
void snd_hwdep_info_free(355,9449
void snd_hwdep_info_copy(366,9697
int snd_hwdep_info_get_card(377,9937
unsigned int snd_hwdep_info_get_device(388,10160
const char *snd_hwdep_info_get_id(snd_hwdep_info_get_id399,10406
const char *snd_hwdep_info_get_name(snd_hwdep_info_get_name410,10642
snd_hwdep_iface_t snd_hwdep_info_get_iface(421,10896
void snd_hwdep_info_set_device(432,11130
int snd_hwdep_info(444,11447
int snd_hwdep_ioctl(458,11778
ssize_t snd_hwdep_write(470,12092
ssize_t snd_hwdep_read(484,12527
int snd_hwdep_dsp_status(498,12996
int snd_hwdep_dsp_load(511,13379
size_t snd_hwdep_dsp_status_sizeof(522,13706
int snd_hwdep_dsp_status_malloc(535,14055
void snd_hwdep_dsp_status_free(551,14466
void snd_hwdep_dsp_status_copy(562,14744
unsigned int snd_hwdep_dsp_status_get_version(573,15024
const char *snd_hwdep_dsp_status_get_id(snd_hwdep_dsp_status_get_id584,15288
unsigned int snd_hwdep_dsp_status_get_num_dsps(595,15548
unsigned int snd_hwdep_dsp_status_get_dsp_loaded(606,15844
unsigned int snd_hwdep_dsp_status_get_chip_ready(617,16158
size_t snd_hwdep_dsp_image_sizeof(627,16425
int snd_hwdep_dsp_image_malloc(640,16770
void snd_hwdep_dsp_image_free(656,17175
void snd_hwdep_dsp_image_copy(667,17448
unsigned int snd_hwdep_dsp_image_get_index(678,17719
const char *snd_hwdep_dsp_image_get_name(snd_hwdep_dsp_image_get_name689,17986
size_t snd_hwdep_dsp_image_get_length(700,18270
const void *snd_hwdep_dsp_image_get_image(snd_hwdep_dsp_image_get_image711,18544
void snd_hwdep_dsp_image_set_index(722,18799
void snd_hwdep_dsp_image_set_name(733,19060
void snd_hwdep_dsp_image_set_length(745,19405
void snd_hwdep_dsp_image_set_image(756,19673

alsa-lib-1.0.29/src/hwdep/hwdep_hw.c,501
const char *_snd_module_hwdep_hw _snd_module_hwdep_hw32,1088
#define SNDRV_FILE_HWDEP	35,1135
#define SNDRV_HWDEP_VERSION_MAX	36,1193
static int snd_hwdep_hw_close(38,1258
static int snd_hwdep_hw_nonblock(46,1399
static int snd_hwdep_hw_info(61,1712
static int snd_hwdep_hw_ioctl(69,1904
static ssize_t snd_hwdep_hw_write(77,2083
static ssize_t snd_hwdep_hw_read(87,2330
static const snd_hwdep_ops_t snd_hwdep_hw_ops 97,2569
int snd_hwdep_hw_open(106,2805
int _snd_hwdep_hw_open(148,3797

alsa-lib-1.0.29/src/hwdep/hwdep_symbols.c,134
static const char **snd_hwdep_open_objects[snd_hwdep_open_objects25,903
void *snd_hwdep_open_symbols(snd_hwdep_open_symbols29,980

alsa-lib-1.0.29/src/seq/seqmid.c,637
int snd_seq_control_queue(48,1594
int snd_seq_create_simple_port(73,2253
int snd_seq_delete_simple_port(103,2963
int snd_seq_connect_from(121,3494
int snd_seq_connect_to(148,4304
int snd_seq_disconnect_from(175,5084
int snd_seq_disconnect_to(202,5873
int snd_seq_set_client_name(228,6462
int snd_seq_set_client_event_filter(247,6932
int snd_seq_set_client_pool_output(266,7428
int snd_seq_set_client_pool_output_room(285,7888
int snd_seq_set_client_pool_input(304,8351
int snd_seq_reset_pool_output(322,8784
int snd_seq_reset_pool_input(334,9054
int snd_seq_sync_output_queue(348,9375
int snd_seq_parse_address(389,10764

alsa-lib-1.0.29/src/seq/seq.c,12419
const char *snd_seq_name(snd_seq_name800,30473
snd_seq_type_t snd_seq_type(815,30761
static int snd_seq_open_conf(821,30843
static int snd_seq_open_noupdate(927,33479
int snd_seq_open(974,35329
int snd_seq_open_lconf(1000,36074
int _snd_seq_open_lconf(1008,36311
int snd_seq_close(1033,37085
int snd_seq_poll_descriptors_count(1060,37757
int snd_seq_poll_descriptors(1093,38805
int snd_seq_poll_descriptors_revents(1123,39593
int snd_seq_nonblock(1146,40323
int snd_seq_client_id(1172,40919
size_t snd_seq_get_output_buffer_size(1189,41315
size_t snd_seq_get_input_buffer_size(1207,41723
int snd_seq_set_output_buffer_size(1225,42159
int snd_seq_set_input_buffer_size(1252,42792
size_t snd_seq_system_info_sizeof(1275,43333
int snd_seq_system_info_malloc(1285,43579
void snd_seq_system_info_free(1298,43859
void snd_seq_system_info_copy(1308,44064
int snd_seq_system_info_get_queues(1322,44360
int snd_seq_system_info_get_clients(1335,44637
int snd_seq_system_info_get_ports(1348,44912
int snd_seq_system_info_get_channels(1361,45189
int snd_seq_system_info_get_cur_clients(1374,45474
int snd_seq_system_info_get_cur_queues(1387,45763
int snd_seq_system_info(1403,46240
size_t snd_seq_client_info_sizeof(1416,46528
int snd_seq_client_info_malloc(1426,46774
void snd_seq_client_info_free(1439,47054
void snd_seq_client_info_copy(1449,47259
int snd_seq_client_info_get_client(1463,47600
snd_seq_client_type_t snd_seq_client_info_get_type(1479,47991
const char *snd_seq_client_info_get_name(snd_seq_client_info_get_name1492,48303
int snd_seq_client_info_get_broadcast_filter(1505,48644
int snd_seq_client_info_get_error_bounce(1518,49030
const unsigned char *snd_seq_client_info_get_event_filter(snd_seq_client_info_get_event_filter1537,49666
void snd_seq_client_info_event_filter_clear(1559,50344
void snd_seq_client_info_event_filter_add(1580,51088
void snd_seq_client_info_event_filter_del(1601,51885
int snd_seq_client_info_event_filter_check(1621,52593
int snd_seq_client_info_get_num_ports(1634,52954
int snd_seq_client_info_get_event_lost(1647,53253
void snd_seq_client_info_set_client(1660,53570
void snd_seq_client_info_set_name(1674,53915
void snd_seq_client_info_set_broadcast_filter(1687,54313
void snd_seq_client_info_set_error_bounce(1703,54754
void snd_seq_client_info_set_event_filter(1725,55436
int snd_seq_get_any_client_info(1750,56138
int snd_seq_get_client_info(1770,56781
int snd_seq_set_client_info(1786,57246
int snd_seq_query_next_client(1808,57847
size_t snd_seq_port_info_sizeof(1826,58161
int snd_seq_port_info_malloc(1836,58401
void snd_seq_port_info_free(1849,58673
void snd_seq_port_info_copy(1859,58872
int snd_seq_port_info_get_client(1873,59178
int snd_seq_port_info_get_port(1886,59464
const snd_seq_addr_t *snd_seq_port_info_get_addr(snd_seq_port_info_get_addr1899,59778
const char *snd_seq_port_info_get_name(snd_seq_port_info_get_name1912,60104
unsigned int snd_seq_port_info_get_capability(1925,60415
unsigned int snd_seq_port_info_get_type(1938,60726
int snd_seq_port_info_get_read_use(1951,61028
int snd_seq_port_info_get_write_use(1964,61331
int snd_seq_port_info_get_midi_channels(1977,61665
int snd_seq_port_info_get_midi_voices(1990,62001
int snd_seq_port_info_get_synth_voices(2003,62336
int snd_seq_port_info_get_port_specified(2016,62685
int snd_seq_port_info_get_timestamping(2029,63100
int snd_seq_port_info_get_timestamp_real(2042,63506
int snd_seq_port_info_get_timestamp_queue(2055,63874
void snd_seq_port_info_set_client(2068,64184
void snd_seq_port_info_set_port(2081,64487
void snd_seq_port_info_set_addr(2094,64806
void snd_seq_port_info_set_name(2107,65147
void snd_seq_port_info_set_capability(2120,65509
void snd_seq_port_info_set_type(2133,65841
void snd_seq_port_info_set_midi_channels(2146,66177
void snd_seq_port_info_set_midi_voices(2159,66522
void snd_seq_port_info_set_synth_voices(2172,66861
void snd_seq_port_info_set_port_specified(2185,67231
void snd_seq_port_info_set_timestamping(2201,67684
void snd_seq_port_info_set_timestamp_real(2217,68154
void snd_seq_port_info_set_timestamp_queue(2233,68578
int snd_seq_create_port(2285,70967
int snd_seq_delete_port(2302,71450
int snd_seq_get_any_port_info(2322,71987
int snd_seq_get_port_info(2341,72636
int snd_seq_set_port_info(2355,73049
int snd_seq_query_next_port(2380,73804
size_t snd_seq_port_subscribe_sizeof(2398,74125
int snd_seq_port_subscribe_malloc(2408,74380
void snd_seq_port_subscribe_free(2421,74672
void snd_seq_port_subscribe_copy(2431,74886
const snd_seq_addr_t *snd_seq_port_subscribe_get_sender(snd_seq_port_subscribe_get_sender2444,75207
const snd_seq_addr_t *snd_seq_port_subscribe_get_dest(snd_seq_port_subscribe_get_dest2456,75550
int snd_seq_port_subscribe_get_queue(2469,75903
int snd_seq_port_subscribe_get_exclusive(2482,76236
int snd_seq_port_subscribe_get_time_update(2495,76621
int snd_seq_port_subscribe_get_time_real(2508,77016
void snd_seq_port_subscribe_set_sender(2521,77387
void snd_seq_port_subscribe_set_dest(2534,77774
void snd_seq_port_subscribe_set_queue(2547,78131
void snd_seq_port_subscribe_set_exclusive(2560,78465
void snd_seq_port_subscribe_set_time_update(2576,78904
void snd_seq_port_subscribe_set_time_real(2592,79341
int snd_seq_get_port_subscription(2610,79825
int snd_seq_subscribe_port(2628,80387
int snd_seq_unsubscribe_port(2645,80923
size_t snd_seq_query_subscribe_sizeof(2656,81155
int snd_seq_query_subscribe_malloc(2666,81413
void snd_seq_query_subscribe_free(2679,81709
void snd_seq_query_subscribe_copy(2689,81926
int snd_seq_query_subscribe_get_client(2703,82281
int snd_seq_query_subscribe_get_port(2716,82610
const snd_seq_addr_t *snd_seq_query_subscribe_get_root(snd_seq_query_subscribe_get_root2729,82967
snd_seq_query_subs_type_t snd_seq_query_subscribe_get_type(2742,83336
int snd_seq_query_subscribe_get_index(2755,83702
int snd_seq_query_subscribe_get_num_subs(2768,84020
const snd_seq_addr_t *snd_seq_query_subscribe_get_addr(snd_seq_query_subscribe_get_addr2781,84348
int snd_seq_query_subscribe_get_queue(2794,84704
int snd_seq_query_subscribe_get_exclusive(2807,85009
int snd_seq_query_subscribe_get_time_update(2820,85364
int snd_seq_query_subscribe_get_time_real(2833,85731
void snd_seq_query_subscribe_set_client(2846,86111
void snd_seq_query_subscribe_set_port(2859,86453
void snd_seq_query_subscribe_set_root(2872,86819
void snd_seq_query_subscribe_set_type(2885,87202
void snd_seq_query_subscribe_set_index(2898,87561
int snd_seq_query_port_subscribers(2924,88470
size_t snd_seq_queue_info_sizeof(2940,88808
int snd_seq_queue_info_malloc(2950,89051
void snd_seq_queue_info_free(2963,89327
void snd_seq_queue_info_copy(2973,89529
int snd_seq_queue_info_get_queue(2987,89843
const char *snd_seq_queue_info_get_name(snd_seq_queue_info_get_name3000,90133
int snd_seq_queue_info_get_owner(3013,90445
int snd_seq_queue_info_get_locked(3026,90766
unsigned int snd_seq_queue_info_get_flags(3039,91086
void snd_seq_queue_info_set_name(3052,91389
void snd_seq_queue_info_set_owner(3065,91741
void snd_seq_queue_info_set_locked(3078,92053
void snd_seq_queue_info_set_flags(3091,92387
int snd_seq_create_queue(3106,92741
int snd_seq_alloc_named_queue(3125,93216
int snd_seq_alloc_queue(3143,93738
int snd_seq_free_queue(3156,94024
int snd_seq_get_queue_info(3174,94493
int snd_seq_set_queue_info(3190,94895
int snd_seq_query_named_queue(3207,95358
int snd_seq_get_queue_usage(3228,95909
int snd_seq_set_queue_usage(3250,96468
size_t snd_seq_queue_status_sizeof(3266,96816
int snd_seq_queue_status_malloc(3276,97065
void snd_seq_queue_status_free(3289,97349
void snd_seq_queue_status_copy(3299,97557
int snd_seq_queue_status_get_queue(3313,97851
int snd_seq_queue_status_get_events(3326,98137
snd_seq_tick_time_t snd_seq_queue_status_get_tick_time(3339,98411
const snd_seq_real_time_t *snd_seq_queue_status_get_real_time(snd_seq_queue_status_get_real_time3351,98681
unsigned int snd_seq_queue_status_get_status(3364,99029
int snd_seq_get_queue_status(3380,99438
size_t snd_seq_queue_tempo_sizeof(3393,99752
int snd_seq_queue_tempo_malloc(3403,99998
void snd_seq_queue_tempo_free(3416,100278
void snd_seq_queue_tempo_copy(3426,100483
int snd_seq_queue_tempo_get_queue(3440,100773
unsigned int snd_seq_queue_tempo_get_tempo(3453,101040
int snd_seq_queue_tempo_get_ppq(3466,101312
unsigned int snd_seq_queue_tempo_get_skew(3479,101591
unsigned int snd_seq_queue_tempo_get_skew_base(3492,101897
void snd_seq_queue_tempo_set_tempo(3505,102186
void snd_seq_queue_tempo_set_ppq(3518,102468
void snd_seq_queue_tempo_set_skew(3534,102884
void snd_seq_queue_tempo_set_skew_base(3547,103199
int snd_seq_get_queue_tempo(3562,103596
int snd_seq_set_queue_tempo(3579,104065
size_t snd_seq_queue_timer_sizeof(3593,104390
int snd_seq_queue_timer_malloc(3603,104636
void snd_seq_queue_timer_free(3616,104916
void snd_seq_queue_timer_copy(3626,105121
int snd_seq_queue_timer_get_queue(3640,105409
snd_seq_queue_timer_type_t snd_seq_queue_timer_get_type(3653,105678
const snd_timer_id_t *snd_seq_queue_timer_get_id(snd_seq_queue_timer_get_id3666,106000
unsigned int snd_seq_queue_timer_get_resolution(3679,106301
void snd_seq_queue_timer_set_type(3692,106600
void snd_seq_queue_timer_set_id(3705,106907
void snd_seq_queue_timer_set_resolution(3718,107225
int snd_seq_get_queue_timer(3734,107640
int snd_seq_set_queue_timer(3751,108114
snd_seq_event_t *snd_seq_create_event(snd_seq_create_event3769,108633
int snd_seq_free_event(3784,109059
ssize_t snd_seq_event_length(3797,109326
int snd_seq_event_output(3830,110298
int snd_seq_event_output_buffer(3854,110924
static int alloc_tmpbuf(3877,111537
int snd_seq_event_output_direct(3910,112613
int snd_seq_event_output_pending(3937,113233
int snd_seq_drain_output(3958,114007
int snd_seq_extract_output(3987,114760
static ssize_t snd_seq_event_read_buffer(4019,115478
static int snd_seq_event_retrieve_buffer(4030,115752
int snd_seq_event_input(4082,117490
static int snd_seq_event_input_feed(4098,117791
int snd_seq_event_input_pending(4129,118713
int snd_seq_drop_output_buffer(4153,119291
int snd_seq_drop_input_buffer(4166,119511
int snd_seq_drop_output(4183,119892
int snd_seq_drop_input(4200,120287
size_t snd_seq_remove_events_sizeof(4216,120589
int snd_seq_remove_events_malloc(4226,120841
void snd_seq_remove_events_free(4239,121129
void snd_seq_remove_events_copy(4249,121340
unsigned int snd_seq_remove_events_get_condition(4263,121635
int snd_seq_remove_events_get_queue(4276,121914
const snd_seq_timestamp_t *snd_seq_remove_events_get_time(snd_seq_remove_events_get_time4289,122186
const snd_seq_addr_t *snd_seq_remove_events_get_dest(snd_seq_remove_events_get_dest4302,122528
int snd_seq_remove_events_get_channel(4315,122843
int snd_seq_remove_events_get_event_type(4328,123114
int snd_seq_remove_events_get_tag(4341,123383
void snd_seq_remove_events_set_condition(4354,123654
void snd_seq_remove_events_set_queue(4367,123945
void snd_seq_remove_events_set_time(4380,124229
void snd_seq_remove_events_set_dest(4393,124580
void snd_seq_remove_events_set_channel(4406,124908
void snd_seq_remove_events_set_event_type(4419,125194
void snd_seq_remove_events_set_tag(4432,125468
static inline int snd_seq_compare_tick_time(4441,125666
static inline int snd_seq_compare_real_time(4447,125804
static int remove_match(4458,126094
int snd_seq_remove_events(4523,127997
size_t snd_seq_client_pool_sizeof(4576,129169
int snd_seq_client_pool_malloc(4586,129415
void snd_seq_client_pool_free(4599,129695
void snd_seq_client_pool_copy(4609,129900
int snd_seq_client_pool_get_client(4621,130153
size_t snd_seq_client_pool_get_output_pool(4632,130399
size_t snd_seq_client_pool_get_input_pool(4643,130656
size_t snd_seq_client_pool_get_output_room(4654,130913
size_t snd_seq_client_pool_get_output_free(4665,131190
size_t snd_seq_client_pool_get_input_free(4676,131465
void snd_seq_client_pool_set_output_pool(4687,131726
void snd_seq_client_pool_set_input_pool(4698,131992
void snd_seq_client_pool_set_output_room(4709,132258
int snd_seq_get_client_pool(4721,132528
int snd_seq_set_client_pool(4736,132947
void snd_seq_set_bit(4752,133242
void snd_seq_unset_bit(4760,133379
int snd_seq_change_bit(4768,133528
int snd_seq_get_bit(4780,133778

alsa-lib-1.0.29/src/seq/seq_hw.c,1860
const char *_snd_module_seq_hw _snd_module_seq_hw29,1045
#define SNDRV_FILE_SEQ	33,1109
#define SNDRV_FILE_ALOADSEQ	34,1161
#define SNDRV_SEQ_VERSION_MAX	35,1223
	int fd;38,1303
} snd_seq_hw_t;39,1312
static int snd_seq_hw_close(42,1353
static int snd_seq_hw_nonblock(55,1549
static int snd_seq_hw_client_id(75,1945
static int snd_seq_hw_system_info(86,2194
static int snd_seq_hw_get_client_info(96,2458
static int snd_seq_hw_set_client_info(106,2738
static int snd_seq_hw_create_port(116,3018
static int snd_seq_hw_delete_port(126,3284
static int snd_seq_hw_get_port_info(136,3550
static int snd_seq_hw_set_port_info(146,3822
static int snd_seq_hw_get_port_subscription(156,4094
static int snd_seq_hw_subscribe_port(166,4383
static int snd_seq_hw_unsubscribe_port(176,4661
static int snd_seq_hw_query_port_subscribers(186,4945
static int snd_seq_hw_get_queue_status(196,5226
static int snd_seq_hw_get_queue_tempo(206,5514
static int snd_seq_hw_set_queue_tempo(216,5796
static int snd_seq_hw_get_queue_timer(226,6078
static int snd_seq_hw_set_queue_timer(236,6360
static int snd_seq_hw_get_queue_client(246,6642
static int snd_seq_hw_set_queue_client(256,6926
static int snd_seq_hw_create_queue(266,7210
static int snd_seq_hw_delete_queue(276,7479
static int snd_seq_hw_get_queue_info(286,7748
static int snd_seq_hw_set_queue_info(296,8023
static int snd_seq_hw_get_named_queue(306,8298
static ssize_t snd_seq_hw_write(316,8576
static ssize_t snd_seq_hw_read(325,8784
static int snd_seq_hw_remove_events(334,8990
static int snd_seq_hw_get_client_pool(344,9263
static int snd_seq_hw_set_client_pool(354,9542
static int snd_seq_hw_query_next_client(364,9821
static int snd_seq_hw_query_next_port(374,10106
static const snd_seq_ops_t snd_seq_hw_ops 384,10383
int snd_seq_hw_open(419,11877
int _snd_seq_hw_open(539,14336

alsa-lib-1.0.29/src/seq/seq_event.c,92
#define FIXED_EV(11,159
const unsigned int snd_seq_event_types[snd_seq_event_types15,279

alsa-lib-1.0.29/src/seq/seq_old.c,1678
size_t snd_instr_header_sizeof(9,105
int snd_instr_header_malloc(14,158
void snd_instr_header_free(20,273
void snd_instr_header_copy(24,333
const void *snd_instr_header_get_id(snd_instr_header_get_id29,433
int snd_instr_header_get_cluster(34,523
unsigned int snd_instr_header_get_cmd(39,607
size_t snd_instr_header_get_len(44,696
const char *snd_instr_header_get_name(snd_instr_header_get_name49,779
int snd_instr_header_get_type(54,871
const char *snd_instr_header_get_format(snd_instr_header_get_format59,952
const void *snd_instr_header_get_alias(snd_instr_header_get_alias64,1046
void *snd_instr_header_get_data(snd_instr_header_get_data69,1139
int snd_instr_header_get_follow_alias(74,1225
void snd_instr_header_set_id(79,1314
void snd_instr_header_set_cluster(84,1418
void snd_instr_header_set_cmd(89,1522
void snd_instr_header_set_len(94,1630
void snd_instr_header_set_name(99,1732
void snd_instr_header_set_type(104,1842
void snd_instr_header_set_format(109,1944
void snd_instr_header_set_alias(114,2053
void snd_instr_header_set_follow_alias(119,2159
int snd_instr_fm_free(124,2269
int snd_instr_fm_convert_to_stream(129,2334
int snd_instr_fm_convert_from_stream(137,2538
int snd_instr_iwffff_open(145,2708
int snd_instr_iwffff_open_rom(152,2875
int snd_instr_iwffff_open_rom_file(160,3066
int snd_instr_iwffff_close(168,3264
int snd_instr_iwffff_free(173,3338
int snd_instr_iwffff_load(178,3412
int snd_instr_iwffff_convert_to_stream(186,3589
int snd_instr_iwffff_convert_from_stream(194,3813
int snd_instr_simple_free(202,3979
int snd_instr_simple_convert_to_stream(207,4052
int snd_instr_simple_convert_from_stream(215,4276

alsa-lib-1.0.29/src/seq/seq_symbols.c,126
static const char **snd_seq_open_objects[snd_seq_open_objects25,905
void *snd_seq_open_symbols(snd_seq_open_symbols29,978

alsa-lib-1.0.29/src/seq/seq_midi_event.c,1707
struct snd_midi_event 37,1186
	size_t qlen;38,1210
	size_t read;39,1243
	int type;40,1274
	unsigned char lastcmd;41,1310
	unsigned char nostat;42,1334
	size_t bufsize;43,1357
	unsigned char *buf;buf44,1374
#define ST_INVALID	50,1536
#define ST_SPECIAL	51,1557
#define ST_SYSEX	52,1578
typedef void (*event_encode_t)event_encode_t57,1677
typedef void (*event_decode_t)event_decode_t58,1753
static const struct status_event_list_t 81,2744
	int event;82,2786
	int qlen;83,2798
	event_encode_t encode;84,2809
	event_decode_t decode;85,2833
} status_event[status_event86,2857
static const struct extra_event_list_t 119,4570
	int event;120,4611
	int (*decode)decode121,4623
} extra_event[extra_event122,4718
#define numberof(128,4886
int snd_midi_event_new(150,5612
void snd_midi_event_free(181,6182
void snd_midi_event_no_status(200,6711
inline static void reset_encode(208,6832
void snd_midi_event_reset_encode(226,7220
void snd_midi_event_reset_decode(242,7597
void snd_midi_event_init(257,7945
int snd_midi_event_resize_buffer(280,8554
long snd_midi_event_encode(360,11370
int snd_midi_event_encode_byte(398,12433
static void note_event(464,14182
static void one_param_ctrl_event(472,14409
static void pitchbend_ctrl_event(479,14610
static void two_param_ctrl_event(486,14849
static void one_param_event(494,15089
static void songpos_event(500,15232
long snd_midi_event_decode(557,17181
static void note_decode(618,18724
static void one_param_decode(625,18914
static void pitchbend_decode(631,19068
static void two_param_decode(639,19281
static void songpos_decode(646,19471
static int extra_decode_ctrl14(653,19666
static int extra_decode_xrpn(690,20650

alsa-lib-1.0.29/src/seq/seq_local.h,2223
#define __SEQ_LOCAL_H24,986
#define SND_SEQ_OBUF_SIZE	31,1088
#define SND_SEQ_IBUF_SIZE	32,1143
#define DEFAULT_TMPBUF_SIZE	33,1202
typedef struct snd_seq_queue_client snd_seq_queue_client_t;35,1234
	int (*close)close39,1313
	int (*nonblock)nonblock40,1344
	int (*system_info)system_info41,1392
	int (*get_client_info)get_client_info42,1459
	int (*set_client_info)set_client_info43,1530
	int (*create_port)create_port44,1601
	int (*delete_port)delete_port45,1666
	int (*get_port_info)get_port_info46,1731
	int (*set_port_info)set_port_info47,1798
	int (*get_port_subscription)get_port_subscription48,1865
	int (*subscribe_port)subscribe_port49,1944
	int (*unsubscribe_port)unsubscribe_port50,2016
	int (*query_port_subscribers)query_port_subscribers51,2090
	int (*get_queue_status)get_queue_status52,2172
	int (*get_queue_tempo)get_queue_tempo53,2247
	int (*set_queue_tempo)set_queue_tempo54,2319
	int (*get_queue_timer)get_queue_timer55,2391
	int (*set_queue_timer)set_queue_timer56,2463
	int (*get_queue_client)get_queue_client57,2535
	int (*set_queue_client)set_queue_client58,2610
	int (*create_queue)create_queue59,2685
	int (*delete_queue)delete_queue60,2751
	int (*get_queue_info)get_queue_info61,2817
	int (*set_queue_info)set_queue_info62,2885
	int (*get_named_queue)get_named_queue63,2953
	ssize_t (*write)write64,3022
	ssize_t (*read)read65,3080
	int (*remove_events)remove_events66,3137
	int (*get_client_pool)get_client_pool67,3206
	int (*set_client_pool)set_client_pool68,3276
	int (*query_next_client)query_next_client69,3346
	int (*query_next_port)query_next_port70,3418
} snd_seq_ops_t;71,3486
struct _snd_seq 73,3504
	char *name;name74,3522
	snd_seq_type_t type;75,3535
	int streams;76,3557
	int mode;77,3571
	int poll_fd;78,3582
	void *dl_handle;dl_handle79,3596
	const snd_seq_ops_t *ops;ops80,3614
	void *private_data;private_data81,3641
	int client;82,3662
	char *obuf;obuf84,3711
	size_t obufsize;85,3745
	size_t obufused;86,3789
	snd_seq_event_t *ibuf;ibuf87,3838
	size_t ibufptr;88,3881
	size_t ibuflen;89,3937
	size_t ibufsize;90,3975
	snd_seq_event_t *tmpbuf;tmpbuf91,4018
	size_t tmpbufsize;92,4086

alsa-lib-1.0.29/src/userfile.c,54
int snd_user_file(38,1317
int snd_user_file(66,1852

alsa-lib-1.0.29/src/output.c,1570
typedef struct _snd_output_ops 37,1157
	int (*close)close38,1190
	int (*print)print39,1227
	int (*puts)puts40,1298
	int (*putch)putch41,1351
	int (*flush)flush42,1395
} snd_output_ops_t;43,1432
struct _snd_output 45,1453
	snd_output_type_t type;46,1474
	const snd_output_ops_t *ops;ops47,1499
	void *private_data;private_data48,1529
int snd_output_close(57,1717
int snd_output_printf(71,2118
int snd_output_vprintf(88,2615
int snd_output_puts(99,2970
int snd_output_putc(110,3290
int snd_output_flush(124,3739
typedef struct _snd_output_stdio 130,3842
	int close;131,3877
	FILE *fp;fp132,3889
} snd_output_stdio_t;133,3900
static int snd_output_stdio_close(135,3923
static int snd_output_stdio_print(144,4100
static int snd_output_stdio_puts(150,4289
static int snd_output_stdio_putc(156,4451
static int snd_output_stdio_flush(162,4597
static const snd_output_ops_t snd_output_stdio_ops 168,4736
int snd_output_stdio_attach(188,5511
int snd_output_stdio_open(218,6351
typedef struct _snd_output_buffer 234,6645
	unsigned char *buf;buf235,6681
	size_t alloc;236,6702
	size_t size;237,6717
} snd_output_buffer_t;238,6731
static int snd_output_buffer_close(240,6755
static int snd_output_buffer_need(248,6916
static int snd_output_buffer_print(271,7431
static int snd_output_buffer_puts(295,8119
static int snd_output_buffer_putc(308,8449
static int snd_output_buffer_flush(319,8695
static const snd_output_ops_t snd_output_buffer_ops 326,8857
size_t snd_output_buffer_string(345,9511
int snd_output_buffer_open(358,9965

alsa-lib-1.0.29/src/mixer/simple_none.c,3617
#define MIXER_COMPARE_WEIGHT_SIMPLE_BASE 47,1460
#define MIXER_COMPARE_WEIGHT_NEXT_BASE 48,1510
#define MIXER_COMPARE_WEIGHT_NOT_FOUND 49,1567
typedef enum _selem_ctl_type 51,1627
	CTL_SINGLE,52,1658
	CTL_GLOBAL_ENUM,53,1671
	CTL_GLOBAL_SWITCH,54,1689
	CTL_GLOBAL_VOLUME,55,1709
	CTL_GLOBAL_ROUTE,56,1729
	CTL_PLAYBACK_ENUM,57,1748
	CTL_PLAYBACK_SWITCH,58,1768
	CTL_PLAYBACK_VOLUME,59,1790
	CTL_PLAYBACK_ROUTE,60,1812
	CTL_CAPTURE_ENUM,61,1833
	CTL_CAPTURE_SWITCH,62,1852
	CTL_CAPTURE_VOLUME,63,1873
	CTL_CAPTURE_ROUTE,64,1894
	CTL_CAPTURE_SOURCE,65,1914
	CTL_LAST 66,1935
	CTL_LAST = CTL_CAPTURE_SOURCE,66,1935
} selem_ctl_type_t;67,1967
typedef struct _selem_ctl 69,1988
	snd_hctl_elem_t *elem;elem70,2016
	snd_ctl_elem_type_t type;71,2040
	unsigned int inactive:inactive72,2067
	unsigned int values;73,2094
	long min,74,2116
	long min, max;74,2116
} selem_ctl_t;75,2132
typedef struct _selem_none 77,2148
	sm_selem_t selem;78,2177
	selem_ctl_t ctls[ctls79,2196
	unsigned int capture_item;80,2229
	struct selem_str 81,2257
		unsigned int range:range82,2277
		unsigned int db_initialized:db_initialized83,2321
		unsigned int db_init_error:db_init_error84,2355
		long min,85,2388
		long min, max;85,2388
		unsigned int channels;86,2405
		long vol[vol87,2430
		unsigned int sw;88,2446
		unsigned int *db_info;db_info89,2465
	} str[str90,2490
} selem_none_t;91,2501
static const struct mixer_name_table 93,2518
	const char *longname;longname94,2557
	const char *shortname;shortname95,2580
} name_table[name_table96,2604
static const char *get_short_name(get_short_name108,2914
static int compare_mixer_priority_lookup(118,3126
static int get_compare_weight(133,3464
static long to_user(217,5043
static long from_user(226,5329
static int elem_read_volume(235,5644
static int elem_read_switch(253,6134
static int elem_read_route(272,6620
static int elem_read_enum(291,7124
static int selem_read(318,7849
static int elem_write_volume(467,11899
static int elem_write_switch(483,12376
static int elem_write_switch_constant(499,12842
static int elem_write_route(515,13291
static int elem_write_enum(533,13872
static int selem_write_main(558,14599
static int selem_write(647,17007
static void selem_free(657,17149
static int simple_update(669,17502
static const struct suf 887,23626
	const char *suffix;suffix888,23652
	selem_ctl_type_t type;889,23673
} suffixes[suffixes890,23697
static int base_len(908,24235
static int _snd_mixer_selem_set_volume(952,25289
static int _snd_mixer_selem_set_switch(971,25865
static int is_ops(993,26443
static int get_range_ops(1048,27864
static int set_range_ops(1057,28067
static int get_volume_ops(1071,28350
static int convert_to_dB(1085,28767
static int init_db_range(1096,29082
static selem_ctl_t *get_selem_ctl(get_selem_ctl1137,29982
static int get_dB_range(1156,30363
static int get_dB_range_ops(1165,30590
static int convert_from_dB(1179,30921
static int ask_vol_dB_ops(1189,31194
static int get_dB_ops(1204,31505
static int get_switch_ops(1229,32106
static int set_volume_ops(1241,32461
static int ask_dB_vol_ops(1253,32750
static int set_dB_ops(1267,33114
static int set_switch_ops(1287,33605
static int enum_item_name_ops(1309,34192
static int get_enum_item_ops(1339,34933
static int set_enum_item_ops(1361,35573
static struct sm_elem_ops simple_none_ops 1397,36399
static int simple_add1(1415,36904
static int simple_event_add(1602,41637
static int simple_event_remove(1650,43117
static int simple_event(1671,43638
int snd_mixer_simple_none_register(1711,44639

alsa-lib-1.0.29/src/mixer/mixer.c,2737
typedef struct _snd_mixer_slave 51,1594
	snd_hctl_t *hctl;hctl52,1628
	struct list_head list;53,1647
} snd_mixer_slave_t;54,1671
int snd_mixer_open(68,1965
int snd_mixer_elem_attach(91,2550
int snd_mixer_elem_detach(110,3027
int snd_mixer_elem_empty(129,3499
static int hctl_elem_event_handler(134,3589
static int hctl_event_handler(167,4436
int snd_mixer_attach(198,5281
int snd_mixer_attach_hctl(220,5775
int snd_mixer_detach(250,6506
int snd_mixer_detach_hctl(274,7119
int snd_mixer_get_hctl(296,7632
static int snd_mixer_throw_event(310,7959
static int snd_mixer_elem_throw_event(319,8161
static int _snd_mixer_find_elem(327,8347
void *snd_mixer_elem_get_private(snd_mixer_elem_get_private357,8923
int snd_mixer_elem_new(373,9386
int snd_mixer_elem_add(399,10120
int snd_mixer_elem_remove(443,11233
void snd_mixer_elem_free(477,12099
int snd_mixer_elem_info(491,12413
int snd_mixer_elem_value(503,12720
int snd_mixer_class_register(516,13062
int snd_mixer_class_unregister(546,13860
int snd_mixer_load(568,14349
void snd_mixer_free(586,14718
int snd_mixer_close(601,15074
static int snd_mixer_compare_default(628,15684
static int mixer_compare(640,16014
static int snd_mixer_sort(648,16261
int snd_mixer_set_compare(666,16783
int snd_mixer_poll_descriptors_count(686,17261
int snd_mixer_poll_descriptors(710,17800
int snd_mixer_poll_descriptors_revents(740,18547
int snd_mixer_wait(760,19149
snd_mixer_elem_t *snd_mixer_first_elem(snd_mixer_first_elem788,19847
snd_mixer_elem_t *snd_mixer_last_elem(snd_mixer_last_elem801,20148
snd_mixer_elem_t *snd_mixer_elem_next(snd_mixer_elem_next814,20442
snd_mixer_elem_t *snd_mixer_elem_prev(snd_mixer_elem_prev827,20765
int snd_mixer_handle_events(840,21165
void snd_mixer_set_callback(861,21607
void snd_mixer_set_callback_private(872,21843
void * snd_mixer_get_callback_private(883,22084
unsigned int snd_mixer_get_count(894,22306
void snd_mixer_elem_set_callback(905,22530
void snd_mixer_elem_set_callback_private(916,22796
void * snd_mixer_elem_get_callback_private(927,23056
snd_mixer_elem_type_t snd_mixer_elem_get_type(938,23291
size_t snd_mixer_class_sizeof(949,23485
int snd_mixer_class_malloc(959,23721
void snd_mixer_class_free(972,23985
void snd_mixer_class_copy(984,24228
snd_mixer_t *snd_mixer_class_get_mixer(snd_mixer_class_get_mixer995,24479
snd_mixer_event_t snd_mixer_class_get_event(1006,24740
void *snd_mixer_class_get_private(snd_mixer_class_get_private1017,25004
snd_mixer_compare_t snd_mixer_class_get_compare(1029,25270
int snd_mixer_class_set_event(1041,25588
int snd_mixer_class_set_private(1054,25926
int snd_mixer_class_set_private_free(1067,26309
int snd_mixer_class_set_compare(1080,26698

alsa-lib-1.0.29/src/mixer/simple_abst.c,947
#define SO_PATH 44,1347
typedef struct _class_priv 46,1390
	char *device;device47,1419
	snd_ctl_t *ctl;ctl48,1434
	snd_hctl_t *hctl;hctl49,1451
	int attach_flag;50,1470
	snd_ctl_card_info_t *info;info51,1488
	void *dlhandle;dlhandle52,1516
	void *private_data;private_data53,1533
	void (*private_free)private_free54,1554
} class_priv_t;55,1603
typedef int (*snd_mixer_sbasic_init_t)snd_mixer_sbasic_init_t57,1620
typedef int (*snd_mixer_sfbasic_init_t)snd_mixer_sfbasic_init_t58,1686
static int try_open(64,1830
static int try_open_full(111,3005
static int match(158,4279
static int find_full(177,4831
static int find_module(202,5395
static void private_free(244,6328
int snd_mixer_simple_basic_register(271,7111
int snd_mixer_sbasic_info(367,9507
void *snd_mixer_sbasic_get_private(snd_mixer_sbasic_get_private385,9933
void snd_mixer_sbasic_set_private(399,10248
void snd_mixer_sbasic_set_private_free(414,10624

alsa-lib-1.0.29/src/mixer/bag.c,134
int bag_new(24,887
void bag_free(34,1018
int bag_empty(40,1087
int bag_add(45,1143
int bag_del(55,1300
void bag_del_all(69,1531

alsa-lib-1.0.29/src/mixer/simple.c,3555
int snd_mixer_selem_register(50,1648
#define CHECK_BASIC(84,2599
#define CHECK_DIR(90,2704
#define CHECK_DIR_CHN(97,2861
#define CHECK_ENUM(106,3081
#define COND_CAPS(110,3212
int snd_mixer_selem_compare(116,3348
snd_mixer_elem_t *snd_mixer_find_selem(snd_mixer_find_selem133,3807
void snd_mixer_selem_get_id(156,4388
const char *snd_mixer_selem_get_name(snd_mixer_selem_get_name171,4727
unsigned int snd_mixer_selem_get_index(184,5037
int snd_mixer_selem_has_common_volume(197,5392
int snd_mixer_selem_has_common_switch(208,5724
const char *snd_mixer_selem_channel_name(snd_mixer_selem_channel_name219,5996
int snd_mixer_selem_is_active(245,6825
int snd_mixer_selem_is_playback_mono(256,7138
int snd_mixer_selem_has_playback_channel(268,7531
int snd_mixer_selem_get_playback_volume_range(280,7940
int snd_mixer_selem_get_playback_dB_range(294,8396
int snd_mixer_selem_set_playback_volume_range(308,8804
int snd_mixer_selem_has_playback_volume(322,9235
int snd_mixer_selem_has_playback_volume_joined(333,9587
int snd_mixer_selem_has_playback_switch(344,9925
int snd_mixer_selem_has_playback_switch_joined(355,10277
int snd_mixer_selem_ask_playback_vol_dB(368,10720
int snd_mixer_selem_ask_playback_dB_vol(383,11352
int snd_mixer_selem_get_playback_volume(397,11870
int snd_mixer_selem_get_playback_dB(411,12449
int snd_mixer_selem_get_playback_switch(431,13103
int snd_mixer_selem_set_playback_volume(445,13649
int snd_mixer_selem_set_playback_dB(460,14319
int snd_mixer_selem_set_playback_volume_all(473,14830
int snd_mixer_selem_set_playback_dB_all(497,15603
int snd_mixer_selem_set_playback_switch(521,16299
int snd_mixer_selem_set_playback_switch_all(534,16803
int snd_mixer_selem_is_capture_mono(557,17409
int snd_mixer_selem_has_capture_channel(570,17849
int snd_mixer_selem_get_capture_volume_range(583,18300
int snd_mixer_selem_get_capture_dB_range(597,18752
int snd_mixer_selem_set_capture_volume_range(611,19157
int snd_mixer_selem_has_capture_volume(625,19585
int snd_mixer_selem_has_capture_volume_joined(636,19935
int snd_mixer_selem_has_capture_switch(647,20271
int snd_mixer_selem_has_capture_switch_joined(658,20621
int snd_mixer_selem_has_capture_switch_exclusive(669,21028
int snd_mixer_selem_get_capture_group(680,21392
int snd_mixer_selem_ask_capture_vol_dB(697,21904
int snd_mixer_selem_ask_capture_dB_vol(712,22547
int snd_mixer_selem_get_capture_volume(726,23063
int snd_mixer_selem_get_capture_dB(740,23640
int snd_mixer_selem_get_capture_switch(754,24192
int snd_mixer_selem_set_capture_volume(768,24736
int snd_mixer_selem_set_capture_dB(783,25404
int snd_mixer_selem_set_capture_volume_all(796,25913
int snd_mixer_selem_set_capture_dB_all(820,26681
int snd_mixer_selem_set_capture_switch(844,27372
int snd_mixer_selem_set_capture_switch_all(857,27874
int snd_mixer_selem_is_enumerated(879,28477
int snd_mixer_selem_is_enum_playback(890,28831
int snd_mixer_selem_is_enum_capture(901,29185
int snd_mixer_selem_get_enum_items(912,29550
int snd_mixer_selem_get_enum_item_name(927,30065
int snd_mixer_selem_get_enum_item(943,30633
int snd_mixer_selem_set_enum_item(959,31167
size_t snd_mixer_selem_id_sizeof(972,31479
int snd_mixer_selem_id_malloc(982,31724
void snd_mixer_selem_id_free(995,32000
void snd_mixer_selem_id_copy(1005,32202
const char *snd_mixer_selem_id_get_name(snd_mixer_selem_id_get_name1016,32467
unsigned int snd_mixer_selem_id_get_index(1027,32716
void snd_mixer_selem_id_set_name(1038,32969
void snd_mixer_selem_id_set_index(1050,33291

alsa-lib-1.0.29/src/mixer/mixer_simple.h,155
#define snd_mixer_simple_none_register 25,945
#define snd_mixer_simple_basic_register 27,1019
static inline int snd_mixer_simple_basic_register(35,1370

alsa-lib-1.0.29/src/mixer/mixer_local.h,1375
typedef struct _bag1 25,960
	void *ptr;ptr26,983
	struct list_head list;27,995
} bag1_t;28,1019
typedef struct list_head bag_t;30,1030
typedef struct list_head *bag_iterator_t;bag_iterator_t39,1246
#define bag_iterator_entry(41,1289
#define bag_for_each(42,1356
#define bag_for_each_safe(43,1411
struct _snd_mixer_class 45,1489
	struct list_head list;46,1515
	snd_mixer_t *mixer;mixer47,1539
	snd_mixer_event_t event;48,1560
	void *private_data;private_data49,1586
	void (*private_free)private_free50,1609
	snd_mixer_compare_t compare;51,1658
struct _snd_mixer_elem 54,1692
	snd_mixer_elem_type_t type;55,1717
	struct list_head list;56,1746
	void *private_data;private_data58,1832
	void (*private_free)private_free59,1853
	snd_mixer_elem_callback_t callback;60,1900
	void *callback_private;callback_private61,1937
	bag_t helems;62,1962
	int compare_weight;63,1977
struct _snd_mixer 66,2035
	struct list_head slaves;67,2055
	struct list_head classes;68,2106
	struct list_head elems;69,2164
	snd_mixer_elem_t **pelems;pelems70,2214
	unsigned int count;71,2267
	unsigned int alloc;72,2288
	unsigned int events;73,2309
	snd_mixer_callback_t callback;74,2331
	void *callback_private;callback_private75,2363
	snd_mixer_compare_t compare;76,2388
struct _snd_mixer_selem_id 79,2422
	char name[name80,2451
	unsigned int index;81,2467

alsa-lib-1.0.29/src/alisp/alisp_local.h,2422
enum alisp_tokens 26,931
	ALISP_IDENTIFIER,27,951
	ALISP_INTEGER,28,970
	ALISP_FLOAT,29,986
	ALISP_FLOATE,30,1000
	ALISP_STRING31,1015
enum alisp_objects 34,1033
	ALISP_OBJ_INTEGER,35,1054
	ALISP_OBJ_FLOAT,36,1074
	ALISP_OBJ_IDENTIFIER,37,1092
	ALISP_OBJ_STRING,38,1115
	ALISP_OBJ_POINTER,39,1134
	ALISP_OBJ_CONS,40,1154
	ALISP_OBJ_LAST_SEARCH 41,1171
	ALISP_OBJ_LAST_SEARCH = ALISP_OBJ_CONS,41,1171
	ALISP_OBJ_NIL,42,1212
	ALISP_OBJ_T,43,1228
#define ALISP_TYPE_MASK	48,1268
#define ALISP_TYPE_SHIFT 49,1303
#define ALISP_REFS_MASK 50,1331
#define ALISP_REFS_SHIFT 51,1366
#define ALISP_MAX_REFS 52,1393
#define ALISP_MAX_REFS_LIMIT 53,1452
struct alisp_object 55,1509
	struct list_head list;56,1531
	unsigned int	type_refs;57,1555
		char	*s;s59,1624
		long	i;60,1635
		double	f;61,1645
		const void *ptr;ptr62,1657
			struct alisp_object *car;car64,1687
			struct alisp_object *cdr;cdr65,1716
		} c;66,1745
	} value;67,1752
static inline enum alisp_objects alisp_get_type(70,1766
static inline void alisp_set_type(75,1887
static inline int alisp_compare_type(81,2067
static inline void alisp_set_refs(87,2252
static inline unsigned int alisp_get_refs(93,2410
static inline unsigned int alisp_inc_refs(98,2521
static inline unsigned int alisp_dec_refs(105,2663
struct alisp_object_pair 112,2805
	struct list_head list;113,2832
	const char *name;name114,2856
 	struct alisp_object *value;value115,2875
#define ALISP_LEX_BUF_MAX	118,2909
#define ALISP_OBJ_PAIR_HASH_SHIFT 119,2938
#define ALISP_OBJ_PAIR_HASH_SIZE 120,2974
#define ALISP_OBJ_PAIR_HASH_MASK 121,3038
#define ALISP_FREE_OBJ_POOL	122,3100
struct alisp_instance 124,3168
	int verbose:verbose125,3192
	    warning:warning126,3209
	    debug:debug127,3226
	snd_input_t *in;in129,3252
	snd_output_t *out;out130,3270
	snd_output_t *eout;eout131,3290
	snd_output_t *vout;vout132,3330
	snd_output_t *wout;wout133,3372
	snd_output_t *dout;dout134,3414
	int charno;136,3467
	int lineno;137,3480
	int lex_buf[lex_buf138,3493
	int *lex_bufp;lex_bufp139,3526
	char *token_buffer;token_buffer140,3542
	int token_buffer_max;141,3563
	int thistoken;142,3586
	long free_objs;144,3636
	long used_objs;145,3653
	long max_objs;146,3670
	struct list_head free_objs_list;147,3686
	struct list_head used_objs_list[used_objs_list148,3720
	struct list_head setobjs_list[setobjs_list150,3825

alsa-lib-1.0.29/src/alisp/alisp_snd.c,2506
struct acall_table 22,887
	const char *name;name23,908
	struct alisp_object * (*func)func24,927
	void * xfunc;25,1048
	const char *prefix;prefix26,1063
static inline int get_integer(33,1117
static inline const void *get_pointer(get_pointer40,1262
static const char *get_string(get_string47,1420
struct flags 57,1685
	const char *key;key58,1700
	unsigned int mask;59,1718
static unsigned int get_flags(62,1743
static const void *get_ptr(get_ptr100,2504
static struct alisp_object * new_lexpr(121,2932
static struct alisp_object * add_cons(142,3478
static struct alisp_object * add_cons2(181,4413
static struct alisp_object * new_result1(205,4965
static struct alisp_object * new_result2(228,5533
static struct alisp_object * new_result3(247,5941
typedef int (*snd_int_pp_strp_int_t)snd_int_pp_strp_int_t274,6403
typedef int (*snd_int_pp_p_t)snd_int_pp_p_t275,6482
typedef int (*snd_int_p_t)snd_int_p_t276,6540
typedef char * (*snd_str_p_t)snd_str_p_t277,6580
typedef int (*snd_int_intp_t)snd_int_intp_t278,6623
typedef int (*snd_int_str_t)snd_int_str_t279,6664
typedef int (*snd_int_int_strp_t)snd_int_int_strp_t280,6711
typedef void *(*snd_p_p_t)snd_p_p_t281,6767
static struct alisp_object * FA_int_pp_strp_int(283,6810
static struct alisp_object * FA_int_pp_p(309,7660
static struct alisp_object * FA_p_p(332,8304
static struct alisp_object * FA_int_p(359,9119
static struct alisp_object * FA_str_p(373,9562
static struct alisp_object * FA_int_intp(387,10004
static struct alisp_object * FA_int_str(405,10523
static struct alisp_object * FA_int_int_strp(423,11070
static struct alisp_object * FA_card_info(443,11620
static struct alisp_object * create_ctl_elem_id(474,12909
static int parse_ctl_elem_id(485,13691
static struct alisp_object * FA_hctl_find_elem(523,14930
static struct alisp_object * FA_hctl_elem_info(545,15660
static struct alisp_object * FA_hctl_elem_read(625,19180
static struct alisp_object * FA_hctl_elem_write(689,21093
static struct alisp_object * FA_pcm_info(756,23023
static const struct acall_table acall_table[acall_table792,24745
static int acall_compar(818,26376
static struct alisp_object * F_acall(824,26536
static struct alisp_object * F_ahandle(850,27346
static struct alisp_object * F_aerror(865,27750
static int common_error(883,28203
static struct alisp_object * F_snderr(910,28788
static struct alisp_object * F_syserr(923,29093
static const struct intrinsic snd_intrinsics[snd_intrinsics936,29398

alsa-lib-1.0.29/src/alisp/alisp.c,6407
#define alisp_seq_iterator 34,1067
struct alisp_object alsa_lisp_nil;40,1172
struct alisp_object alsa_lisp_t;41,1207
static int get_string_hash(61,2013
static void nomem(71,2171
static void lisp_verbose(76,2236
static void lisp_error(89,2536
static void lisp_warn(102,2840
static void lisp_debug(115,3145
static struct alisp_object * new_object(128,3447
static void free_object(162,4337
static void delete_object(175,4564
static void delete_tree(201,5425
static struct alisp_object * incref_object(212,5698
static struct alisp_object * incref_tree(225,6066
static struct alisp_object * incref_tree_explicit(239,6483
static void free_objects(258,6992
static struct alisp_object * search_object_identifier(297,8247
static struct alisp_object * search_object_string(313,8694
static struct alisp_object * search_object_integer(330,9141
static struct alisp_object * search_object_float(347,9589
static struct alisp_object * search_object_pointer(364,10041
static struct alisp_object * new_integer(381,10507
static struct alisp_object * new_float(396,10911
static struct alisp_object * new_string(411,11315
static struct alisp_object * new_identifier(429,11790
static struct alisp_object * new_pointer(447,12277
static struct alisp_object * new_cons_pointer(462,12688
void alsa_lisp_init_objects(484,13272
void alsa_lisp_init_objects(486,13338
static int xgetc(500,13659
static inline void xungetc(508,13852
static int init_lex(514,13975
static void done_lex(526,14279
static char * extend_buf(531,14369
static int gettoken(545,14718
static struct alisp_object * parse_form(693,18458
static struct alisp_object * quote_object(742,19477
static inline struct alisp_object * parse_quote(770,20101
static struct alisp_object * parse_object(775,20246
static struct alisp_object_pair * set_object_direct(827,21323
static int check_set_object(849,21866
static struct alisp_object_pair * set_object(867,22381
static struct alisp_object * unset_object(903,23225
static struct alisp_object * get_object1(931,23938
static struct alisp_object * get_object(945,24287
static struct alisp_object * replace_object(955,24610
static void dump_objects(980,25262
static const char *obj_type_str(obj_type_str1015,26340
static void print_obj_lists(1030,26774
static void dump_obj_lists(1055,27615
static int count_list(1078,28059
static inline struct alisp_object * car(1090,28240
static inline struct alisp_object * cdr(1098,28404
static struct alisp_object * F_car(1109,28597
static struct alisp_object * F_cdr(1124,28953
static struct alisp_object * F_add(1139,29310
static struct alisp_object * F_concat(1177,30190
static struct alisp_object * F_sub(1218,31082
static struct alisp_object * F_mul(1264,32132
static struct alisp_object * F_div(1300,32970
static struct alisp_object * F_mod(1359,34277
static struct alisp_object * F_lt(1406,35695
static struct alisp_object * F_gt(1445,36870
static struct alisp_object * F_le(1484,38046
static struct alisp_object * F_ge(1523,39224
static struct alisp_object * F_numeq(1562,40401
static struct alisp_object * F_numneq(1601,41582
static struct alisp_object * F_exfun(1615,41878
static void princ_string(1637,42447
static void princ_cons(1657,43258
static void princ_object(1672,43645
static struct alisp_object * F_princ(1706,44392
static struct alisp_object * F_atom(1729,44899
static struct alisp_object * F_cons(1760,45516
static struct alisp_object * F_list(1781,45997
static inline int eq(1814,46764
static int equal(1819,46860
static struct alisp_object * F_eq(1849,47405
static struct alisp_object * F_equal(1872,47941
static struct alisp_object * F_quote(1895,48476
static struct alisp_object * F_and(1907,48745
static struct alisp_object * F_or(1931,49254
static struct alisp_object * F_not(1955,49753
static struct alisp_object * F_cond(1973,50154
static struct alisp_object * F_if(2006,50930
static struct alisp_object * F_when(2031,51477
static struct alisp_object * F_unless(2052,51933
static struct alisp_object * F_while(2072,52357
static struct alisp_object * F_progn(2097,52894
static struct alisp_object * F_prog1(2116,53258
static struct alisp_object * F_prog2(2140,53711
static struct alisp_object * F_set(2166,54182
static struct alisp_object * F_unset(2191,54819
static struct alisp_object * F_setq(2206,55205
static struct alisp_object * F_unsetq(2238,55940
static struct alisp_object * F_defun(2259,56407
static struct alisp_object * eval_func(2296,57475
struct alisp_object * F_gc(2379,59301
struct alisp_object * F_path(2389,59547
struct alisp_object * F_include(2411,60086
struct alisp_object * F_string_to_integer(2432,60613
struct alisp_object * F_string_to_float(2454,61239
static int append_to_string(2472,61772
static int format_parse_char(2494,62162
static int format_parse_integer(2506,62459
static int format_parse_float(2527,63012
static int format_parse_string(2548,63557
struct alisp_object * F_format(2561,63931
struct alisp_object * F_compare_strings(2660,66267
struct alisp_object * F_assoc(2750,68834
struct alisp_object * F_rassoc(2780,69527
struct alisp_object * F_assq(2810,70216
struct alisp_object * F_nth(2840,70908
struct alisp_object * F_rassq(2877,71791
static struct alisp_object * F_dump_memory(2904,72447
static struct alisp_object * F_stat_memory(2923,73017
static struct alisp_object * F_check_memory(2937,73647
static struct alisp_object * F_dump_objects(2948,73971
struct intrinsic 2967,74544
	const char *name;name2968,74563
	struct alisp_object * (*func)func2969,74582
static const struct intrinsic intrinsics[intrinsics2972,74679
static int compar(3040,76247
static inline struct alisp_object * eval_cons1(3046,76390
static struct alisp_object * F_funcall(3082,77377
static inline struct alisp_object * eval_cons(3099,77908
static struct alisp_object * eval(3117,78339
static struct alisp_object * F_eval(3139,78814
static int alisp_include_file(3148,78992
int alsa_lisp(3199,80159
void alsa_lisp_free(3261,81739
struct alisp_cfg *alsa_lisp_default_cfg(alsa_lisp_default_cfg3270,81893
void alsa_lisp_default_cfg_free(3298,82479
int alsa_lisp_function(3306,82637
void alsa_lisp_result_free(3423,85215
int alsa_lisp_seq_first(3429,85353
int alsa_lisp_seq_next(3441,85586
int alsa_lisp_seq_count(3452,85765
int alsa_lisp_seq_integer(3463,85924
int alsa_lisp_seq_pointer(3474,86177

alsa-lib-1.0.29/src/socket.c,53
int snd_send_fd(43,1284
int snd_receive_fd(76,1975

alsa-lib-1.0.29/src/async.c,421
static int snd_async_signo;33,1134
void snd_async_init(35,1163
void snd_async_init(37,1221
static const int snd_async_signo 47,1432
static void snd_async_handler(52,1521
int snd_async_add_handler(94,3190
int snd_async_del_handler(131,4122
int snd_async_handler_get_signo(179,5304
int snd_async_handler_get_fd(190,5615
void *snd_async_handler_get_callback_private(snd_async_handler_get_callback_private201,5909

alsa-lib-1.0.29/src/shmarea.c,373
struct snd_shm_area 31,1038
	struct list_head list;32,1060
	int shmid;33,1084
	void *ptr;ptr34,1096
	int share;35,1108
struct snd_shm_area *snd_shm_area_create(snd_shm_area_create50,1479
struct snd_shm_area *snd_shm_area_share(snd_shm_area_share69,1963
int snd_shm_area_destroy(85,2372
void snd_shm_area_destructor(97,2565
void snd_shm_area_destructor(99,2631

alsa-lib-1.0.29/src/names.c,62
int snd_names_list(42,1311
void snd_names_list_free(53,1606

alsa-lib-1.0.29/src/confmisc.c,937
int snd_config_get_bool_ascii(88,3382
		const char str[str92,3473
		int val;93,3494
int snd_config_get_bool(116,3972
int snd_config_get_ctl_iface_ascii(150,4726
int snd_config_get_ctl_iface(173,5348
int snd_func_getenv(225,6534
int snd_func_igetenv(325,8976
int snd_func_concat(376,10249
static int snd_func_iops(452,11920
int snd_func_iadd(531,13767
int snd_func_imul(557,14586
int snd_func_datadir(582,15397
static int open_ctl(597,15807
static int string_from_integer(606,15995
int snd_func_private_string(636,16731
int snd_determine_driver(664,17458
int snd_func_private_card_driver(714,18676
static int parse_card(744,19434
int snd_func_card_inum(790,20577
int snd_func_card_driver(825,21559
int snd_func_card_id(862,22595
int snd_func_card_name(914,23982
int snd_func_pcm_id(971,25502
int snd_func_pcm_args_by_class(1055,27814
int snd_func_private_pcm_subdevice(1167,30541
int snd_func_refer(1227,32259

alsa-lib-1.0.29/src/conf.c,6973
static pthread_mutex_t snd_config_update_mutex;430,9817
static pthread_once_t snd_config_update_mutex_once 431,9865
struct _snd_config 434,9945
	char *id;id435,9966
	snd_config_type_t type;436,9977
		long integer;438,10011
		long long integer64;439,10027
		char *string;string440,10050
		double real;441,10066
		const void *ptr;ptr442,10081
			struct list_head fields;444,10111
			int join;445,10139
		} compound;446,10152
	} u;447,10166
	struct list_head list;448,10172
	snd_config_t *parent;parent449,10196
	int hop;450,10219
struct filedesc 453,10233
	char *name;name454,10251
	snd_input_t *in;in455,10264
	unsigned int line,456,10282
	unsigned int line, column;456,10282
	struct filedesc *next;next457,10310
#define LOCAL_ERROR	460,10338
#define LOCAL_UNTERMINATED_STRING 462,10375
#define LOCAL_UNTERMINATED_QUOTE	463,10428
#define LOCAL_UNEXPECTED_CHAR	464,10479
#define LOCAL_UNEXPECTED_EOF	465,10528
	struct filedesc *current;current468,10594
	int unget;469,10621
	int ch;470,10633
} input_t;471,10642
static void snd_config_init_mutex(475,10678
static inline void snd_config_lock(485,10932
static inline void snd_config_unlock(491,11094
static inline void snd_config_lock(498,11198
static inline void snd_config_unlock(499,11243
static int safe_strtoll(503,11299
int safe_strtol(518,11551
static int safe_strtod(534,11770
static int get_char(578,12588
static void unget_char(613,13139
static int get_char_skip_comments(622,13320
static int get_nonwhite(678,14353
static int get_quotedchar(696,14576
#define LOCAL_STR_BUFSIZE	733,15078
struct local_string 734,15107
	char *buf;buf735,15129
	size_t alloc;736,15141
	size_t idx;737,15156
	char tmpbuf[tmpbuf738,15169
static void init_local_string(741,15206
static void free_local_string(748,15344
static int add_char_local_string(754,15445
static char *copy_local_string(copy_local_string775,15883
static int get_freestring(785,16057
static int get_delimstring(844,16927
static int get_string(878,17531
static int _snd_config_make(909,18032
static int _snd_config_make_add(933,18438
static int _snd_config_search(948,18805
static int parse_value(967,19270
static int parse_array_def(1046,21074
static int parse_array_defs(1116,22344
static int parse_def(1133,22688
	enum {MERGE_CREATE,MERGE_CREATE1139,22827
	enum {MERGE_CREATE, MERGE,1139,22827
	enum {MERGE_CREATE, MERGE, OVERRIDE,1139,22827
	enum {MERGE_CREATE, MERGE, OVERRIDE, DONT_OVERRIDE}DONT_OVERRIDE1139,22827
static int parse_defs(1277,25358
static void string_print(1294,25705
static int _snd_config_save_node_value(1382,27259
static void id_print(1418,28147
static int _snd_config_save_children(1428,28369
int snd_config_substitute(1485,29909
int snd_config_get_type_ascii(1531,31268
snd_config_type_t snd_config_get_type(1565,31982
int snd_config_get_id(1586,32671
int snd_config_set_id(1608,33289
int snd_config_top(1650,34175
static int snd_config_load1(1656,34302
int snd_config_load(1733,36070
int snd_config_load_override(1748,36624
int snd_config_add(1777,37481
int snd_config_remove(1806,38335
int snd_config_delete(1833,38984
int snd_config_delete_compound_members(1883,40107
int snd_config_make(1922,41194
int snd_config_make_integer(1956,41974
int snd_config_make_integer64(1981,42645
int snd_config_make_real(2003,43272
int snd_config_make_string(2028,43926
int snd_config_make_pointer(2050,44550
int snd_config_make_compound(2093,45807
int snd_config_imake_integer(2123,46625
int snd_config_imake_integer64(2153,47447
int snd_config_imake_real(2180,48235
int snd_config_imake_string(2210,49071
int snd_config_imake_pointer(2247,50007
int snd_config_set_integer(2272,50592
int snd_config_set_integer64(2295,51144
int snd_config_set_real(2315,51664
int snd_config_set_string(2341,52318
int snd_config_set_pointer(2372,53068
int snd_config_set_ascii(2406,54151
int snd_config_get_integer(2466,55306
int snd_config_get_integer64(2489,55866
int snd_config_get_real(2509,56394
int snd_config_get_ireal(2532,57013
int snd_config_get_string(2567,58027
int snd_config_get_pointer(2588,58611
int snd_config_get_ascii(2624,59723
int snd_config_test_id(2698,61397
int snd_config_save(2725,62075
#define SND_CONFIG_SEARCH(2740,62381
#define SND_CONFIG_SEARCHA(2762,62872
#define SND_CONFIG_SEARCHV(2789,63508
#define SND_CONFIG_SEARCHVA(2811,63891
#define SND_CONFIG_SEARCH_ALIAS(2833,64287
int snd_config_search(2920,66720
int snd_config_searcha(2975,68386
int snd_config_searchv(3011,69671
int snd_config_searchva(3040,70861
int snd_config_search_alias(3071,72252
int snd_config_search_hooks(3103,73521
int snd_config_searcha_hooks(3136,74813
int snd_config_searchva_hooks(3172,76281
int snd_config_search_alias_hooks(3201,77438
#define ALSA_CONFIG_PATH_VAR 3211,77777
#define ALSA_CONFIG_PATH_DEFAULT 3214,77891
snd_config_t *snd_config snd_config3239,78830
struct finfo 3242,78883
	char *name;name3243,78898
	dev_t dev;3244,78911
	ino_t ino;3245,78923
	time_t mtime;3246,78935
struct _snd_config_update 3249,78954
	unsigned int count;3250,78982
	struct finfo *finfo;finfo3251,79003
static snd_config_update_t *snd_config_global_update snd_config_global_update3255,79053
static int snd_config_hooks_call(3257,79115
static int snd_config_hooks(3350,81501
static int config_filename_filter(3388,82294
static int config_file_open(3407,82595
int snd_config_hook_load(3436,83531
#define SORTFUNC	3521,85714
#define SORTFUNC	3523,85749
int snd_config_hook_load_for_all_cards(3582,87498
int snd_config_update_r(3658,89992
int snd_config_update(3812,93413
int snd_config_update_free(3827,93762
int snd_config_update_free_global(3849,94260
snd_config_iterator_t snd_config_iterator_first(3881,95095
snd_config_iterator_t snd_config_iterator_next(3901,95726
snd_config_iterator_t snd_config_iterator_end(3919,96209
snd_config_t *snd_config_iterator_entry(snd_config_iterator_entry3933,96646
typedef enum _snd_config_walk_pass 3939,96798
	SND_CONFIG_WALK_PASS_PRE,3940,96835
	SND_CONFIG_WALK_PASS_POST,3941,96862
	SND_CONFIG_WALK_PASS_LEAF,3942,96890
} snd_config_walk_pass_t;3943,96918
typedef int (*snd_config_walk_callback_t)snd_config_walk_callback_t3949,97083
static int snd_config_walk(3956,97278
static int _snd_config_copy(3998,98296
int snd_config_copy(4080,100180
static int _snd_config_expand(4086,100315
static int _snd_config_evaluate(4172,102090
int snd_config_evaluate(4290,105374
static int load_defaults(4298,105678
static void skip_blank(4336,106616
static int parse_char(4353,106809
static int parse_id(4400,107371
static int parse_string(4421,107619
static int parse_arg(4472,108523
static int parse_args(4522,109383
int snd_config_expand(4698,113847
int snd_config_search_definition(4780,116406
void snd_config_set_hop(4812,117188
int snd_config_check_hop(4817,117264
void _snd_config_end(4832,117554
static void _snd_config_end(4834,117612

alsa-lib-1.0.29/src/rawmidi/rawmidi_hw.c,807
const char *_snd_module_rawmidi_hw _snd_module_rawmidi_hw34,1153
#define SNDRV_FILE_RAWMIDI	37,1202
#define SNDRV_RAWMIDI_VERSION_MAX	38,1265
	int open;42,1368
	int fd;43,1379
	int card,44,1388
	int card, device,44,1388
	int card, device, subdevice;44,1388
} snd_rawmidi_hw_t;45,1418
static int snd_rawmidi_hw_close(48,1446
static int snd_rawmidi_hw_nonblock(64,1698
static int snd_rawmidi_hw_info(84,2110
static int snd_rawmidi_hw_params(95,2405
static int snd_rawmidi_hw_status(106,2714
static int snd_rawmidi_hw_drop(117,3023
static int snd_rawmidi_hw_drain(128,3286
static ssize_t snd_rawmidi_hw_write(139,3552
static ssize_t snd_rawmidi_hw_read(149,3799
static const snd_rawmidi_ops_t snd_rawmidi_hw_ops 159,4038
int snd_rawmidi_hw_open(172,4389
int _snd_rawmidi_hw_open(316,7509

alsa-lib-1.0.29/src/rawmidi/rawmidi_virt.c,1140
const char *_snd_module_rawmidi_virt _snd_module_rawmidi_virt34,1105
	int open;40,1193
	snd_seq_t *handle;handle42,1205
	int port;43,1225
	snd_midi_event_t *midi_event;midi_event45,1237
	snd_seq_event_t *in_event;in_event47,1269
	int in_buf_size;48,1297
	int in_buf_ofs;49,1315
	char *in_buf_ptr;in_buf_ptr50,1332
	char in_tmp_buf[in_tmp_buf51,1351
	snd_seq_event_t out_event;53,1374
	int pending;54,1402
} snd_rawmidi_virtual_t;55,1416
static int snd_rawmidi_virtual_close(62,1589
static int snd_rawmidi_virtual_nonblock(75,1867
static int snd_rawmidi_virtual_info(82,2051
static int snd_rawmidi_virtual_input_params(100,2553
static int snd_rawmidi_virtual_output_params(120,3126
static int snd_rawmidi_virtual_params(139,3672
static int snd_rawmidi_virtual_status(150,4023
static int snd_rawmidi_virtual_drop(158,4255
static int snd_rawmidi_virtual_drain(173,4661
static ssize_t snd_rawmidi_virtual_write(191,5108
static ssize_t snd_rawmidi_virtual_read(236,6190
static const snd_rawmidi_ops_t snd_rawmidi_virtual_ops 281,7439
int snd_rawmidi_virtual_open(313,8294
int _snd_rawmidi_virtual_open(398,10144

alsa-lib-1.0.29/src/rawmidi/rawmidi_symbols.c,143
static const char **snd_rawmidi_open_objects[snd_rawmidi_open_objects26,952
void *snd_rawmidi_open_symbols(snd_rawmidi_open_symbols31,1061

alsa-lib-1.0.29/src/rawmidi/rawmidi.c,2600
static int snd_rawmidi_params_default(150,5184
static int snd_rawmidi_open_conf(160,5419
static int snd_rawmidi_open_noupdate(279,8516
int snd_rawmidi_open(305,9401
int snd_rawmidi_open_lconf(328,10178
int snd_rawmidi_close(343,10641
const char *snd_rawmidi_name(snd_rawmidi_name363,11123
snd_rawmidi_type_t snd_rawmidi_type(376,11404
snd_rawmidi_stream_t snd_rawmidi_stream(389,11712
int snd_rawmidi_poll_descriptors_count(400,11961
int snd_rawmidi_poll_descriptors(413,12261
int snd_rawmidi_poll_descriptors_revents(432,12855
int snd_rawmidi_nonblock(451,13425
size_t snd_rawmidi_info_sizeof(469,13891
int snd_rawmidi_info_malloc(482,14226
void snd_rawmidi_info_free(498,14615
void snd_rawmidi_info_copy(509,14873
unsigned int snd_rawmidi_info_get_device(520,15130
unsigned int snd_rawmidi_info_get_subdevice(531,15385
snd_rawmidi_stream_t snd_rawmidi_info_get_stream(542,15656
int snd_rawmidi_info_get_card(553,15909
unsigned int snd_rawmidi_info_get_flags(564,16129
const char *snd_rawmidi_info_get_id(snd_rawmidi_info_get_id575,16402
const char *snd_rawmidi_info_get_name(snd_rawmidi_info_get_name586,16670
const char *snd_rawmidi_info_get_subdevice_name(snd_rawmidi_info_get_subdevice_name597,16930
unsigned int snd_rawmidi_info_get_subdevices_count(608,17213
unsigned int snd_rawmidi_info_get_subdevices_avail(619,17514
void snd_rawmidi_info_set_device(630,17778
void snd_rawmidi_info_set_subdevice(641,18031
void snd_rawmidi_info_set_stream(652,18300
int snd_rawmidi_info(664,18640
size_t snd_rawmidi_params_sizeof(675,18930
int snd_rawmidi_params_malloc(688,19271
void snd_rawmidi_params_free(704,19681
void snd_rawmidi_params_copy(715,19955
int snd_rawmidi_params_set_buffer_size(729,20329
size_t snd_rawmidi_params_get_buffer_size(745,20839
int snd_rawmidi_params_set_avail_min(758,21190
size_t snd_rawmidi_params_get_avail_min(774,21710
int snd_rawmidi_params_set_no_active_sensing(788,22149
int snd_rawmidi_params_get_no_active_sensing(803,22669
int snd_rawmidi_params(815,23024
int snd_rawmidi_params_current(835,23605
size_t snd_rawmidi_status_sizeof(849,24021
int snd_rawmidi_status_malloc(862,24359
void snd_rawmidi_status_free(878,24756
void snd_rawmidi_status_copy(889,25030
void snd_rawmidi_status_get_tstamp(900,25304
size_t snd_rawmidi_status_get_avail(911,25664
size_t snd_rawmidi_status_get_xruns(922,25905
int snd_rawmidi_status(934,26232
int snd_rawmidi_drop(946,26562
int snd_rawmidi_drain(960,26904
ssize_t snd_rawmidi_write(972,27183
ssize_t snd_rawmidi_read(986,27606
int snd_rawmidi_conf_generic_id(995,27861

alsa-lib-1.0.29/src/rawmidi/rawmidi_local.h,696
	int (*close)close28,979
	int (*nonblock)nonblock29,1018
	int (*info)info30,1074
	int (*params)params31,1138
	int (*status)status32,1208
	int (*drop)drop33,1278
	int (*drain)drain34,1316
	ssize_t (*write)write35,1355
	ssize_t (*read)read36,1431
} snd_rawmidi_ops_t;37,1500
struct _snd_rawmidi 39,1522
	void *dl_handle;dl_handle40,1544
	char *name;name41,1562
	snd_rawmidi_type_t type;42,1575
	snd_rawmidi_stream_t stream;43,1601
	int mode;44,1631
	int poll_fd;45,1642
	const snd_rawmidi_ops_t *ops;ops46,1656
	void *private_data;private_data47,1687
	size_t buffer_size;48,1708
	size_t avail_min;49,1729
	unsigned int no_active_sensing:no_active_sensing50,1748

alsa-lib-1.0.29/src/input.c,1495
typedef struct _snd_input_ops 38,1154
	int (*close)close39,1186
	int (*scan)scan40,1221
	char *(*(gets)41,1289
	int (*getch)getch42,1351
	int (*ungetch)ungetch43,1386
} snd_input_ops_t;44,1430
struct _snd_input 46,1450
	snd_input_type_t type;47,1470
	const snd_input_ops_t *ops;ops48,1494
	void *private_data;private_data49,1523
int snd_input_close(58,1708
int snd_input_scanf(74,2138
char *snd_input_gets(snd_input_gets94,2757
int snd_input_getc(104,3053
int snd_input_ungetc(115,3355
typedef struct _snd_input_stdio 121,3466
	int close;122,3500
	FILE *fp;fp123,3512
} snd_input_stdio_t;124,3523
static int snd_input_stdio_close(126,3545
static int snd_input_stdio_scan(135,3734
static char *snd_input_stdio_gets(snd_input_stdio_gets142,3968
static int snd_input_stdio_getc(148,4146
static int snd_input_stdio_ungetc(154,4277
static const snd_input_ops_t snd_input_stdio_ops 160,4422
int snd_input_stdio_attach(179,5155
int snd_input_stdio_open(209,5981
typedef struct _snd_input_buffer 225,6270
	unsigned char *buf;buf226,6305
	unsigned char *ptr;ptr227,6326
	size_t size;228,6347
} snd_input_buffer_t;229,6361
static int snd_input_buffer_close(231,6384
static int snd_input_buffer_scan(239,6540
static char *snd_input_buffer_gets(snd_input_buffer_gets248,6858
static int snd_input_buffer_getc(266,7245
static int snd_input_buffer_ungetc(275,7433
static const snd_input_ops_t snd_input_buffer_ops 286,7686
int snd_input_buffer_open(306,8420

alsa-lib-1.0.29/src/error.c,563
static const char *snd_error_codes[snd_error_codes40,1211
const char *snd_strerror(snd_strerror51,1529
#define TLS_PFX	65,1887
#define TLS_PFX	67,1919
static TLS_PFX snd_local_error_handler_t local_error 71,1961
snd_local_error_handler_t snd_lib_error_set_local(78,2166
static void snd_lib_error_default(98,2831
snd_lib_error_handler_t snd_lib_error 120,3364
int snd_lib_error_set_handler(129,3676
const char *snd_asoundlib_version(snd_asoundlib_version143,4059
static void snd_err_msg_default(152,4182
snd_lib_error_handler_t snd_err_msg 177,4779

alsa-lib-1.0.29/src/control/hcontrol.c,2469
#define NOT_FOUND 57,1864
int snd_hctl_open(70,2252
int snd_hctl_open_ctl(89,2663
int snd_hctl_close(111,3136
const char *snd_hctl_name(snd_hctl_name130,3518
int snd_hctl_nonblock(142,3782
int snd_hctl_async(157,4175
int snd_hctl_poll_descriptors_count(168,4424
int snd_hctl_poll_descriptors(181,4746
int snd_hctl_poll_descriptors_revents(195,5176
static int snd_hctl_throw_event(201,5391
static int snd_hctl_elem_throw_event(209,5567
static int snd_hctl_compare_mixer_priority_lookup(217,5729
static int get_compare_weight(232,6055
static int _snd_hctl_find_elem(320,7663
static int snd_hctl_elem_add(346,8140
static void snd_hctl_elem_remove(382,9058
int snd_hctl_free(402,9564
static snd_hctl_t *compare_hctl;compare_hctl413,9777
static int hctl_compare(414,9810
static void snd_hctl_sort(419,9984
int snd_hctl_set_compare(448,10721
int snd_hctl_compare_fast(462,11135
static int snd_hctl_compare_default(468,11262
snd_hctl_elem_t *snd_hctl_first_elem(snd_hctl_first_elem498,11940
snd_hctl_elem_t *snd_hctl_last_elem(snd_hctl_last_elem511,12231
snd_hctl_elem_t *snd_hctl_elem_next(snd_hctl_elem_next524,12515
snd_hctl_elem_t *snd_hctl_elem_prev(snd_hctl_elem_prev537,12824
snd_hctl_elem_t *snd_hctl_find_elem(snd_hctl_find_elem551,13193
int snd_hctl_load(565,13553
void snd_hctl_set_callback(629,15106
void snd_hctl_set_callback_private(640,15363
void *snd_hctl_get_callback_private(snd_hctl_get_callback_private651,15622
unsigned int snd_hctl_get_count(662,15841
int snd_hctl_wait(675,16217
snd_ctl_t *snd_hctl_ctl(snd_hctl_ctl724,17401
static int snd_hctl_handle_event(729,17467
int snd_hctl_handle_events(780,18761
int snd_hctl_elem_info(806,19301
int snd_hctl_elem_read(821,19669
int snd_hctl_elem_write(838,20106
int snd_hctl_elem_tlv_read(854,20531
int snd_hctl_elem_tlv_write(870,20989
int snd_hctl_elem_tlv_command(886,21419
snd_hctl_t *snd_hctl_elem_get_hctl(snd_hctl_elem_get_hctl899,21725
void snd_hctl_elem_get_id(910,21986
unsigned int snd_hctl_elem_get_numid(921,22255
snd_ctl_elem_iface_t snd_hctl_elem_get_interface(932,22534
unsigned int snd_hctl_elem_get_device(943,22819
unsigned int snd_hctl_elem_get_subdevice(954,23100
const char *snd_hctl_elem_get_name(snd_hctl_elem_get_name965,23377
unsigned int snd_hctl_elem_get_index(976,23659
void snd_hctl_elem_set_callback(987,23885
void snd_hctl_elem_set_callback_private(998,24139
void * snd_hctl_elem_get_callback_private(1009,24388

alsa-lib-1.0.29/src/control/setup.c,726
	unsigned int lock:lock42,1388
	unsigned int preserve:preserve43,1411
	snd_ctl_elem_id_t *id;id44,1438
	snd_ctl_elem_info_t *info;info45,1462
	snd_ctl_elem_value_t *val;val46,1490
	snd_ctl_elem_value_t *mask;mask47,1518
	snd_ctl_elem_value_t *old;old48,1547
	struct list_head list;49,1575
} snd_sctl_elem_t;50,1599
struct _snd_sctl 52,1619
	int mode;53,1638
	snd_ctl_t *ctl;ctl54,1649
	struct list_head elems;55,1666
static int free_elems(59,1719
int snd_sctl_install(83,2359
int snd_sctl_remove(181,4999
static int snd_config_get_ctl_elem_enumerated(216,6094
static int snd_config_get_ctl_elem_value(247,6831
static int add_elem(399,10581
int snd_sctl_build(604,15785
int snd_sctl_free(645,16686

alsa-lib-1.0.29/src/control/ctl_symbols_list.c,109
&_snd_module_control_shm,_snd_module_control_shm1,0
&_snd_module_control_ext,_snd_module_control_ext2,26

alsa-lib-1.0.29/src/control/control.c,9326
const char *snd_ctl_name(snd_ctl_name62,1879
snd_ctl_type_t snd_ctl_type(75,2114
int snd_ctl_close(89,2389
int snd_ctl_nonblock(109,2894
int snd_ctl_new(121,3101
int snd_ctl_async(145,3651
int snd_ctl_poll_descriptors_count(161,3959
int snd_ctl_poll_descriptors(178,4357
int snd_ctl_poll_descriptors_revents(201,4967
int snd_ctl_subscribe_events(219,5564
int snd_ctl_card_info(232,5857
int snd_ctl_elem_list(244,6174
int snd_ctl_elem_info(257,6527
int snd_ctl_elem_add_integer(273,6996
int snd_ctl_elem_add_integer64(312,8090
int snd_ctl_elem_add_boolean(347,9050
int snd_ctl_elem_add_enumerated(394,10815
int snd_ctl_elem_add_iec958(438,11819
int snd_ctl_elem_remove(456,12278
int snd_ctl_elem_read(468,12607
int snd_ctl_elem_write(482,13018
static int snd_ctl_tlv_do(488,13211
int snd_ctl_elem_tlv_read(526,14051
int snd_ctl_elem_tlv_write(555,14912
int snd_ctl_elem_tlv_command(571,15431
int snd_ctl_elem_lock(584,15845
int snd_ctl_elem_unlock(596,16126
int snd_ctl_hwdep_next_device(608,16465
int snd_ctl_hwdep_info(620,16802
int snd_ctl_pcm_next_device(632,17127
int snd_ctl_pcm_info(644,17431
int snd_ctl_pcm_prefer_subdevice(656,17762
int snd_ctl_rawmidi_next_device(668,18092
int snd_ctl_rawmidi_info(680,18412
int snd_ctl_rawmidi_prefer_subdevice(692,18767
int snd_ctl_set_power_state(704,19118
int snd_ctl_get_power_state(718,19453
int snd_ctl_read(732,19796
int snd_ctl_wait(744,20138
int snd_async_add_ctl_handler(787,21185
snd_ctl_t *snd_async_handler_get_ctl(snd_async_handler_get_ctl817,21959
static const char *const build_in_ctls[build_in_ctls823,22104
static int snd_ctl_open_conf(827,22172
static int snd_ctl_open_noupdate(948,25127
int snd_ctl_open(969,25739
int snd_ctl_open_lconf(987,26255
int snd_ctl_open_fallback(1003,26787
#define TYPE(1017,27138
#define IFACE(1018,27183
#define IFACE1(1019,27230
#define EVENT(1020,27281
static const char *const snd_ctl_elem_type_names[snd_ctl_elem_type_names1022,27324
static const char *const snd_ctl_elem_iface_names[snd_ctl_elem_iface_names1032,27494
static const char *const snd_ctl_event_type_names[snd_ctl_event_type_names1042,27662
const char *snd_ctl_elem_type_name(snd_ctl_elem_type_name1052,27866
const char *snd_ctl_elem_iface_name(snd_ctl_elem_iface_name1063,28175
const char *snd_ctl_event_type_name(snd_ctl_event_type_name1074,28445
int snd_ctl_elem_list_alloc_space(1086,28793
void snd_ctl_elem_list_free_space(1102,29168
unsigned int snd_ctl_event_elem_get_mask(1114,29421
void snd_ctl_event_elem_get_id(1126,29735
unsigned int snd_ctl_event_elem_get_numid(1138,30053
snd_ctl_elem_iface_t snd_ctl_event_elem_get_interface(1150,30381
unsigned int snd_ctl_event_elem_get_device(1162,30715
unsigned int snd_ctl_event_elem_get_subdevice(1174,31045
const char *snd_ctl_event_elem_get_name(snd_ctl_event_elem_get_name1186,31371
unsigned int snd_ctl_event_elem_get_index(1198,31702
int _snd_ctl_poll_descriptor(1206,31885
size_t snd_ctl_elem_id_sizeof(1217,32052
int snd_ctl_elem_id_malloc(1227,32288
void snd_ctl_elem_id_free(1240,32552
void snd_ctl_elem_id_clear(1249,32716
void snd_ctl_elem_id_copy(1259,32942
unsigned int snd_ctl_elem_id_get_numid(1270,33212
snd_ctl_elem_iface_t snd_ctl_elem_id_get_interface(1281,33463
unsigned int snd_ctl_elem_id_get_device(1292,33720
unsigned int snd_ctl_elem_id_get_subdevice(1303,33973
const char *snd_ctl_elem_id_get_name(snd_ctl_elem_id_get_name1314,34214
unsigned int snd_ctl_elem_id_get_index(1325,34460
void snd_ctl_elem_id_set_numid(1336,34720
void snd_ctl_elem_id_set_interface(1347,34978
void snd_ctl_elem_id_set_device(1358,35242
void snd_ctl_elem_id_set_subdevice(1369,35502
void snd_ctl_elem_id_set_name(1380,35750
void snd_ctl_elem_id_set_index(1391,36024
size_t snd_ctl_card_info_sizeof(1401,36211
int snd_ctl_card_info_malloc(1411,36453
void snd_ctl_card_info_free(1424,36725
void snd_ctl_card_info_clear(1433,36895
void snd_ctl_card_info_copy(1443,37129
int snd_ctl_card_info_get_card(1454,37361
const char *snd_ctl_card_info_get_id(snd_ctl_card_info_get_id1465,37576
const char *snd_ctl_card_info_get_driver(snd_ctl_card_info_get_driver1476,37811
const char *snd_ctl_card_info_get_name(snd_ctl_card_info_get_name1487,38040
const char *snd_ctl_card_info_get_longname(snd_ctl_card_info_get_longname1498,38275
const char *snd_ctl_card_info_get_mixername(snd_ctl_card_info_get_mixername1509,38520
const char *snd_ctl_card_info_get_components(snd_ctl_card_info_get_components1520,38777
size_t snd_ctl_event_sizeof(1530,38984
int snd_ctl_event_malloc(1540,39214
void snd_ctl_event_free(1553,39470
void snd_ctl_event_clear(1562,39628
void snd_ctl_event_copy(1572,39846
snd_ctl_event_type_t snd_ctl_event_get_type(1583,40052
size_t snd_ctl_elem_list_sizeof(1593,40238
int snd_ctl_elem_list_malloc(1603,40480
void snd_ctl_elem_list_free(1616,40752
void snd_ctl_elem_list_clear(1625,40922
void snd_ctl_elem_list_copy(1635,41156
void snd_ctl_elem_list_set_offset(1646,41490
unsigned int snd_ctl_elem_list_get_used(1657,41760
unsigned int snd_ctl_elem_list_get_count(1668,42083
void snd_ctl_elem_list_get_id(1680,42415
unsigned int snd_ctl_elem_list_get_numid(1693,42808
snd_ctl_elem_iface_t snd_ctl_elem_list_get_interface(1706,43196
unsigned int snd_ctl_elem_list_get_device(1719,43590
unsigned int snd_ctl_elem_list_get_subdevice(1732,43980
const char *snd_ctl_elem_list_get_name(snd_ctl_elem_list_get_name1745,44358
unsigned int snd_ctl_elem_list_get_index(1758,44741
size_t snd_ctl_elem_info_sizeof(1769,44983
int snd_ctl_elem_info_malloc(1779,45225
void snd_ctl_elem_info_free(1792,45497
void snd_ctl_elem_info_clear(1801,45667
void snd_ctl_elem_info_copy(1811,45901
snd_ctl_elem_type_t snd_ctl_elem_info_get_type(1822,46151
int snd_ctl_elem_info_is_readable(1833,46440
int snd_ctl_elem_info_is_writable(1844,46755
int snd_ctl_elem_info_is_volatile(1855,47109
int snd_ctl_elem_info_is_inactive(1866,47413
int snd_ctl_elem_info_is_locked(1877,47741
int snd_ctl_elem_info_is_owner(1888,48054
int snd_ctl_elem_info_is_user(1899,48359
int snd_ctl_elem_info_is_tlv_readable(1910,48682
int snd_ctl_elem_info_is_tlv_writable(1921,49018
int snd_ctl_elem_info_is_tlv_commandable(1932,49379
int snd_ctl_elem_info_is_indirect(1943,49758
pid_t snd_ctl_elem_info_get_owner(1955,50083
unsigned int snd_ctl_elem_info_get_count(1966,50326
long snd_ctl_elem_info_get_min(1977,50587
long snd_ctl_elem_info_get_max(1989,50899
long snd_ctl_elem_info_get_step(2001,51199
long long snd_ctl_elem_info_get_min64(2013,51515
long long snd_ctl_elem_info_get_max64(2025,51840
long long snd_ctl_elem_info_get_step64(2037,52153
unsigned int snd_ctl_elem_info_get_items(2049,52491
void snd_ctl_elem_info_set_item(2061,52817
const char *snd_ctl_elem_info_get_item_name(snd_ctl_elem_info_get_item_name2072,53112
int INTERNAL(2085,53507
int INTERNAL(2107,54147
void snd_ctl_elem_info_get_id(2124,54684
unsigned int snd_ctl_elem_info_get_numid(2135,54959
snd_ctl_elem_iface_t snd_ctl_elem_info_get_interface(2146,55244
unsigned int snd_ctl_elem_info_get_device(2157,55535
unsigned int snd_ctl_elem_info_get_subdevice(2168,55822
const char *snd_ctl_elem_info_get_name(snd_ctl_elem_info_get_name2179,56105
unsigned int snd_ctl_elem_info_get_index(2190,56393
void snd_ctl_elem_info_set_id(2201,56649
void snd_ctl_elem_info_set_numid(2212,56927
void snd_ctl_elem_info_set_interface(2223,57218
void snd_ctl_elem_info_set_device(2234,57515
void snd_ctl_elem_info_set_subdevice(2245,57808
void snd_ctl_elem_info_set_name(2256,58097
void snd_ctl_elem_info_set_index(2267,58415
size_t snd_ctl_elem_value_sizeof(2277,58610
int snd_ctl_elem_value_malloc(2287,58855
void snd_ctl_elem_value_free(2300,59131
void snd_ctl_elem_value_clear(2309,59304
void snd_ctl_elem_value_copy(2319,59542
int snd_ctl_elem_value_compare(2331,59883
void snd_ctl_elem_value_get_id(2342,60213
unsigned int snd_ctl_elem_value_get_numid(2353,60492
snd_ctl_elem_iface_t snd_ctl_elem_value_get_interface(2364,60781
unsigned int snd_ctl_elem_value_get_device(2375,61076
unsigned int snd_ctl_elem_value_get_subdevice(2386,61367
const char *snd_ctl_elem_value_get_name(snd_ctl_elem_value_get_name2397,61654
unsigned int snd_ctl_elem_value_get_index(2408,61946
void snd_ctl_elem_value_set_id(2419,62206
void snd_ctl_elem_value_set_numid(2430,62488
void snd_ctl_elem_value_set_interface(2441,62783
void snd_ctl_elem_value_set_device(2452,63084
void snd_ctl_elem_value_set_subdevice(2463,63381
void snd_ctl_elem_value_set_name(2474,63674
void snd_ctl_elem_value_set_index(2485,63996
int snd_ctl_elem_value_get_boolean(2497,64304
long snd_ctl_elem_value_get_integer(2510,64723
long long snd_ctl_elem_value_get_integer64(2523,65145
unsigned int snd_ctl_elem_value_get_enumerated(2536,65581
unsigned char snd_ctl_elem_value_get_byte(2549,66016
void snd_ctl_elem_value_set_boolean(2562,66401
void snd_ctl_elem_value_set_integer(2574,66740
void snd_ctl_elem_value_set_integer64(2586,67081
void snd_ctl_elem_value_set_enumerated(2598,67432
void snd_ctl_elem_value_set_byte(2610,67782
void snd_ctl_elem_set_bytes(2622,68079
const void * snd_ctl_elem_value_get_bytes(2637,68451
void snd_ctl_elem_value_get_iec958(2648,68746
void snd_ctl_elem_value_set_iec958(2659,69072

alsa-lib-1.0.29/src/control/ctlparse.c,422
static inline long int convert_prange1(37,1223
#define convert_prange1(44,1391
#define check_range(48,1486
static long get_integer(51,1579
static long long get_integer64(79,2033
char *snd_ctl_ascii_elem_id_get(snd_ctl_ascii_elem_id_get114,2690
int __snd_ctl_ascii_elem_id_parse(148,3676
int snd_ctl_ascii_elem_id_parse(264,6544
static int get_ctl_enum_item_index(269,6677
int snd_ctl_ascii_value_parse(309,7701

alsa-lib-1.0.29/src/control/control_ext.c,1403
const char *_snd_module_control_ext _snd_module_control_ext39,1218
static int snd_ctl_ext_close(42,1268
static int snd_ctl_ext_nonblock(51,1434
static int snd_ctl_ext_async(59,1587
static int snd_ctl_ext_subscribe_events(66,1741
static int snd_ctl_ext_card_info(78,2043
static int snd_ctl_ext_elem_list(92,2532
static snd_ctl_ext_key_t get_elem(118,3112
static int snd_ctl_ext_elem_info(129,3373
static int snd_ctl_ext_elem_add(190,4985
static int snd_ctl_ext_elem_replace(196,5122
static int snd_ctl_ext_elem_remove(202,5267
static int snd_ctl_ext_elem_read(208,5406
static int snd_ctl_ext_elem_write(262,6901
static int snd_ctl_ext_elem_lock(315,8398
static int snd_ctl_ext_elem_unlock(321,8533
static int snd_ctl_ext_elem_tlv(327,8672
static int snd_ctl_ext_next_device(372,9949
static int snd_ctl_ext_prefer_subdevice(378,10078
static int snd_ctl_ext_hwdep_info(384,10209
static int snd_ctl_ext_pcm_info(390,10347
static int snd_ctl_ext_rawmidi_info(396,10479
static int snd_ctl_ext_set_power_state(402,10623
static int snd_ctl_ext_get_power_state(408,10762
static int snd_ctl_ext_read(414,10902
static int snd_ctl_ext_poll_descriptors_count(422,11144
static int snd_ctl_ext_poll_descriptors(433,11403
static int snd_ctl_ext_poll_revents(449,11799
static const snd_ctl_ops_t snd_ctl_ext_ops 462,12159
int snd_ctl_ext_create(704,22448
int snd_ctl_ext_delete(735,23106

alsa-lib-1.0.29/src/control/tlv.c,537
#define int_index(40,1269
#define MAX_TLV_RANGE_SIZE	42,1410
int snd_tlv_parse_dB_info(59,2054
int snd_tlv_get_dB_range(129,3773
int snd_tlv_convert_to_dB(200,5463
int snd_tlv_convert_from_dB(289,8009
#define TEMP_TLV_SIZE	401,10771
struct tlv_info 402,10799
	long minval,403,10817
	long minval, maxval;403,10817
	unsigned int *tlv;tlv404,10839
	unsigned int buf[buf405,10859
static int get_tlv_info(409,10904
int snd_ctl_get_dB_range(443,11962
int snd_ctl_convert_to_dB(464,12535
int snd_ctl_convert_from_dB(487,13267

alsa-lib-1.0.29/src/control/namehint.c,1042
struct hint_list 31,1039
	char **list;list32,1058
	unsigned int count;33,1072
	unsigned int allocated;34,1093
	const char *siface;siface35,1118
	snd_ctl_elem_iface_t iface;36,1139
	snd_ctl_t *ctl;ctl37,1168
	snd_ctl_card_info_t *info;info38,1185
	int card;39,1214
	int device;40,1225
	long device_input;41,1238
	long device_output;42,1258
	int stream;43,1279
	int show_all;44,1292
	char *cardname;cardname45,1307
static int hint_list_add(49,1335
static void zero_handler(79,1998
static int get_dev_name1(88,2239
static char *get_dev_name(get_dev_name145,3654
#define BUF_SIZE 209,5228
static int try_config(212,5257
#define IFACE(394,10378
typedef int (*next_devices_t)next_devices_t396,10448
static const next_devices_t next_devices[next_devices398,10500
static int add_card(409,10770
static int get_card_name(478,12411
static int add_software_devices(496,12801
int snd_device_name_hint(546,14360
int snd_device_name_free_hint(649,17258
char *snd_device_name_get_hint(snd_device_name_get_hint677,17873

alsa-lib-1.0.29/src/control/control_hw.c,1528
const char *_snd_module_control_hw _snd_module_control_hw34,1155
#define F_SETSIG 38,1221
#define SNDRV_FILE_CONTROL	42,1268
#define SNDRV_CTL_VERSION_MAX	43,1330
	int card;46,1410
	int fd;47,1421
	unsigned int protocol;48,1430
} snd_ctl_hw_t;49,1454
static int snd_ctl_hw_close(52,1495
static int snd_ctl_hw_nonblock(61,1662
static int snd_ctl_hw_async(81,2073
static int snd_ctl_hw_subscribe_events(112,2683
static int snd_ctl_hw_card_info(122,2959
static int snd_ctl_hw_elem_list(132,3220
static int snd_ctl_hw_elem_info(140,3430
static int snd_ctl_hw_elem_add(148,3640
static int snd_ctl_hw_elem_replace(161,3973
static int snd_ctl_hw_elem_remove(174,4314
static int snd_ctl_hw_elem_read(182,4522
static int snd_ctl_hw_elem_write(190,4739
static int snd_ctl_hw_elem_lock(198,4958
static int snd_ctl_hw_elem_unlock(206,5162
static int snd_ctl_hw_elem_tlv(214,5370
static int snd_ctl_hw_hwdep_next_device(253,6397
static int snd_ctl_hw_hwdep_info(261,6612
static int snd_ctl_hw_pcm_next_device(269,6822
static int snd_ctl_hw_pcm_info(277,7033
static int snd_ctl_hw_pcm_prefer_subdevice(285,7237
static int snd_ctl_hw_rawmidi_next_device(293,7457
static int snd_ctl_hw_rawmidi_info(301,7676
static int snd_ctl_hw_rawmidi_prefer_subdevice(309,7892
static int snd_ctl_hw_set_power_state(317,8120
static int snd_ctl_hw_get_power_state(325,8327
static int snd_ctl_hw_read(333,8540
static const snd_ctl_ops_t snd_ctl_hw_ops 347,8912
int snd_ctl_hw_open(376,10056
int _snd_ctl_hw_open(438,11348

alsa-lib-1.0.29/src/control/cards.c,290
#define SND_FILE_CONTROL	38,1190
#define SND_FILE_LOAD	39,1250
static int snd_card_load2(42,1315
static int snd_card_load1(61,1672
int snd_card_load(83,2163
int snd_card_next(98,2583
int snd_card_get_index(125,3228
int snd_card_get_name(173,4457
int snd_card_get_longname(203,5187

alsa-lib-1.0.29/src/control/control_symbols.c,143
static const char **snd_control_open_objects[snd_control_open_objects27,995
void *snd_control_open_symbols(snd_control_open_symbols32,1107

alsa-lib-1.0.29/src/control/control_local.h,2286
typedef struct _snd_ctl_ops 24,895
	int (*close)close25,925
	int (*nonblock)nonblock26,959
	int (*async)async27,1010
	int (*subscribe_events)subscribe_events28,1064
	int (*card_info)card_info29,1124
	int (*element_list)element_list30,1189
	int (*element_info)element_info31,1257
	int (*element_add)element_add32,1325
	int (*element_replace)element_replace33,1392
	int (*element_remove)element_remove34,1463
	int (*element_read)element_read35,1529
	int (*element_write)element_write36,1601
	int (*element_lock)element_lock37,1674
	int (*element_unlock)element_unlock38,1740
	int (*element_tlv)element_tlv39,1810
	int (*hwdep_next_device)hwdep_next_device41,1931
	int (*hwdep_info)hwdep_info42,1990
	int (*pcm_next_device)pcm_next_device43,2054
	int (*pcm_info)pcm_info44,2111
	int (*pcm_prefer_subdevice)pcm_prefer_subdevice45,2171
	int (*rawmidi_next_device)rawmidi_next_device46,2232
	int (*rawmidi_info)rawmidi_info47,2293
	int (*rawmidi_prefer_subdevice)rawmidi_prefer_subdevice48,2361
	int (*set_power_state)set_power_state49,2426
	int (*get_power_state)get_power_state50,2490
	int (*read)read51,2555
	int (*poll_descriptors_count)poll_descriptors_count52,2612
	int (*poll_descriptors)poll_descriptors53,2663
	int (*poll_revents)poll_revents54,2749
} snd_ctl_ops_t;55,2855
struct _snd_ctl 58,2874
	void *open_func;open_func59,2892
	char *name;name60,2910
	snd_ctl_type_t type;61,2923
	const snd_ctl_ops_t *ops;ops62,2945
	void *private_data;private_data63,2972
	int nonblock;64,2993
	int poll_fd;65,3008
	struct list_head async_handlers;66,3022
struct _snd_hctl_elem 69,3060
	snd_ctl_elem_id_t id;70,3084
	struct list_head list;71,3137
	int compare_weight;72,3197
	snd_hctl_elem_callback_t callback;74,3273
	void *callback_private;callback_private75,3309
	snd_hctl_t *hctl;hctl77,3347
struct _snd_hctl 80,3395
	snd_ctl_t *ctl;ctl81,3414
	struct list_head elems;82,3431
	unsigned int alloc;83,3484
	unsigned int count;84,3506
	snd_hctl_elem_t **pelems;pelems85,3527
	snd_hctl_compare_t compare;86,3554
	snd_hctl_callback_t callback;87,3583
	void *callback_private;callback_private88,3614
#define snd_ctl_new	93,3684
#define _snd_ctl_async_descriptor 97,3838
#define CTLINABORT(102,4144

alsa-lib-1.0.29/src/control/control_shm.c,1459
const char *_snd_module_control_shm _snd_module_control_shm40,1224
	int socket;45,1310
	volatile snd_ctl_shm_ctrl_t *ctrl;ctrl46,1323
} snd_ctl_shm_t;47,1359
static int snd_ctl_shm_action(50,1384
static int snd_ctl_shm_action_fd(69,1785
static int snd_ctl_shm_close(88,2212
static int snd_ctl_shm_nonblock(101,2504
static int snd_ctl_shm_async(106,2619
static int snd_ctl_shm_poll_descriptor(118,2930
static int snd_ctl_shm_subscribe_events(130,3217
static int snd_ctl_shm_card_info(139,3501
static int snd_ctl_shm_elem_list(153,3852
static int snd_ctl_shm_elem_info(175,4481
static int snd_ctl_shm_elem_read(189,4836
static int snd_ctl_shm_elem_write(203,5201
static int snd_ctl_shm_elem_lock(217,5570
static int snd_ctl_shm_elem_unlock(231,5917
static int snd_ctl_shm_hwdep_next_device(245,6272
static int snd_ctl_shm_hwdep_info(259,6622
static int snd_ctl_shm_pcm_next_device(273,6973
static int snd_ctl_shm_pcm_info(287,7319
static int snd_ctl_shm_pcm_prefer_subdevice(301,7660
static int snd_ctl_shm_rawmidi_next_device(314,8000
static int snd_ctl_shm_rawmidi_info(328,8354
static int snd_ctl_shm_rawmidi_prefer_subdevice(342,8715
static int snd_ctl_shm_set_power_state(355,9067
static int snd_ctl_shm_get_power_state(368,9385
static int snd_ctl_shm_read(381,9711
static const snd_ctl_ops_t snd_ctl_shm_ops 400,10106
static int make_local_socket(425,11111
int snd_ctl_shm_open(444,11542
int _snd_ctl_shm_open(539,13383

alsa-lib-1.0.29/src/pcm/pcm_local.h,12681
#define _snd_mask 30,1059
#define _snd_pcm_access_mask 31,1088
#define _snd_pcm_format_mask 32,1127
#define _snd_pcm_subformat_mask 33,1166
#define SND_INTERVAL_INLINE37,1229
#define SND_MASK_INLINE40,1280
#define SND_PCM_HW_PARAM_ACCESS 43,1323
#define SND_PCM_HW_PARAM_FIRST_MASK 44,1381
#define SND_PCM_HW_PARAM_FORMAT 45,1447
#define SND_PCM_HW_PARAM_SUBFORMAT 46,1505
#define SND_PCM_HW_PARAM_LAST_MASK 47,1569
#define SND_PCM_HW_PARAM_SAMPLE_BITS 48,1633
#define SND_PCM_HW_PARAM_FIRST_INTERVAL 49,1701
#define SND_PCM_HW_PARAM_FRAME_BITS 50,1775
#define SND_PCM_HW_PARAM_CHANNELS 51,1841
#define SND_PCM_HW_PARAM_RATE 52,1903
#define SND_PCM_HW_PARAM_PERIOD_TIME 53,1957
#define SND_PCM_HW_PARAM_PERIOD_SIZE 54,2025
#define SND_PCM_HW_PARAM_PERIOD_BYTES 55,2093
#define SND_PCM_HW_PARAM_PERIODS 56,2163
#define SND_PCM_HW_PARAM_BUFFER_TIME 57,2223
#define SND_PCM_HW_PARAM_BUFFER_SIZE 58,2291
#define SND_PCM_HW_PARAM_BUFFER_BYTES 59,2359
#define SND_PCM_HW_PARAM_TICK_TIME 60,2429
#define SND_PCM_HW_PARAM_LAST_INTERVAL 61,2493
#define SND_PCM_HW_PARAM_LAST_MASK 62,2565
#define SND_PCM_HW_PARAM_FIRST_MASK 63,2629
#define SND_PCM_HW_PARAM_LAST_INTERVAL 64,2695
#define SND_PCM_HW_PARAM_FIRST_INTERVAL 65,2767
#define SND_PCM_INFO_MMAP 68,2878
#define SND_PCM_INFO_MMAP_VALID 70,2984
#define SND_PCM_INFO_DOUBLE 72,3082
#define SND_PCM_INFO_BATCH 74,3173
#define SND_PCM_INFO_INTERLEAVED 76,3263
#define SND_PCM_INFO_NONINTERLEAVED 78,3369
#define SND_PCM_INFO_COMPLEX 80,3485
#define SND_PCM_INFO_BLOCK_TRANSFER 82,3578
#define SND_PCM_INFO_OVERRANGE 84,3687
#define SND_PCM_INFO_RESUME 86,3773
#define SND_PCM_INFO_PAUSE 88,3857
#define SND_PCM_INFO_HALF_DUPLEX 90,3943
#define SND_PCM_INFO_JOINT_DUPLEX 92,4060
#define SND_PCM_INFO_SYNC_START 94,4172
#define SND_PCM_INFO_NO_PERIOD_WAKEUP 96,4271
#define SND_PCM_HW_PARAMS_NORESAMPLE 98,4342
#define SND_PCM_HW_PARAMS_EXPORT_BUFFER 99,4410
#define SND_PCM_HW_PARAMS_NO_PERIOD_WAKEUP 100,4484
#define SND_PCM_INFO_MONOTONIC	102,4565
typedef struct _snd_pcm_rbptr 104,4608
	snd_pcm_t *master;master105,4640
	volatile snd_pcm_uframes_t *ptr;ptr106,4660
	int fd;107,4694
	off_t offset;108,4703
	int link_dst_count;109,4718
	snd_pcm_t **link_dst;link_dst110,4739
	void *private_data;private_data111,4762
	void (*changed)changed112,4783
} snd_pcm_rbptr_t;113,4833
typedef struct _snd_pcm_channel_info 115,4853
	unsigned int channel;116,4892
	void *addr;addr117,4915
	unsigned int first;118,4968
	unsigned int step;119,5027
	enum { SND_PCM_AREA_SHM,120,5079
	enum { SND_PCM_AREA_SHM, SND_PCM_AREA_MMAP,120,5079
	enum { SND_PCM_AREA_SHM, SND_PCM_AREA_MMAP, SND_PCM_AREA_LOCAL 120,5079
	enum { SND_PCM_AREA_SHM, SND_PCM_AREA_MMAP, SND_PCM_AREA_LOCAL } type;120,5079
			struct snd_shm_area *area;area123,5171
			int shmid;124,5201
		} shm;125,5215
			int fd;127,5235
			off_t offset;128,5246
		} mmap;129,5263
	} u;130,5273
	char reserved[reserved131,5279
} snd_pcm_channel_info_t;132,5299
	int (*close)close135,5343
	int (*nonblock)nonblock136,5374
	int (*async)async137,5422
	int (*info)info138,5473
	int (*hw_refine)hw_refine139,5525
	int (*hw_params)hw_params140,5589
	int (*hw_free)hw_free141,5653
	int (*sw_params)sw_params142,5686
	int (*channel_info)channel_info143,5750
	void (*dump)dump144,5818
	int (*mmap)mmap145,5868
	int (*munmap)munmap146,5898
	snd_pcm_chmap_query_t **(*query_chmaps)query_chmaps147,5930
	snd_pcm_chmap_t *(*get_chmap)get_chmap148,5988
	int (*set_chmap)set_chmap149,6036
} snd_pcm_ops_t;150,6099
	int (*status)status153,6134
	int (*prepare)prepare154,6192
	int (*reset)reset155,6225
	int (*start)start156,6256
	int (*drop)drop157,6287
	int (*drain)drain158,6317
	int (*pause)pause159,6348
	snd_pcm_state_t (*state)state160,6391
	int (*hwsync)hwsync161,6434
	int (*delay)delay162,6466
	int (*resume)resume163,6524
	int (*link)link164,6556
	int (*link_slaves)link_slaves165,6604
	int (*unlink)unlink166,6660
	snd_pcm_sframes_t (*rewindable)rewindable167,6692
	snd_pcm_sframes_t (*rewind)rewind168,6742
	snd_pcm_sframes_t (*forwardable)forwardable169,6814
	snd_pcm_sframes_t (*forward)forward170,6865
	snd_pcm_sframes_t (*writei)writei171,6938
	snd_pcm_sframes_t (*writen)writen172,7028
	snd_pcm_sframes_t (*readi)readi173,7111
	snd_pcm_sframes_t (*readn)readn174,7194
	snd_pcm_sframes_t (*avail_update)avail_update175,7276
	snd_pcm_sframes_t (*mmap_commit)mmap_commit176,7328
	int (*htimestamp)htimestamp177,7429
	int (*poll_descriptors_count)poll_descriptors_count178,7517
	int (*poll_descriptors)poll_descriptors179,7565
	int (*poll_revents)poll_revents180,7648
	int (*may_wait_for_avail_min)may_wait_for_avail_min181,7751
} snd_pcm_fast_ops_t;182,7824
struct _snd_pcm 184,7847
	void *open_func;open_func185,7865
	char *name;name186,7883
	snd_pcm_type_t type;187,7896
	snd_pcm_stream_t stream;188,7918
	int mode;189,7944
	long minperiodtime;190,7955
	int poll_fd_count;191,7989
	int poll_fd;192,8009
	unsigned short poll_events;193,8023
	int setup:setup194,8052
	    compat:compat195,8067
	snd_pcm_access_t access;196,8083
	snd_pcm_format_t format;197,8127
	snd_pcm_subformat_t subformat;198,8176
	unsigned int channels;199,8224
	unsigned int rate;200,8264
	snd_pcm_uframes_t period_size;201,8302
	unsigned int period_time;202,8334
	snd_interval_t periods;203,8383
	snd_pcm_tstamp_t tstamp_mode;204,8408
	snd_pcm_tstamp_type_t tstamp_type;205,8460
	unsigned int period_step;206,8517
	snd_pcm_uframes_t avail_min;207,8544
	int period_event;208,8608
	snd_pcm_uframes_t start_threshold;209,8627
	snd_pcm_uframes_t stop_threshold;210,8663
	snd_pcm_uframes_t silence_threshold;211,8698
	snd_pcm_uframes_t silence_size;213,8806
	snd_pcm_uframes_t boundary;214,8866
	unsigned int info;215,8921
	unsigned int msbits;216,8972
	unsigned int rate_num;217,9028
	unsigned int rate_den;218,9074
	unsigned int hw_flags;219,9122
	snd_pcm_uframes_t fifo_size;220,9175
	snd_pcm_uframes_t buffer_size;221,9236
	snd_interval_t buffer_time;222,9268
	unsigned int sample_bits;223,9297
	unsigned int frame_bits;224,9324
	snd_pcm_rbptr_t appl;225,9350
	snd_pcm_rbptr_t hw;226,9373
	snd_pcm_uframes_t min_align;227,9394
	unsigned int mmap_rw:mmap_rw228,9424
	unsigned int mmap_shadow:mmap_shadow229,9482
	unsigned int donot_close:donot_close232,9591
	snd_pcm_channel_info_t *mmap_channels;mmap_channels233,9648
	snd_pcm_channel_area_t *running_areas;running_areas234,9688
	snd_pcm_channel_area_t *stopped_areas;stopped_areas235,9728
	const snd_pcm_ops_t *ops;ops236,9768
	const snd_pcm_fast_ops_t *fast_ops;fast_ops237,9795
	snd_pcm_t *op_arg;op_arg238,9832
	snd_pcm_t *fast_op_arg;fast_op_arg239,9852
	void *private_data;private_data240,9877
	struct list_head async_handlers;241,9898
#define snd_pcm_new 255,10205
#define snd_pcm_free 257,10241
#define snd_pcm_areas_from_buf 259,10279
#define snd_pcm_areas_from_bufs 261,10337
#define snd_pcm_open_named_slave 263,10397
#define snd_pcm_conf_generic_id 265,10459
#define snd_pcm_hw_open_fd 267,10519
#define snd_pcm_wait_nocheck 269,10569
#define snd_pcm_rate_get_default_converter 271,10623
#define snd_pcm_set_hw_ptr 273,10705
#define snd_pcm_set_appl_ptr 275,10755
#define snd_pcm_link_hw_ptr 277,10809
#define snd_pcm_link_appl_ptr 279,10861
#define snd_pcm_unlink_hw_ptr 281,10917
#define snd_pcm_unlink_appl_ptr 283,10973
#define snd_pcm_mmap_appl_ptr 285,11033
#define snd_pcm_mmap_appl_backward 287,11089
#define snd_pcm_mmap_appl_forward 289,11155
#define snd_pcm_mmap_hw_backward 291,11219
#define snd_pcm_mmap_hw_forward 293,11281
#define snd_pcm_read_areas 295,11341
#define snd_pcm_write_areas 297,11391
#define snd_pcm_read_mmap 299,11443
#define snd_pcm_write_mmap 301,11491
#define snd_pcm_channel_info_shm 303,11541
#define snd_pcm_hw_refine_soft 305,11603
#define snd_pcm_hw_refine_slave 307,11661
#define snd_pcm_hw_params_slave 309,11721
#define snd_pcm_hw_param_refine_near 311,11781
#define snd_pcm_hw_param_refine_multiple 313,11851
#define snd_pcm_hw_param_empty 315,11929
#define snd_pcm_hw_param_always_eq 317,11987
#define snd_pcm_hw_param_never_eq 319,12053
#define snd_pcm_hw_param_get_mask 321,12117
#define snd_pcm_hw_param_get_interval 323,12181
#define snd_pcm_hw_param_any 325,12253
#define snd_pcm_hw_param_set_integer 327,12307
#define snd_pcm_hw_param_set_first 329,12377
#define snd_pcm_hw_param_set_last 331,12443
#define snd_pcm_hw_param_set_near 333,12507
#define snd_pcm_hw_param_set_min 335,12571
#define snd_pcm_hw_param_set_max 337,12633
#define snd_pcm_hw_param_set_minmax 339,12695
#define snd_pcm_hw_param_set 341,12763
#define snd_pcm_hw_param_set_mask 343,12817
#define snd_pcm_hw_param_get 345,12881
#define snd_pcm_hw_param_get_min 347,12935
#define snd_pcm_hw_param_get_max 349,12997
#define snd_pcm_hw_param_name	351,13059
typedef snd_pcm_sframes_t (*snd_pcm_xfer_areas_func_t)snd_pcm_xfer_areas_func_t382,14797
static inline int snd_pcm_channel_info(397,15607
#define _snd_pcm_link_descriptor 403,15872
#define _snd_pcm_async_descriptor 404,15942
static inline int snd_pcm_check_error(407,16047
static inline snd_pcm_uframes_t snd_pcm_mmap_playback_avail(424,16362
static inline snd_pcm_uframes_t snd_pcm_mmap_capture_avail(435,16665
static inline snd_pcm_uframes_t snd_pcm_mmap_avail(444,16868
static inline snd_pcm_sframes_t snd_pcm_mmap_playback_hw_avail(452,17076
static inline snd_pcm_sframes_t snd_pcm_mmap_capture_hw_avail(457,17221
static inline snd_pcm_sframes_t snd_pcm_mmap_hw_avail(462,17364
static inline snd_pcm_sframes_t snd_pcm_mmap_playback_hw_rewindable(467,17491
static inline snd_pcm_sframes_t snd_pcm_mmap_capture_hw_rewindable(473,17672
static inline snd_pcm_uframes_t snd_pcm_mmap_hw_rewindable(479,17851
static inline const snd_pcm_channel_area_t *snd_pcm_mmap_areas(snd_pcm_mmap_areas485,18014
static inline snd_pcm_uframes_t snd_pcm_mmap_offset(493,18233
static inline snd_pcm_uframes_t snd_pcm_mmap_hw_offset(499,18370
static inline snd_pcm_uframes_t snd_pcm_mmap_playback_delay(505,18508
static inline snd_pcm_uframes_t snd_pcm_mmap_capture_delay(510,18634
static inline snd_pcm_sframes_t snd_pcm_mmap_delay(515,18758
static inline void *snd_pcm_channel_area_addr(snd_pcm_channel_area_addr523,18966
static inline unsigned int snd_pcm_channel_area_step(530,19205
static inline snd_pcm_sframes_t _snd_pcm_writei(536,19353
static inline snd_pcm_sframes_t _snd_pcm_writen(541,19529
static inline snd_pcm_sframes_t _snd_pcm_readi(546,19696
static inline snd_pcm_sframes_t _snd_pcm_readn(551,19864
static inline int muldiv(556,20029
static inline int muldiv_down(572,20263
static inline int muldiv_near(584,20445
#undef _snd_pcm_hw_params595,20726
static inline int _snd_pcm_hw_params_set_format(637,22502
static inline int _snd_pcm_hw_params_set_subformat(644,22709
#define SCONF_MANDATORY	865,40099
#define SCONF_UNCHANGED	866,40125
#define SND_PCM_APPEND	871,40276
snd_pcm_open_slave(878,40517
#define SND_PCM_HW_PARBIT_ACCESS	895,41157
#define SND_PCM_HW_PARBIT_FORMAT	896,41222
#define SND_PCM_HW_PARBIT_SUBFORMAT	897,41287
#define SND_PCM_HW_PARBIT_CHANNELS	898,41358
#define SND_PCM_HW_PARBIT_RATE	899,41427
#define SND_PCM_HW_PARBIT_PERIOD_TIME	900,41489
#define SND_PCM_HW_PARBIT_PERIOD_SIZE	901,41564
#define SND_PCM_HW_PARBIT_PERIODS	902,41639
#define SND_PCM_HW_PARBIT_BUFFER_TIME	903,41706
#define SND_PCM_HW_PARBIT_BUFFER_SIZE	904,41781
#define SND_PCM_HW_PARBIT_SAMPLE_BITS	905,41856
#define SND_PCM_HW_PARBIT_FRAME_BITS	906,41931
#define SND_PCM_HW_PARBIT_PERIOD_BYTES	907,42004
#define SND_PCM_HW_PARBIT_BUFFER_BYTES	908,42081
#define SND_PCM_HW_PARBIT_TICK_TIME	909,42158
#define SND_PCM_ACCBIT_MMAP 912,42231
#define SND_PCM_ACCBIT_MMAPI 915,42408
#define SND_PCM_ACCBIT_MMAPN 916,42481
#define SND_PCM_ACCBIT_MMAPC 917,42557
#define SND_PCM_ACCBIT_SHM 919,42627
#define SND_PCM_ACCBIT_SHMI 923,42855
#define SND_PCM_ACCBIT_SHMN 925,42979
#define SND_PCM_FMTBIT_LINEAR 928,43110
#define SND_PCM_FMTBIT_FLOAT 957,44170
typedef union snd_tmp_float 964,44360
	float f;965,44390
	int32_t i;966,44400
} snd_tmp_float_t;967,44412
typedef union snd_tmp_double 969,44432
	double d;970,44463
	int64_t l;971,44474
} snd_tmp_double_t;972,44486
static inline void gettimestamp(976,44565
static inline void gettimestamp(999,45022
static inline int snd_pcm_may_wait_for_avail_min(1021,45754
static inline int sw_get_period_event(1031,46074
static inline void sw_set_period_event(1036,46237
#define PCMINABORT(1041,46404

alsa-lib-1.0.29/src/pcm/pcm_generic.h,1914
	snd_pcm_t *slave;slave23,889
	int close_slave;24,908
} snd_pcm_generic_t;25,926
#define snd_pcm_generic_close 28,989
#define snd_pcm_generic_nonblock 30,1045
#define snd_pcm_generic_async 32,1107
#define snd_pcm_generic_poll_descriptors_count 34,1163
#define snd_pcm_generic_poll_descriptors 36,1253
#define snd_pcm_generic_poll_revents 38,1331
#define snd_pcm_generic_info 40,1401
#define snd_pcm_generic_hw_free 42,1455
#define snd_pcm_generic_sw_params 44,1515
#define snd_pcm_generic_hw_refine 46,1579
#define snd_pcm_generic_hw_params 48,1643
#define snd_pcm_generic_channel_info 50,1707
#define snd_pcm_generic_channel_info_no_buffer 52,1777
#define snd_pcm_generic_status 54,1867
#define snd_pcm_generic_state 56,1925
#define snd_pcm_generic_prepare 58,1981
#define snd_pcm_generic_hwsync 60,2041
#define snd_pcm_generic_reset 62,2099
#define snd_pcm_generic_start 64,2155
#define snd_pcm_generic_drop 66,2211
#define snd_pcm_generic_drain 68,2265
#define snd_pcm_generic_pause 70,2321
#define snd_pcm_generic_resume 72,2377
#define snd_pcm_generic_delay 74,2435
#define snd_pcm_generic_forwardable 76,2491
#define snd_pcm_generic_forward 78,2559
#define snd_pcm_generic_rewindable 80,2619
#define snd_pcm_generic_rewind 82,2685
#define snd_pcm_generic_link 84,2743
#define snd_pcm_generic_link_slaves 86,2797
#define snd_pcm_generic_unlink 88,2865
#define snd_pcm_generic_writei 90,2923
#define snd_pcm_generic_writen 92,2981
#define snd_pcm_generic_readi 94,3039
#define snd_pcm_generic_readn 96,3095
#define snd_pcm_generic_mmap_commit 98,3151
#define snd_pcm_generic_avail_update	100,3219
#define snd_pcm_generic_mmap 102,3289
#define snd_pcm_generic_munmap 104,3343
#define snd_pcm_generic_query_chmaps 106,3401
#define snd_pcm_generic_get_chmap 108,3471
#define snd_pcm_generic_set_chmap 110,3535
#define snd_pcm_generic_may_wait_for_avail_min 112,3599

alsa-lib-1.0.29/src/pcm/pcm_multi.c,3082
const char *_snd_module_pcm_multi _snd_module_pcm_multi39,1239
	snd_pcm_t *pcm;pcm45,1324
	unsigned int channels_count;46,1341
	int close_slave;47,1371
	snd_pcm_t *linked;linked48,1389
} snd_pcm_multi_slave_t;49,1409
	int slave_idx;52,1452
	unsigned int slave_channel;53,1468
} snd_pcm_multi_channel_t;54,1497
	unsigned int slaves_count;57,1542
	unsigned int master_slave;58,1570
	snd_pcm_multi_slave_t *slaves;slaves59,1598
	unsigned int channels_count;60,1630
	snd_pcm_multi_channel_t *channels;channels61,1660
} snd_pcm_multi_t;62,1696
static int snd_pcm_multi_close(66,1724
static int snd_pcm_multi_nonblock(85,2128
static int snd_pcm_multi_async(90,2242
static int snd_pcm_multi_poll_descriptors_count(97,2463
static int snd_pcm_multi_poll_descriptors(104,2688
static int snd_pcm_multi_poll_revents(124,3247
static int snd_pcm_multi_info(131,3550
static int snd_pcm_multi_hw_refine_cprepare(145,3908
static int snd_pcm_multi_hw_refine_sprepare(164,4483
static int snd_pcm_multi_hw_refine_schange(178,5003
static int snd_pcm_multi_hw_refine_cchange(211,6310
static int snd_pcm_multi_hw_refine_slave(246,7779
static int snd_pcm_multi_hw_refine(255,8045
static int snd_pcm_multi_hw_params_slave(296,9173
static void reset_links(320,9910
static int snd_pcm_multi_hw_params(335,10282
static int snd_pcm_multi_hw_free(356,10904
static int snd_pcm_multi_sw_params(376,11330
static int snd_pcm_multi_status(390,11661
static snd_pcm_state_t snd_pcm_multi_state(397,11884
static int snd_pcm_multi_hwsync(404,12083
static int snd_pcm_multi_delay(411,12272
static snd_pcm_sframes_t snd_pcm_multi_avail_update(418,12494
static int snd_pcm_multi_htimestamp(434,12875
static int snd_pcm_multi_prepare(442,13147
static int snd_pcm_multi_reset(458,13551
static int snd_pcm_multi_start(476,14053
static int snd_pcm_multi_drop(493,14440
static int snd_pcm_multi_drain(510,14824
static int snd_pcm_multi_pause(527,15211
static int snd_pcm_multi_channel_info(544,15626
static snd_pcm_sframes_t snd_pcm_multi_rewindable(558,16048
static snd_pcm_sframes_t snd_pcm_multi_forwardable(576,16412
static snd_pcm_sframes_t snd_pcm_multi_rewind(594,16778
static snd_pcm_sframes_t snd_pcm_multi_forward(624,17582
static int snd_pcm_multi_resume(654,18387
static int snd_pcm_multi_link_slaves(674,18916
static int snd_pcm_multi_link(696,19475
static int snd_pcm_multi_unlink(704,19725
static snd_pcm_sframes_t snd_pcm_multi_mmap_commit(717,20009
static int snd_pcm_multi_munmap(737,20498
static int snd_pcm_multi_mmap(746,20672
static int snd_pcm_multi_may_wait_for_avail_min(778,21534
static snd_pcm_chmap_query_t **snd_pcm_multi_query_chmaps(snd_pcm_multi_query_chmaps785,21824
static snd_pcm_chmap_t *snd_pcm_multi_get_chmap(snd_pcm_multi_get_chmap839,23110
static int snd_pcm_multi_set_chmap(877,23966
static void snd_pcm_multi_dump(915,24850
static const snd_pcm_ops_t snd_pcm_multi_ops 938,25545
static const snd_pcm_fast_ops_t snd_pcm_multi_fast_ops 956,26137
int snd_pcm_multi_open(1005,28013
int _snd_pcm_multi_open(1175,32536

alsa-lib-1.0.29/src/pcm/pcm_mmap.c,736
size_t page_size(29,1013
size_t page_align(36,1102
size_t page_ptr(46,1238
void snd_pcm_mmap_appl_backward(65,1653
void snd_pcm_mmap_appl_forward(74,1875
void snd_pcm_mmap_hw_backward(83,2109
void snd_pcm_mmap_hw_forward(92,2315
static snd_pcm_sframes_t snd_pcm_mmap_write_areas(101,2533
static snd_pcm_sframes_t snd_pcm_mmap_read_areas(133,3459
snd_pcm_sframes_t snd_pcm_mmap_writei(182,5197
snd_pcm_sframes_t snd_pcm_mmap_writen(207,6324
snd_pcm_sframes_t snd_pcm_mmap_readi(232,7373
snd_pcm_sframes_t snd_pcm_mmap_readn(257,8444
int snd_pcm_channel_info_shm(265,8709
int snd_pcm_mmap(292,9431
int snd_pcm_munmap(466,13904
snd_pcm_sframes_t snd_pcm_write_mmap(539,15645
snd_pcm_sframes_t snd_pcm_read_mmap(590,16942

alsa-lib-1.0.29/src/pcm/pcm_lfloat.c,1619
typedef float float_t;37,1176
typedef double double_t;38,1199
#define BUGGY_GCC41,1285
const char *_snd_module_pcm_lfloat _snd_module_pcm_lfloat46,1354
	snd_pcm_plugin_t plug;51,1459
	unsigned int int32_idx;52,1483
	unsigned int float32_idx;53,1508
	snd_pcm_format_t sformat;54,1535
	void (*func)func55,1562
} snd_pcm_lfloat_t;59,1840
int snd_pcm_lfloat_get_s32_index(61,1861
int snd_pcm_lfloat_put_s32_index(85,2339
void snd_pcm_lfloat_convert_integer_float(96,2512
#define GET32_LABELS101,2819
#define PUT32F_LABELS102,2840
#undef PUT32F_LABELS104,2886
#undef GET32_LABELS105,2907
#define GET32_END 126,3668
#undef GET32_END128,3724
#define PUT32F_END 131,3779
#undef PUT32F_END133,3833
void snd_pcm_lfloat_convert_float_integer(141,3915
#define PUT32_LABELS146,4222
#define GET32F_LABELS147,4243
#undef GET32F_LABELS149,4289
#undef PUT32_LABELS150,4310
#define GET32F_END 171,5076
#undef GET32F_END173,5133
#define PUT32_END 176,5184
#undef PUT32_END178,5237
static int snd_pcm_lfloat_hw_refine_cprepare(188,5343
static int snd_pcm_lfloat_hw_refine_sprepare(211,6157
static int snd_pcm_lfloat_hw_refine_schange(223,6618
static int snd_pcm_lfloat_hw_refine_cchange(241,7202
static int snd_pcm_lfloat_hw_refine(259,7785
static int snd_pcm_lfloat_hw_params(269,8137
snd_pcm_lfloat_write_areas(301,9342
snd_pcm_lfloat_read_areas(321,9917
static void snd_pcm_lfloat_dump(340,10460
static const snd_pcm_ops_t snd_pcm_lfloat_ops 353,10881
int snd_pcm_lfloat_open(383,12004
int _snd_pcm_lfloat_open(467,14555
int snd_pcm_lfloat_open(519,15908
int _snd_pcm_lfloat_open(529,16206

alsa-lib-1.0.29/src/pcm/pcm_share.c,4163
const char *_snd_module_pcm_share _snd_module_pcm_share44,1316
static pthread_mutex_t snd_pcm_share_slaves_mutex 50,1424
#define Pthread_mutex_lock(53,1523
do 55,1600
#define Pthread_mutex_unlock(65,1891
#define Pthread_mutex_lock(71,2012
#define Pthread_mutex_unlock(72,2072
	struct list_head clients;76,2161
	struct list_head list;77,2188
	snd_pcm_t *pcm;pcm78,2212
	snd_pcm_format_t format;79,2229
	int rate;80,2255
	unsigned int channels;81,2266
	snd_pcm_sframes_t period_time;82,2290
	snd_pcm_sframes_t buffer_time;83,2322
	unsigned int open_count;84,2354
	unsigned int setup_count;85,2380
	unsigned int prepared_count;86,2407
	unsigned int running_count;87,2437
	snd_pcm_uframes_t safety_threshold;88,2466
	snd_pcm_uframes_t silence_frames;89,2503
	snd_pcm_sw_params_t sw_params;90,2538
	snd_pcm_uframes_t hw_ptr;91,2570
	int poll[poll92,2597
	int polling;93,2611
	pthread_t thread;94,2625
	pthread_mutex_t mutex;95,2644
	char *mutex_holder;mutex_holder97,2687
	pthread_cond_t poll_cond;99,2715
} snd_pcm_share_slave_t;100,2742
	struct list_head list;103,2785
	snd_pcm_t *pcm;pcm104,2809
	snd_pcm_share_slave_t *slave;slave105,2826
	unsigned int channels;106,2857
	unsigned int *slave_channels;slave_channels107,2881
	int drain_silenced;108,2912
	snd_htimestamp_t trigger_tstamp;109,2933
	snd_pcm_state_t state;110,2967
	snd_pcm_uframes_t hw_ptr;111,2991
	snd_pcm_uframes_t appl_ptr;112,3018
	int ready;113,3047
	int client_socket;114,3059
	int slave_socket;115,3079
} snd_pcm_share_t;116,3098
static snd_pcm_uframes_t snd_pcm_share_slave_avail(122,3216
static snd_pcm_uframes_t _snd_pcm_share_slave_forward(138,3717
static snd_pcm_uframes_t _snd_pcm_share_missing(198,5256
static snd_pcm_uframes_t _snd_pcm_share_slave_missing(338,9369
static void *snd_pcm_share_thread(snd_pcm_share_thread354,9864
static void _snd_pcm_share_update(420,11727
static int snd_pcm_share_nonblock(459,12894
static int snd_pcm_share_async(464,13008
static int snd_pcm_share_info(469,13148
static int snd_pcm_share_hw_refine_cprepare(475,13313
static int snd_pcm_share_hw_refine_sprepare(519,14566
static int snd_pcm_share_hw_refine_schange(532,15034
static int snd_pcm_share_hw_refine_cchange(562,16244
static int snd_pcm_share_hw_refine_slave(593,17585
static int snd_pcm_share_hw_params_slave(599,17775
static int snd_pcm_share_hw_refine(605,17975
static int snd_pcm_share_hw_params(615,18326
static int snd_pcm_share_hw_free(671,20213
static int snd_pcm_share_sw_params(685,20585
static int snd_pcm_share_status(690,20715
static snd_pcm_state_t snd_pcm_share_state(721,21616
static int _snd_pcm_share_hwsync(727,21747
static int snd_pcm_share_hwsync(740,22018
static int _snd_pcm_share_delay(751,22294
static int snd_pcm_share_delay(770,22752
static snd_pcm_sframes_t snd_pcm_share_avail_update(781,23061
static int snd_pcm_share_htimestamp(802,23653
static snd_pcm_sframes_t _snd_pcm_share_mmap_commit(815,24042
static snd_pcm_sframes_t snd_pcm_share_mmap_commit(858,25287
static int snd_pcm_share_prepare(871,25683
static int snd_pcm_share_reset(904,26382
static int snd_pcm_share_start(918,26805
static int snd_pcm_share_pause(984,28600
static int snd_pcm_share_resume(989,28715
static int snd_pcm_share_channel_info(994,28801
static snd_pcm_sframes_t _snd_pcm_share_rewind(1007,29177
static snd_pcm_sframes_t snd_pcm_share_rewindable(1043,30081
static snd_pcm_sframes_t snd_pcm_share_rewind(1054,30393
static snd_pcm_sframes_t _snd_pcm_share_forward(1065,30731
static snd_pcm_sframes_t snd_pcm_share_forwardable(1100,31626
static snd_pcm_sframes_t snd_pcm_share_forward(1111,31940
static void _snd_pcm_share_stop(1123,32330
static int snd_pcm_share_drain(1158,33335
static int snd_pcm_share_drop(1216,34674
static int snd_pcm_share_close(1253,35487
static int snd_pcm_share_mmap(1285,36356
static int snd_pcm_share_munmap(1290,36435
static void snd_pcm_share_dump(1295,36516
static const snd_pcm_ops_t snd_pcm_share_ops 1312,37062
static const snd_pcm_fast_ops_t snd_pcm_share_fast_ops 1327,37531
int snd_pcm_share_open(1371,39013
int _snd_pcm_share_open(1601,45579

alsa-lib-1.0.29/src/pcm/plugin_ops.h,7477
#define SX_INLINES23,897
static inline u_int32_t sx24(24,916
static inline u_int32_t sx24s(30,1025
#define as_u8(38,1143
#define as_u16(39,1182
#define as_u32(40,1223
#define as_u64(41,1264
#define as_s8(42,1305
#define as_s16(43,1342
#define as_s32(44,1381
#define as_s64(45,1420
#define as_float(46,1459
#define as_double(47,1500
#define as_u8c(49,1544
#define as_u16c(50,1590
#define as_u32c(51,1638
#define as_u64c(52,1686
#define as_s8c(53,1734
#define as_s16c(54,1778
#define as_s32c(55,1824
#define as_s64c(56,1870
#define as_floatc(57,1916
#define as_doublec(58,1964
#define _get_triple_le(60,2015
#define _get_triple_be(61,2148
#define _put_triple_le(62,2281
#define _put_triple_be(69,2465
#define _get_triple(78,2677
#define _get_triple_s(79,2722
#define _put_triple(80,2769
#define _put_triple_s(81,2822
#define _get_triple(83,2883
#define _get_triple_s(84,2928
#define _put_triple(85,2975
#define _put_triple_s(86,3028
static void *copy_labels[copy_labels90,3110
static void *const conv_labels[conv_labels111,3572
static void *const get16_labels[get16_labels344,15644
static void *const put16_labels[put16_labels410,18592
#define GET32_LABELS475,21722
#define PUT32_LABELS476,21743
static void *const get32_labels[get32_labels481,21830
#define GET32_END 515,22997
__conv24_get: goto *put;put550,25016
#define PUT32_END 551,25041
static void *const put32_labels[put32_labels556,25136
#undef GET32_LABELS590,26308
#undef PUT32_LABELS591,26328
#undef GET32_END626,28268
#undef PUT32_END627,28285
static void *const getu_labels[getu_labels632,28361
static void *const put32float_labels[put32float_labels673,29939
put32f_1234_1234F: as_float(dst) = (float_t)((int32_t)sample) / (float_t)0x80000000UL; goto PUT32F_END;682,30196
put32f_1234_4321F: tmp_float.f f683,30300
		   as_u32(dst) = bswap_32(tmp_float.i); goto PUT32F_END;684,30385
put32f_1234_1234D: as_double(dst) = (double_t)((int32_t)sample) / (double_t)0x80000000UL; goto PUT32F_END;685,30444
put32f_1234_4321D: tmp_double.d d686,30551
		   as_u64(dst) = bswap_64(tmp_double.l); goto PUT32F_END;687,30639
static void *const get32float_labels[get32float_labels692,30773
get32f_1234F_1234: tmp_float.f f701,31030
		   	sample 707,31207
		   goto GET32F_END;708,31270
get32f_4321F_1234: tmp_float.i i709,31292
		   	sample 715,31477
		   goto GET32F_END;716,31540
get32f_1234D_1234: tmp_double.d d717,31562
		   	sample 723,31743
		   goto GET32F_END;724,31808
get32f_4321D_1234: tmp_double.l l725,31830
		   	sample 731,32018
		   goto GET32F_END;732,32083
static inline void _norms(736,32133
static void *const norms_labels[norms_labels871,34410
norms_8_u8:	_norms(src, dst,  8, 0,  8, 0); goto NORMS_END;940,36868
norms_8_u16h:	_norms(src, dst,  8, 0,  16, 0); goto NORMS_END;941,36928
norms_8_u16s:	_norms(src, dst,  8, 0,  16, 1); goto NORMS_END;942,36991
norms_8_u24h:	_norms(src, dst,  8, 0,  24, 0); goto NORMS_END;943,37054
norms_8_u24s:	_norms(src, dst,  8, 0,  24, 1); goto NORMS_END;944,37117
norms_8_u32h:	_norms(src, dst,  8, 0,  32, 0); goto NORMS_END;945,37180
norms_8_u32s:	_norms(src, dst,  8, 0,  32, 1); goto NORMS_END;946,37243
norms_8_s8:	_norms(src, dst,  8, 1,  8, 0); goto NORMS_END;947,37306
norms_8_s16h:	_norms(src, dst,  8, 1,  16, 0); goto NORMS_END;948,37366
norms_8_s16s:	_norms(src, dst,  8, 1,  16, 1); goto NORMS_END;949,37429
norms_8_s24h:	_norms(src, dst,  8, 1,  24, 0); goto NORMS_END;950,37492
norms_8_s24s:	_norms(src, dst,  8, 1,  24, 1); goto NORMS_END;951,37555
norms_8_s32h:	_norms(src, dst,  8, 1,  32, 0); goto NORMS_END;952,37618
norms_8_s32s:	_norms(src, dst,  8, 1,  32, 1); goto NORMS_END;953,37681
norms_16_u8:	_norms(src, dst, 16, 0,  8, 0); goto NORMS_END;954,37744
norms_16_u16h:	_norms(src, dst, 16, 0,  16, 0); goto NORMS_END;955,37805
norms_16_u16s:	_norms(src, dst, 16, 0,  16, 1); goto NORMS_END;956,37869
norms_16_u24h:	_norms(src, dst, 16, 0,  24, 0); goto NORMS_END;957,37933
norms_16_u24s:	_norms(src, dst, 16, 0,  24, 1); goto NORMS_END;958,37997
norms_16_u32h:	_norms(src, dst, 16, 0,  32, 0); goto NORMS_END;959,38061
norms_16_u32s:	_norms(src, dst, 16, 0,  32, 1); goto NORMS_END;960,38125
norms_16_s8:	_norms(src, dst, 16, 1,  8, 0); goto NORMS_END;961,38189
norms_16_s16h:	_norms(src, dst, 16, 1,  16, 0); goto NORMS_END;962,38250
norms_16_s16s:	_norms(src, dst, 16, 1,  16, 1); goto NORMS_END;963,38314
norms_16_s24h:	_norms(src, dst, 16, 1,  24, 0); goto NORMS_END;964,38378
norms_16_s24s:	_norms(src, dst, 16, 1,  24, 1); goto NORMS_END;965,38442
norms_16_s32h:	_norms(src, dst, 16, 1,  32, 0); goto NORMS_END;966,38506
norms_16_s32s:	_norms(src, dst, 16, 1,  32, 1); goto NORMS_END;967,38570
norms_24_u8:	_norms(src, dst, 24, 0,  8, 0); goto NORMS_END;968,38634
norms_24_u16h:	_norms(src, dst, 24, 0,  16, 0); goto NORMS_END;969,38695
norms_24_u16s:	_norms(src, dst, 24, 0,  16, 1); goto NORMS_END;970,38759
norms_24_u24h:	_norms(src, dst, 24, 0,  24, 0); goto NORMS_END;971,38823
norms_24_u24s:	_norms(src, dst, 24, 0,  24, 1); goto NORMS_END;972,38887
norms_24_u32h:	_norms(src, dst, 24, 0,  32, 0); goto NORMS_END;973,38951
norms_24_u32s:	_norms(src, dst, 24, 0,  32, 1); goto NORMS_END;974,39015
norms_24_s8:	_norms(src, dst, 24, 1,  8, 0); goto NORMS_END;975,39079
norms_24_s16h:	_norms(src, dst, 24, 1,  16, 0); goto NORMS_END;976,39140
norms_24_s16s:	_norms(src, dst, 24, 1,  16, 1); goto NORMS_END;977,39204
norms_24_s24h:	_norms(src, dst, 24, 1,  24, 0); goto NORMS_END;978,39268
norms_24_s24s:	_norms(src, dst, 24, 1,  24, 1); goto NORMS_END;979,39332
norms_24_s32h:	_norms(src, dst, 24, 1,  32, 0); goto NORMS_END;980,39396
norms_24_s32s:	_norms(src, dst, 24, 1,  32, 1); goto NORMS_END;981,39460
norms_32_u8:	_norms(src, dst, 32, 0,  8, 0); goto NORMS_END;982,39524
norms_32_u16h:	_norms(src, dst, 32, 0,  16, 0); goto NORMS_END;983,39585
norms_32_u16s:	_norms(src, dst, 32, 0,  16, 1); goto NORMS_END;984,39649
norms_32_u24h:	_norms(src, dst, 32, 0,  24, 0); goto NORMS_END;985,39713
norms_32_u24s:	_norms(src, dst, 32, 0,  24, 1); goto NORMS_END;986,39777
norms_32_u32h:	_norms(src, dst, 32, 0,  32, 0); goto NORMS_END;987,39841
norms_32_u32s:	_norms(src, dst, 32, 0,  32, 1); goto NORMS_END;988,39905
norms_32_s8:	_norms(src, dst, 32, 1,  8, 0); goto NORMS_END;989,39969
norms_32_s16h:	_norms(src, dst, 32, 1,  16, 0); goto NORMS_END;990,40030
norms_32_s16s:	_norms(src, dst, 32, 1,  16, 1); goto NORMS_END;991,40094
norms_32_s24h:	_norms(src, dst, 32, 1,  24, 0); goto NORMS_END;992,40158
norms_32_s24s:	_norms(src, dst, 32, 1,  24, 1); goto NORMS_END;993,40222
norms_32_s32h:	_norms(src, dst, 32, 1,  32, 0); goto NORMS_END;994,40286
norms_32_s32s:	_norms(src, dst, 32, 1,  32, 1); goto NORMS_END;995,40350
#undef as_u8999,40423
#undef as_u161000,40436
#undef as_u321001,40450
#undef as_s81002,40464
#undef as_s161003,40477
#undef as_s321004,40491
#undef as_float1005,40505
#undef as_double1006,40521
#undef as_u8c1008,40539
#undef as_u16c1009,40553
#undef as_u32c1010,40568
#undef as_s8c1011,40583
#undef as_s16c1012,40597
#undef as_s32c1013,40612
#undef as_floatc1014,40627
#undef as_doublec1015,40644
#undef _get_triple1017,40663
#undef _get_triple_s1018,40682
#undef _get_triple_le1019,40703
#undef _get_triple_be1020,40725
#undef _put_triple1021,40747
#undef _put_triple_s1022,40766
#undef _put_triple_le1023,40787
#undef _put_triple_be1024,40809

alsa-lib-1.0.29/src/pcm/pcm_rate_linear.c,1402
#define LINEAR_DIV_SHIFT 33,1209
#define LINEAR_DIV 34,1237
struct rate_linear 36,1279
	unsigned int get_idx;37,1300
	unsigned int put_idx;38,1323
	unsigned int pitch;39,1346
	unsigned int pitch_shift;40,1367
	unsigned int channels;41,1425
	int16_t *old_sample;old_sample42,1449
	void (*func)func43,1471
static snd_pcm_uframes_t input_frames(50,1736
static snd_pcm_uframes_t output_frames(59,1958
static void linear_expand(68,2181
#define GET16_LABELS74,2447
#define PUT16_LABELS75,2468
#undef GET16_LABELS77,2513
#undef PUT16_LABELS78,2533
#define GET16_END 111,3613
#undef GET16_END113,3665
#define PUT16_END 122,3947
#undef PUT16_END124,3999
static void linear_expand_s16(139,4257
static void linear_shrink(190,5911
#define GET16_LABELS196,6177
#define PUT16_LABELS197,6198
#undef GET16_LABELS199,6243
#undef PUT16_LABELS200,6263
#define GET16_END 229,7235
#undef GET16_END231,7287
#define PUT16_END 243,7677
#undef PUT16_END245,7729
static void linear_shrink_s16(260,7986
static void linear_convert(311,9654
static void linear_free(322,10041
static int linear_init(330,10166
static int linear_adjust_pitch(361,11148
static void linear_reset(394,12197
static void linear_close(403,12388
static int get_supported_rates(408,12441
static void linear_dump(416,12651
static const snd_pcm_rate_ops_t linear_ops 421,12790
int SND_PCM_RATE_PLUGIN_ENTRY(435,13171

alsa-lib-1.0.29/src/pcm/scopes/level.c,976
#define BAR_WIDTH 25,945
#define DECAY_MS 27,1007
#define PEAK_MS 29,1069
typedef struct _snd_pcm_scope_level_channel 31,1090
	int16_t level;32,1136
	int16_t peak;33,1152
	unsigned int peak_age;34,1167
} snd_pcm_scope_level_channel_t;35,1191
typedef struct _snd_pcm_scope_level 37,1225
	snd_pcm_t *pcm;pcm38,1263
	snd_pcm_scope_t *s16;s1639,1280
	snd_pcm_scope_level_channel_t *channels;channels40,1303
	snd_pcm_uframes_t old;41,1345
	int top;42,1369
	WINDOW *win;win43,1379
	unsigned int bar_width;44,1393
	unsigned int decay_ms;45,1418
	unsigned int peak_ms;46,1442
} snd_pcm_scope_level_t;47,1465
static int level_enable(49,1491
static void level_disable(66,1985
static void level_close(73,2150
static void level_start(79,2292
static void level_stop(83,2362
static void level_update(95,2648
static void level_reset(164,4467
snd_pcm_scope_ops_t level_ops 172,4756
int snd_pcm_scope_level_open(182,4961
int _snd_pcm_scope_level_open(220,5891

alsa-lib-1.0.29/src/pcm/pcm_hooks.c,1380
const char *_snd_module_pcm_hooks _snd_module_pcm_hooks35,1158
struct _snd_pcm_hook 39,1225
	snd_pcm_t *pcm;pcm40,1248
	snd_pcm_hook_func_t func;41,1265
	void *private_data;private_data42,1292
	struct list_head list;43,1313
struct snd_pcm_hook_dllist 46,1341
	void *dlobj;dlobj47,1370
	struct list_head list;48,1384
	snd_pcm_generic_t gen;52,1429
	struct list_head hooks[hooks53,1453
	struct list_head dllist;54,1506
} snd_pcm_hooks_t;55,1532
static int hook_add_dlobj(58,1559
static void hook_remove_dlobj(72,1820
static int snd_pcm_hooks_close(79,1945
static int snd_pcm_hooks_hw_params(111,2761
static int snd_pcm_hooks_hw_free(127,3204
static void snd_pcm_hooks_dump(143,3604
static const snd_pcm_ops_t snd_pcm_hooks_ops 155,3925
static const snd_pcm_fast_ops_t snd_pcm_hooks_fast_ops 173,4539
int snd_pcm_hooks_open(216,6190
static int snd_pcm_hook_add_conf(341,9265
int _snd_pcm_hooks_open(480,12752
snd_pcm_t *snd_pcm_hook_get_pcm(snd_pcm_hook_get_pcm560,14673
void *snd_pcm_hook_get_private(snd_pcm_hook_get_private571,14907
void snd_pcm_hook_set_private(582,15153
int snd_pcm_hook_add(600,15679
int snd_pcm_hook_remove(628,16388
static int snd_pcm_hook_ctl_elems_hw_params(640,16513
static int snd_pcm_hook_ctl_elems_hw_free(646,16662
static int snd_pcm_hook_ctl_elems_close(652,16808
int _snd_pcm_hook_ctl_elems_install(666,17222

alsa-lib-1.0.29/src/pcm/pcm_copy.c,641
const char *_snd_module_pcm_copy _snd_module_pcm_copy35,1145
	snd_pcm_plugin_t plug;41,1267
} snd_pcm_copy_t;42,1291
static int snd_pcm_copy_hw_refine_cprepare(45,1317
static int snd_pcm_copy_hw_refine_sprepare(57,1690
static int snd_pcm_copy_hw_refine_schange(66,1994
static int snd_pcm_copy_hw_refine_cchange(77,2297
static int snd_pcm_copy_hw_refine(88,2599
static int snd_pcm_copy_hw_params(98,2941
snd_pcm_copy_write_areas(108,3264
snd_pcm_copy_read_areas(126,3747
static void snd_pcm_copy_dump(143,4199
static const snd_pcm_ops_t snd_pcm_copy_ops 155,4539
int snd_pcm_copy_open(184,5596
int _snd_pcm_copy_open(262,7637

alsa-lib-1.0.29/src/pcm/pcm_softvol.c,2054
const char *_snd_module_pcm_softvol _snd_module_pcm_softvol36,1145
	snd_pcm_plugin_t plug;43,1271
	snd_pcm_format_t sformat;44,1295
	unsigned int cchannels;45,1322
	snd_ctl_t *ctl;ctl46,1347
	snd_ctl_elem_value_t elem;47,1364
	unsigned int cur_vol[cur_vol48,1392
	unsigned int max_val;49,1418
	unsigned int zero_dB_val;50,1461
	double min_dB;51,1508
	double max_dB;52,1524
	unsigned int *dB_value;dB_value53,1540
} snd_pcm_softvol_t;54,1565
#define VOL_SCALE_SHIFT	56,1587
#define VOL_SCALE_MASK 57,1615
#define PRESET_RESOLUTION	59,1677
#define PRESET_MIN_DB	60,1707
#define ZERO_DB 61,1736
#define MAX_DB_UPPER_LIMIT 62,1773
static const unsigned int preset_dB_value[preset_dB_value64,1809
	int i;101,4002
	short s[s102,4010
} val_t;103,4023
static inline int MULTI_DIV_32x16(104,4032
static inline int MULTI_DIV_int(122,4355
static inline int MULTI_DIV_24(140,4882
static inline short MULTI_DIV_short(156,5261
#define CONVERT_AREA(180,5855
#define CONVERT_AREA_S24_3LE(213,6718
#define GET_VOL_SCALE 255,7909
static void softvol_convert_stereo_vol(273,8206
#undef GET_VOL_SCALE326,9805
#define GET_VOL_SCALE327,9826
static void softvol_convert_mono_vol(330,9868
static void get_current_volume(382,11258
static void softvol_free(397,11582
static int snd_pcm_softvol_close(408,11848
static int snd_pcm_softvol_hw_refine_cprepare(415,11980
static int snd_pcm_softvol_hw_refine_sprepare(452,13106
static int check_access_mask(469,13651
static int snd_pcm_softvol_hw_refine_schange(498,14702
static int snd_pcm_softvol_hw_refine_cchange(527,15558
static int snd_pcm_softvol_hw_refine(556,16412
static int snd_pcm_softvol_hw_params(566,16769
snd_pcm_softvol_write_areas(591,17599
snd_pcm_softvol_read_areas(614,18310
static void snd_pcm_softvol_dump(636,18989
static int add_tlv_info(656,19645
static int add_user_ctl(666,19962
static int softvol_load_control(698,20841
static const snd_pcm_ops_t snd_pcm_softvol_ops 808,23997
int snd_pcm_softvol_open(844,25329
int _snd_pcm_softvol_open(981,29630

alsa-lib-1.0.29/src/pcm/pcm_dshare.c,1557
const char *_snd_module_pcm_dshare _snd_module_pcm_dshare50,1463
#define STATE_RUN_PENDING	55,1614
static void do_silence(58,1653
static void share_areas(74,2145
static void snd_pcm_dshare_sync_area(103,3058
static int snd_pcm_dshare_sync_ptr(160,5005
static int snd_pcm_dshare_status(214,6558
static snd_pcm_state_t snd_pcm_dshare_state(236,7200
static int snd_pcm_dshare_delay(252,7608
static int snd_pcm_dshare_hwsync(278,8202
static int snd_pcm_dshare_prepare(298,8638
static int snd_pcm_dshare_reset(309,8946
static int snd_pcm_dshare_start_timer(318,9226
static int snd_pcm_dshare_start(331,9527
static int snd_pcm_dshare_drop(353,10044
static int snd_pcm_dshare_drain(364,10306
static int snd_pcm_dshare_pause(408,11401
static snd_pcm_sframes_t snd_pcm_dshare_rewindable(413,11514
static snd_pcm_sframes_t snd_pcm_dshare_rewind(418,11636
static snd_pcm_sframes_t snd_pcm_dshare_forwardable(429,11914
static snd_pcm_sframes_t snd_pcm_dshare_forward(434,12029
static snd_pcm_sframes_t snd_pcm_dshare_readi(445,12308
static snd_pcm_sframes_t snd_pcm_dshare_readn(450,12481
static int snd_pcm_dshare_close(455,12653
static snd_pcm_sframes_t snd_pcm_dshare_mmap_commit(480,13421
static snd_pcm_sframes_t snd_pcm_dshare_avail_update(516,14528
static int snd_pcm_dshare_htimestamp(526,14818
static void snd_pcm_dshare_dump(548,15354
static const snd_pcm_ops_t snd_pcm_dshare_ops 561,15674
static const snd_pcm_fast_ops_t snd_pcm_dshare_fast_ops 578,16236
int snd_pcm_dshare_open(624,17786
int _snd_pcm_dshare_open(888,24639

alsa-lib-1.0.29/src/pcm/pcm_iec958.c,1817
const char *_snd_module_pcm_iec958 _snd_module_pcm_iec95837,1183
typedef struct snd_pcm_iec958 snd_pcm_iec958_t;45,1260
typedef void (*iec958_f)iec958_f47,1309
struct snd_pcm_iec958 54,1570
	snd_pcm_plugin_t plug;56,1633
	unsigned int getput_idx;57,1657
	iec958_f func;58,1683
	snd_pcm_format_t sformat;59,1699
	snd_pcm_format_t format;60,1726
	unsigned int counter;61,1752
	unsigned char status[status62,1775
	unsigned int byteswap;63,1802
	unsigned char preamble[preamble64,1826
	snd_pcm_fast_ops_t fops;65,1875
enum { PREAMBLE_Z,68,1905
enum { PREAMBLE_Z, PREAMBLE_X,68,1905
enum { PREAMBLE_Z, PREAMBLE_X, PREAMBLE_Y 68,1905
static unsigned int iec958_parity(77,2108
static inline u_int32_t iec958_subframe(105,2738
static inline int32_t iec958_to_s32(135,3454
static void snd_pcm_iec958_decode(145,3649
#define PUT32_LABELS152,3929
#undef PUT32_LABELS154,3974
#define PUT32_END 172,4673
#undef PUT32_END174,4721
static void snd_pcm_iec958_encode(182,4797
#define GET32_LABELS189,5077
#undef GET32_LABELS191,5122
#define GET32_END 211,5851
#undef GET32_END213,5899
static int snd_pcm_iec958_hw_refine_cprepare(227,6164
static int snd_pcm_iec958_hw_refine_sprepare(258,7211
static int snd_pcm_iec958_hw_refine_schange(270,7666
static int snd_pcm_iec958_hw_refine_cchange(288,8250
static int snd_pcm_iec958_hw_refine(306,8833
static int snd_pcm_iec958_hw_params(316,9185
snd_pcm_iec958_write_areas(363,10871
snd_pcm_iec958_read_areas(382,11392
static int snd_pcm_iec958_init(400,11881
static void snd_pcm_iec958_dump(407,12007
static snd_pcm_sframes_t snd_pcm_iec958_rewind(420,12406
static snd_pcm_sframes_t snd_pcm_iec958_forward(434,12792
static const snd_pcm_ops_t snd_pcm_iec958_ops 449,13174
int snd_pcm_iec958_open(481,14411
int _snd_pcm_iec958_open(594,17751

alsa-lib-1.0.29/src/pcm/pcm_symbols.c,128
static const char **snd_pcm_open_objects[snd_pcm_open_objects54,2059
void *snd_pcm_open_symbols(snd_pcm_open_symbols59,2163

alsa-lib-1.0.29/src/pcm/pcm_direct.h,6140
#define DIRECT_IPC_SEMS 24,890
#define DIRECT_IPC_SEM_CLIENT 25,924
typedef void (mix_areas_t)27,959
typedef void (mix_areas_16_t)32,1133
typedef void (mix_areas_32_t)37,1335
typedef void (mix_areas_24_t)42,1533
typedef void (mix_areas_u8_t)47,1737
struct slave_params 52,1941
	snd_pcm_format_t format;53,1963
	int rate;54,1989
	int channels;55,2000
	int period_time;56,2015
	int buffer_time;57,2033
	snd_pcm_sframes_t period_size;58,2051
	snd_pcm_sframes_t buffer_size;59,2083
	unsigned int periods;60,2115
	unsigned int magic;65,2240
	char socket_name[socket_name66,2282
	snd_pcm_type_t type;67,2343
	int use_server;68,2402
		unsigned int format;70,2429
		snd_interval_t rate;71,2452
		snd_interval_t buffer_size;72,2475
		snd_interval_t buffer_time;73,2505
		snd_interval_t period_size;74,2535
		snd_interval_t period_time;75,2565
		snd_interval_t periods;76,2595
	} hw;77,2621
		snd_pcm_access_t access;80,2667
		snd_pcm_format_t format;81,2694
		snd_pcm_subformat_t subformat;82,2721
		unsigned int channels;83,2754
		unsigned int rate;84,2779
		unsigned int period_size;85,2800
		unsigned int period_time;86,2828
		snd_interval_t periods;87,2856
		snd_pcm_tstamp_t tstamp_mode;88,2882
		snd_pcm_tstamp_type_t tstamp_type;89,2914
		unsigned int period_step;90,2951
		unsigned int sleep_min;91,2979
		unsigned int avail_min;92,3020
		unsigned int start_threshold;93,3046
		unsigned int stop_threshold;94,3079
		unsigned int silence_threshold;95,3111
		unsigned int silence_size;96,3145
		unsigned int xfer_align;97,3174
		unsigned long long boundary;98,3216
		unsigned int info;99,3247
		unsigned int msbits;100,3268
		unsigned int rate_num;101,3291
		unsigned int rate_den;102,3316
		unsigned int hw_flags;103,3341
		unsigned int fifo_size;104,3366
		unsigned int buffer_size;105,3392
		snd_interval_t buffer_time;106,3420
		unsigned int sample_bits;107,3450
		unsigned int frame_bits;108,3478
	} s;109,3505
			unsigned long long chn_mask;112,3531
		} dshare;113,3563
	} u;114,3575
} snd_pcm_direct_share_t;115,3581
typedef struct snd_pcm_direct snd_pcm_direct_t;117,3608
struct snd_pcm_direct 119,3657
	snd_pcm_type_t type;120,3681
	key_t ipc_key;121,3738
	mode_t ipc_perm;122,3795
	int ipc_gid;123,3843
	int semid;124,3880
	int locked[locked125,3936
	int shmid;126,3991
	snd_pcm_direct_share_t *shmptr;shmptr127,4051
	snd_pcm_t *spcm;spcm128,4120
	snd_pcm_uframes_t appl_ptr;129,4163
	snd_pcm_uframes_t last_appl_ptr;130,4192
	snd_pcm_uframes_t hw_ptr;131,4226
	snd_pcm_uframes_t avail_max;132,4253
	snd_pcm_uframes_t slave_appl_ptr;133,4283
	snd_pcm_uframes_t slave_hw_ptr;134,4318
	snd_pcm_uframes_t slave_period_size;135,4351
	snd_pcm_uframes_t slave_buffer_size;136,4389
	snd_pcm_uframes_t slave_boundary;137,4427
	int (*sync_ptr)sync_ptr138,4462
	snd_pcm_state_t state;139,4496
	snd_htimestamp_t trigger_tstamp;140,4520
	snd_htimestamp_t update_tstamp;141,4554
	int server,142,4587
	int server, client;142,4587
	int comm_fd;143,4608
	int hw_fd;144,4669
	struct pollfd timer_fd;145,4714
	int poll_fd;146,4739
	int tread:tread147,4753
	int timer_need_poll:timer_need_poll148,4768
	unsigned int timer_events;149,4793
	int server_fd;150,4821
	pid_t server_pid;151,4837
	snd_timer_t *timer;timer152,4856
	int interleaved;153,4907
	int slowptr;154,4960
	int max_periods;155,5020
	unsigned int channels;156,5099
	unsigned int *bindings;bindings157,5148
			int shmid_sum;160,5193
			signed int *sum_buffer;sum_buffer161,5268
			mix_areas_16_t *mix_areas_16;mix_areas_16162,5320
			mix_areas_32_t *mix_areas_32;mix_areas_32163,5353
			mix_areas_24_t *mix_areas_24;mix_areas_24164,5386
			mix_areas_u8_t *mix_areas_u8;mix_areas_u8165,5419
			mix_areas_16_t *remix_areas_16;remix_areas_16166,5452
			mix_areas_32_t *remix_areas_32;remix_areas_32167,5487
			mix_areas_24_t *remix_areas_24;remix_areas_24168,5522
			mix_areas_u8_t *remix_areas_u8;remix_areas_u8169,5557
		} dmix;170,5592
		} dsnoop;172,5613
			unsigned long long chn_mask;174,5636
		} dshare;175,5668
	} u;176,5680
	void (*server_free)server_free177,5686
#define snd_pcm_direct_semaphore_create_or_connect 181,5778
#define snd_pcm_direct_shm_create_or_connect 183,5876
#define snd_pcm_direct_shm_discard 185,5962
#define snd_pcm_direct_server_create 187,6028
#define snd_pcm_direct_server_discard 189,6098
#define snd_pcm_direct_client_connect 191,6170
#define snd_pcm_direct_client_discard 193,6242
#define snd_pcm_direct_initialize_slave 195,6314
#define snd_pcm_direct_initialize_secondary_slave 197,6390
#define snd_pcm_direct_initialize_poll_fd 199,6486
#define snd_pcm_direct_check_interleave 201,6566
#define snd_pcm_direct_parse_bindings 203,6642
#define snd_pcm_direct_nonblock 205,6714
#define snd_pcm_direct_async 207,6774
#define snd_pcm_direct_poll_revents 209,6828
#define snd_pcm_direct_info 211,6896
#define snd_pcm_direct_hw_refine 213,6948
#define snd_pcm_direct_hw_params 215,7010
#define snd_pcm_direct_hw_free 217,7072
#define snd_pcm_direct_sw_params 219,7130
#define snd_pcm_direct_channel_info 221,7192
#define snd_pcm_direct_mmap 223,7260
#define snd_pcm_direct_munmap 225,7312
#define snd_pcm_direct_resume 227,7368
#define snd_pcm_direct_timer_stop 229,7424
#define snd_pcm_direct_clear_timer_queue 231,7488
#define snd_pcm_direct_set_timer_params 233,7566
#define snd_pcm_direct_open_secondary_client 235,7642
#define snd_pcm_direct_parse_open_conf 237,7728
#define snd_pcm_direct_query_chmaps 239,7802
#define snd_pcm_direct_get_chmap 241,7870
#define snd_pcm_direct_set_chmap 243,7932
static inline int snd_pcm_direct_semaphore_discard(248,8068
static inline int snd_pcm_direct_semaphore_down(258,8275
static inline int snd_pcm_direct_semaphore_up(266,8528
static inline int snd_pcm_direct_semaphore_final(274,8768
struct snd_pcm_direct_open_conf 320,11282
	key_t ipc_key;321,11316
	mode_t ipc_perm;322,11332
	int ipc_gid;323,11350
	int slowptr;324,11364
	int max_periods;325,11378
	snd_config_t *slave;slave326,11396
	snd_config_t *bindings;bindings327,11418

alsa-lib-1.0.29/src/pcm/pcm_symbols_list.c,1426
&_snd_module_pcm_copy,_snd_module_pcm_copy1,0
&_snd_module_pcm_linear,_snd_module_pcm_linear2,23
&_snd_module_pcm_route,_snd_module_pcm_route3,48
&_snd_module_pcm_mulaw,_snd_module_pcm_mulaw4,72
&_snd_module_pcm_alaw,_snd_module_pcm_alaw5,96
&_snd_module_pcm_adpcm,_snd_module_pcm_adpcm6,119
&_snd_module_pcm_rate,_snd_module_pcm_rate7,143
&_snd_module_pcm_plug,_snd_module_pcm_plug8,166
&_snd_module_pcm_multi,_snd_module_pcm_multi9,189
&_snd_module_pcm_shm,_snd_module_pcm_shm10,213
&_snd_module_pcm_file,_snd_module_pcm_file11,235
&_snd_module_pcm_null,_snd_module_pcm_null12,258
&_snd_module_pcm_empty,_snd_module_pcm_empty13,281
&_snd_module_pcm_share,_snd_module_pcm_share14,305
&_snd_module_pcm_meter,_snd_module_pcm_meter15,329
&_snd_module_pcm_hooks,_snd_module_pcm_hooks16,353
&_snd_module_pcm_lfloat,_snd_module_pcm_lfloat17,377
&_snd_module_pcm_ladspa,_snd_module_pcm_ladspa18,402
&_snd_module_pcm_dmix,_snd_module_pcm_dmix19,427
&_snd_module_pcm_dshare,_snd_module_pcm_dshare20,450
&_snd_module_pcm_dsnoop,_snd_module_pcm_dsnoop21,475
&_snd_module_pcm_asym,_snd_module_pcm_asym22,500
&_snd_module_pcm_iec958,_snd_module_pcm_iec95823,523
&_snd_module_pcm_softvol,_snd_module_pcm_softvol24,548
&_snd_module_pcm_extplug,_snd_module_pcm_extplug25,574
&_snd_module_pcm_ioplug,_snd_module_pcm_ioplug26,600
&_snd_module_pcm_mmap_emul,_snd_module_pcm_mmap_emul27,625

alsa-lib-1.0.29/src/pcm/pcm_empty.c,98
const char *_snd_module_pcm_empty _snd_module_pcm_empty34,1099
int _snd_pcm_empty_open(74,2083

alsa-lib-1.0.29/src/pcm/pcm_plugin.h,1445
typedef snd_pcm_uframes_t (*snd_pcm_slave_xfer_areas_func_t)snd_pcm_slave_xfer_areas_func_t25,919
typedef snd_pcm_sframes_t (*snd_pcm_slave_xfer_areas_undo_func_t)snd_pcm_slave_xfer_areas_undo_func_t34,1237
	snd_pcm_generic_t gen;42,1579
	snd_pcm_slave_xfer_areas_func_t read;43,1603
	snd_pcm_slave_xfer_areas_func_t write;44,1642
	snd_pcm_slave_xfer_areas_undo_func_t undo_read;45,1682
	snd_pcm_slave_xfer_areas_undo_func_t undo_write;46,1731
	int (*init)init47,1781
	snd_pcm_uframes_t appl_ptr,48,1811
	snd_pcm_uframes_t appl_ptr, hw_ptr;48,1811
	snd_atomic_write_t watom;49,1848
} snd_pcm_plugin_t;50,1875
#define snd_pcm_plugin_init 53,1937
#define snd_pcm_plugin_fast_ops 55,1989
#define snd_pcm_plugin_undo_read_generic 57,2049
#define snd_pcm_plugin_undo_write_generic 59,2127
#define snd_pcm_plugin_rewind 61,2207
#define snd_pcm_plugin_forward 63,2263
#define snd_pcm_linear_get_index	87,3261
#define snd_pcm_linear_put_index	88,3320
#define snd_pcm_linear_convert_index	89,3379
#define snd_pcm_linear_convert	90,3446
#define snd_pcm_linear_getput	91,3501
#define snd_pcm_alaw_decode	92,3554
#define snd_pcm_alaw_encode	93,3603
#define snd_pcm_mulaw_decode	94,3652
#define snd_pcm_mulaw_encode	95,3703
#define snd_pcm_adpcm_decode	96,3754
#define snd_pcm_adpcm_encode	97,3805
typedef struct _snd_pcm_adpcm_state 136,5715
	int pred_val;137,5753
	int step_idx;138,5802
} snd_pcm_adpcm_state_t;139,5855

alsa-lib-1.0.29/src/pcm/pcm_ladspa.c,4320
const char *_snd_module_pcm_ladspa _snd_module_pcm_ladspa45,1440
#define NO_ASSIGN	50,1509
typedef enum _snd_pcm_ladspa_policy 52,1539
	SND_PCM_LADSPA_POLICY_NONE,53,1577
	SND_PCM_LADSPA_POLICY_DUPLICATE	54,1631
} snd_pcm_ladspa_policy_t;55,1707
	snd_pcm_plugin_t plug;59,1791
	struct list_head pplugins;61,1843
	struct list_head cplugins;62,1871
	unsigned int channels;63,1899
	unsigned int allocated;64,1963
	LADSPA_Data *zero[zero65,2023
} snd_pcm_ladspa_t;66,2081
        unsigned int size;69,2120
        unsigned int *array;array70,2147
} snd_pcm_ladspa_array_t;71,2176
        snd_pcm_ladspa_array_t channels;74,2220
        snd_pcm_ladspa_array_t ports;75,2261
	LADSPA_Data **m_data;m_data76,2299
        LADSPA_Data **data;data77,2322
} snd_pcm_ladspa_eps_t;78,2350
typedef struct snd_pcm_ladspa_instance 80,2375
	struct list_head list;81,2416
	const LADSPA_Descriptor *desc;desc82,2440
	LADSPA_Handle *handle;handle83,2472
	unsigned int depth;84,2496
	snd_pcm_ladspa_eps_t input;85,2517
	snd_pcm_ladspa_eps_t output;86,2546
	struct snd_pcm_ladspa_instance *prev;prev87,2576
	struct snd_pcm_ladspa_instance *next;next88,2615
} snd_pcm_ladspa_instance_t;89,2654
	LADSPA_PortDescriptor pdesc;92,2701
	unsigned int port_bindings_size;93,2755
	unsigned int *port_bindings;port_bindings94,2809
	unsigned int controls_size;95,2890
	unsigned char *controls_initialized;controls_initialized96,2940
	LADSPA_Data *controls;controls97,3009
} snd_pcm_ladspa_plugin_io_t;98,3075
	struct list_head list;101,3123
	snd_pcm_ladspa_policy_t policy;102,3147
	char *filename;filename103,3180
	void *dl_handle;dl_handle104,3197
	const LADSPA_Descriptor *desc;desc105,3215
	snd_pcm_ladspa_plugin_io_t input;106,3247
	snd_pcm_ladspa_plugin_io_t output;107,3282
	struct list_head instances;108,3318
} snd_pcm_ladspa_plugin_t;109,3401
static unsigned int snd_pcm_ladspa_count_ports(113,3454
static int snd_pcm_ladspa_find_port(124,3845
static int snd_pcm_ladspa_find_sport(142,4243
static int snd_pcm_ladspa_find_port_idx(158,4656
static void snd_pcm_ladspa_free_io(175,5036
static void snd_pcm_ladspa_free_plugins(181,5162
static void snd_pcm_ladspa_free(195,5601
static int snd_pcm_ladspa_close(208,5932
static int snd_pcm_ladspa_hw_refine_cprepare(216,6099
static int snd_pcm_ladspa_hw_refine_sprepare(240,6944
static int snd_pcm_ladspa_hw_refine_schange(254,7599
static int snd_pcm_ladspa_hw_refine_cchange(272,8183
static int snd_pcm_ladspa_hw_refine(290,8766
static int snd_pcm_ladspa_hw_params(300,9118
static void snd_pcm_ladspa_free_eps(313,9501
static void snd_pcm_ladspa_free_instances(319,9622
static int snd_pcm_ladspa_add_to_carray(361,11183
static int snd_pcm_ladspa_add_to_array(386,12039
static int snd_pcm_ladspa_connect_plugin1(406,12728
static int snd_pcm_ladspa_connect_plugin(444,14316
static int snd_pcm_ladspa_connect_plugin_duplicate1(458,14758
static int snd_pcm_ladspa_connect_plugin_duplicate(489,16075
static void snd_pcm_ladspa_get_default_cvalue(506,16601
static int snd_pcm_ladspa_connect_controls(568,19260
static int snd_pcm_ladspa_check_connect(588,19948
static int snd_pcm_ladspa_allocate_instances(611,20916
static LADSPA_Data *snd_pcm_ladspa_allocate_zero(snd_pcm_ladspa_allocate_zero679,23780
static int snd_pcm_ladspa_allocate_memory(686,24035
static int snd_pcm_ladspa_init(823,31396
static int snd_pcm_ladspa_hw_free(842,31837
snd_pcm_ladspa_write_areas(851,32051
snd_pcm_ladspa_read_areas(912,34647
static void snd_pcm_ladspa_dump_direction(972,37205
static void snd_pcm_ladspa_dump_array(999,38399
static void snd_pcm_ladspa_plugins_dump(1021,39217
static void snd_pcm_ladspa_dump(1051,40902
static const snd_pcm_ops_t snd_pcm_ladspa_ops 1068,41433
static int snd_pcm_ladspa_check_file(1086,42051
static int snd_pcm_ladspa_check_dir(1144,44050
static int snd_pcm_ladspa_look_for_plugin(1194,45025
static int snd_pcm_ladspa_add_default_controls(1225,45635
static int snd_pcm_ladspa_parse_controls(1251,46363
static int snd_pcm_ladspa_parse_bindings(1297,47620
static int snd_pcm_ladspa_parse_ioconfig(1371,49785
static int snd_pcm_ladspa_add_plugin(1426,51026
static int snd_pcm_ladspa_build_plugins(1528,53659
int snd_pcm_ladspa_open(1586,55329
int _snd_pcm_ladspa_open(1733,60279

alsa-lib-1.0.29/src/pcm/pcm_misc.c,1022
int snd_pcm_format_signed(35,1164
int snd_pcm_format_unsigned(81,2444
int snd_pcm_format_linear(96,2712
int snd_pcm_format_float(106,2928
int snd_pcm_format_little_endian(124,3346
int snd_pcm_format_big_endian(173,4772
int snd_pcm_format_cpu_endian(188,5095
int snd_pcm_format_width(202,5438
int snd_pcm_format_physical_width(265,7126
ssize_t snd_pcm_format_size(326,8834
u_int64_t snd_pcm_format_silence_64(390,10612
			float f[f469,12983
			u_int64_t i;470,12998
			double f;482,13175
			u_int64_t i;483,13188
			float f[f495,13353
			u_int64_t i;496,13368
			double f;508,13545
			u_int64_t i;509,13558
u_int32_t snd_pcm_format_silence_32(542,14242
u_int16_t snd_pcm_format_silence_16(553,14553
u_int8_t snd_pcm_format_silence(564,14862
int snd_pcm_format_set_silence(577,15214
static const int linear_formats[linear_formats656,16895
static const int linear24_formats[linear24_formats667,17391
snd_pcm_format_t snd_pcm_build_linear_format(684,18125
int snd_pcm_parse_control_id(737,19478

alsa-lib-1.0.29/src/pcm/mask_inline.h,1431
#define MASK_INLINE 24,884
#define MASK_MAX 26,919
#define MASK_SIZE 27,949
#define MASK_OFS(29,984
#define MASK_BIT(30,1015
MASK_INLINE unsigned int ld2(32,1055
MASK_INLINE unsigned int hweight32(57,1525
MASK_INLINE size_t snd_mask_sizeof(66,1862
MASK_INLINE void snd_mask_none(71,1936
MASK_INLINE void snd_mask_any(76,2023
MASK_INLINE int snd_mask_empty(81,2128
MASK_INLINE int snd_mask_full(90,2274
MASK_INLINE unsigned int snd_mask_count(99,2433
MASK_INLINE unsigned int snd_mask_min(107,2594
MASK_INLINE unsigned int snd_mask_max(118,2816
MASK_INLINE void snd_mask_set(129,3039
MASK_INLINE void snd_mask_reset(135,3185
MASK_INLINE void snd_mask_set_range(141,3334
MASK_INLINE void snd_mask_reset_range(149,3561
MASK_INLINE void snd_mask_leave(157,3791
MASK_INLINE void snd_mask_intersect(166,4013
MASK_INLINE void snd_mask_union(173,4165
MASK_INLINE int snd_mask_eq(180,4313
MASK_INLINE void snd_mask_copy(185,4433
MASK_INLINE int snd_mask_test(190,4521
MASK_INLINE int snd_mask_single(196,4679
MASK_INLINE int snd_mask_refine(212,4957
MASK_INLINE int snd_mask_refine_first(224,5232
MASK_INLINE int snd_mask_refine_last(234,5432
MASK_INLINE int snd_mask_refine_min(244,5631
MASK_INLINE int snd_mask_refine_max(256,5894
MASK_INLINE int snd_mask_refine_set(268,6168
MASK_INLINE int snd_mask_value(280,6429
MASK_INLINE int snd_mask_always_eq(286,6549
MASK_INLINE int snd_mask_never_eq(292,6731

alsa-lib-1.0.29/src/pcm/pcm_params.c,5406
static void dump_hw_params(28,971
static inline void dump_hw_params(59,1883
static inline int hw_is_mask(65,2033
static inline int hw_is_interval(75,2267
#define hw_param_mask(81,2420
#define hw_param_interval(84,2514
#define hw_param_mask_c 87,2620
#define hw_param_interval_c 88,2658
static void _snd_pcm_hw_param_any(90,2705
int snd_pcm_hw_param_any(107,3099
void _snd_pcm_hw_params_any(114,3279
int snd_pcm_hw_param_get(130,3814
int snd_pcm_hw_param_get_min(157,4508
int snd_pcm_hw_param_get_max(182,5110
const snd_mask_t *snd_pcm_hw_param_get_mask(snd_pcm_hw_param_get_mask209,5832
const snd_interval_t *snd_pcm_hw_param_get_interval(snd_pcm_hw_param_get_interval219,6172
int _snd_pcm_hw_param_set_interval(228,6404
void _snd_pcm_hw_param_set_empty(242,6745
static int _snd_pcm_hw_param_set_integer(258,7140
int snd_pcm_hw_param_set_integer(275,7641
static int _snd_pcm_hw_param_set_first(311,8259
int snd_pcm_hw_param_set_first(335,8865
static int _snd_pcm_hw_param_set_last(353,9269
int snd_pcm_hw_param_set_last(377,9871
int _snd_pcm_hw_param_set_min(395,10269
int snd_pcm_hw_param_set_min(429,11100
int _snd_pcm_hw_param_set_max(470,12020
int snd_pcm_hw_param_set_max(506,12941
int _snd_pcm_hw_param_set_minmax(547,13861
int snd_pcm_hw_param_set_minmax(617,15361
int _snd_pcm_hw_param_set(661,16365
int snd_pcm_hw_param_set(714,17588
int _snd_pcm_hw_param_set_mask(751,18345
int snd_pcm_hw_param_set_mask(771,19000
int snd_pcm_hw_param_set_near(812,19950
int snd_pcm_hw_param_set_next(889,21998
static int snd_pcm_hw_param_set_near_minmax(953,23527
int snd_pcm_hw_param_refine_near(981,24319
int snd_pcm_hw_param_refine_multiple(999,24820
int snd_pcm_hw_param_empty(1027,25626
int snd_pcm_hw_param_always_eq(1038,25918
int snd_pcm_hw_param_never_eq(1052,26356
#define CHOOSE_DEBUG1067,26793
static int snd_pcm_hw_params_choose(1081,27097
static unsigned int snd_pcm_hw_param_count(1153,29467
int _snd_pcm_hw_param_refine(1169,29876
static void _snd_pcm_hw_param_copy(1192,30521
void snd_pcm_hw_param_dump(1215,31126
#define HW_PARAM(1259,32126
static const char *const snd_pcm_hw_param_names[snd_pcm_hw_param_names1261,32175
const char *snd_pcm_hw_param_name(snd_pcm_hw_param_name1279,32566
struct _snd_pcm_hw_strategy 1288,32744
	unsigned int badness_min,1289,32774
	unsigned int badness_min, badness_max;1289,32774
	int (*choose_param)choose_param1290,32814
	int (*next_value)next_value1293,32940
	int (*min_badness)min_badness1298,33105
	void *private_data;private_data1302,33260
	void (*free)free1303,33281
typedef struct _snd_pcm_hw_strategy_simple snd_pcm_hw_strategy_simple_t;1307,33359
struct _snd_pcm_hw_strategy_simple 1309,33433
	int valid;1310,33470
	unsigned int order;1311,33482
	int (*next_value)next_value1312,33503
	unsigned int (*min_badness)min_badness1317,33670
	void *private_data;private_data1321,33836
	void (*free)free1322,33857
typedef struct _snd_pcm_hw_strategy_simple_near 1325,33916
	int best;1326,33966
	unsigned int mul;1327,33977
} snd_pcm_hw_strategy_simple_near_t;1328,33996
typedef struct _snd_pcm_hw_strategy_simple_choices 1330,34034
	unsigned int count;1331,34087
	snd_pcm_hw_strategy_simple_choices_list_t *choices;choices1333,34162
} snd_pcm_hw_strategy_simple_choices_t;1334,34215
int snd_pcm_hw_params_strategy(1336,34256
void snd_pcm_hw_strategy_simple_free(1383,35509
int snd_pcm_hw_strategy_simple_choose_param(1394,35791
int snd_pcm_hw_strategy_simple_next_value(1423,36613
int snd_pcm_hw_strategy_simple_min_badness(1435,36984
void snd_pcm_hw_strategy_simple_near_free(1456,37567
unsigned int snd_pcm_hw_strategy_simple_near_min_badness(1462,37718
int snd_pcm_hw_strategy_simple_near_next_value(1478,38221
void snd_pcm_hw_strategy_simple_choices_free(1492,38701
unsigned int snd_pcm_hw_strategy_simple_choices_min_badness(1499,38879
int snd_pcm_hw_strategy_simple_choices_next_value(1514,39374
void snd_pcm_hw_strategy_free(1541,40019
int snd_pcm_hw_strategy_simple(1548,40153
int snd_pcm_hw_strategy_simple_near(1574,40878
int snd_pcm_hw_strategy_simple_choices(1600,41588
int snd_pcm_hw_params_try_explain_failure1(1626,42370
int snd_pcm_hw_params_try_explain_failure(1652,43090
typedef struct _snd_pcm_hw_rule snd_pcm_hw_rule_t;1686,43912
typedef int (*snd_pcm_hw_rule_func_t)snd_pcm_hw_rule_func_t1688,43964
struct _snd_pcm_hw_rule 1691,44074
	int var;1692,44100
	snd_pcm_hw_rule_func_t func;1693,44110
	int deps[deps1694,44140
	void *private_data;private_data1695,44154
static int snd_pcm_hw_rule_mul(1698,44179
static int snd_pcm_hw_rule_div(1707,44493
static int snd_pcm_hw_rule_muldivk(1716,44800
static int snd_pcm_hw_rule_mulkdiv(1726,45156
static int snd_pcm_hw_rule_format(1736,45512
static int snd_pcm_hw_rule_sample_bits(1761,46139
static const snd_pcm_hw_rule_t refine_rules[refine_rules1796,46931
#define RULES 1938,50667
static const snd_mask_t refine_masks[refine_masks1940,50731
static const snd_interval_t refine_intervals[refine_intervals1952,51109
#define RULES_DEBUG2004,53131
int snd_pcm_hw_refine_soft(2007,53159
int _snd_pcm_hw_params_refine(2115,56084
int snd_pcm_hw_refine_slave(2133,56552
int snd_pcm_hw_params_slave(2231,59437
static int snd_pcm_sw_params_default(2256,60165
#define REFINE_DEBUG2278,60806
int snd_pcm_hw_refine(2281,60835
int _snd_pcm_hw_params_internal(2314,61681

alsa-lib-1.0.29/src/pcm/interval.c,1011
#define SND_INTERVAL_C22,866
#define SND_INTERVAL_INLINE23,889
static inline void div64_32(29,985
static inline unsigned int div32(35,1087
static inline unsigned int div_down(46,1255
static inline unsigned int div_up(53,1375
static inline unsigned int mul(65,1560
static inline unsigned int add(74,1719
static inline unsigned int sub(81,1845
static inline unsigned int muldiv32(88,1952
int snd_interval_refine_min(105,2250
int snd_interval_refine_max(131,2739
int snd_interval_refine(158,3241
int snd_interval_refine_first(201,4118
int snd_interval_refine_last(214,4343
int snd_interval_refine_set(227,4567
void snd_interval_add(237,4772
void snd_interval_sub(251,5138
void snd_interval_mul(265,5504
void snd_interval_div(279,5870
void snd_interval_muldiv(304,6386
void snd_interval_muldivk(325,6922
void snd_interval_mulkdiv(346,7401
void snd_interval_print(371,7941
static void boundary_abs(388,8426
void boundary_sub(400,8604
int boundary_lt(415,8920
int boundary_nearer(433,9282

alsa-lib-1.0.29/src/pcm/pcm_ext_parm.h,580
struct snd_ext_parm 2,16
	unsigned int min,3,38
	unsigned int min, max;3,38
	unsigned int num_list;4,62
	unsigned int *list;list5,86
	unsigned int active:active6,107
	unsigned int integer:integer7,132
static inline snd_mask_t *hw_param_mask(hw_param_mask10,162
static inline snd_interval_t *hw_param_interval(hw_param_interval16,324
#define snd_ext_parm_set_minmax 23,543
#define snd_ext_parm_set_list 25,603
#define snd_ext_parm_clear 27,659
#define snd_interval_list 29,709
#define snd_ext_parm_interval_refine 31,757
#define snd_ext_parm_mask_refine 33,827

alsa-lib-1.0.29/src/pcm/pcm_meter.c,3902
#define atomic_read(37,1211
#define atomic_add(38,1279
#define atomic_dec(39,1352
const char *_snd_module_pcm_meter _snd_module_pcm_meter43,1469
#define FREQUENCY 47,1536
struct _snd_pcm_scope 49,1558
	int enabled;50,1582
	char *name;name51,1596
	const snd_pcm_scope_ops_t *ops;ops52,1609
	void *private_data;private_data53,1642
	struct list_head list;54,1663
typedef struct _snd_pcm_meter 57,1691
	snd_pcm_generic_t gen;58,1723
	snd_pcm_uframes_t rptr;59,1747
	snd_pcm_uframes_t buf_size;60,1772
	snd_pcm_channel_area_t *buf_areas;buf_areas61,1801
	snd_pcm_uframes_t now;62,1837
	unsigned char *buf;buf63,1861
	struct list_head scopes;64,1882
	int closed;65,1908
	int running;66,1921
	int reset;67,1935
	pthread_t thread;68,1947
	pthread_mutex_t update_mutex;69,1966
	pthread_mutex_t running_mutex;70,1997
	pthread_cond_t running_cond;71,2029
	struct timespec delay;72,2059
	void *dl_handle;dl_handle73,2083
} snd_pcm_meter_t;74,2101
static void snd_pcm_meter_add_frames(76,2121
static void snd_pcm_meter_update_main(102,2888
static int snd_pcm_meter_update_scope(126,3563
static int snd_pcm_scope_remove(158,4359
static int snd_pcm_scope_enable(167,4517
static int snd_pcm_scope_disable(176,4691
static void *snd_pcm_meter_thread(snd_pcm_meter_thread184,4839
static int snd_pcm_meter_close(269,7118
static int snd_pcm_meter_prepare(290,7710
static int snd_pcm_meter_reset(305,8042
static int snd_pcm_meter_start(316,8295
static snd_pcm_sframes_t snd_pcm_meter_rewind(328,8605
static snd_pcm_sframes_t snd_pcm_meter_forward(337,8911
static snd_pcm_sframes_t snd_pcm_meter_mmap_commit(346,9229
static snd_pcm_sframes_t snd_pcm_meter_avail_update(362,9750
static int snd_pcm_meter_hw_refine_cprepare(373,10065
static int snd_pcm_meter_hw_refine_sprepare(385,10439
static int snd_pcm_meter_hw_refine_schange(394,10744
static int snd_pcm_meter_hw_refine_cchange(405,11048
static int snd_pcm_meter_hw_refine_slave(416,11351
static int snd_pcm_meter_hw_params_slave(422,11540
static int snd_pcm_meter_hw_refine(428,11739
static int snd_pcm_meter_hw_params(438,12090
static int snd_pcm_meter_hw_free(478,13360
static void snd_pcm_meter_dump(495,13814
static const snd_pcm_ops_t snd_pcm_meter_ops 507,14143
static const snd_pcm_fast_ops_t snd_pcm_meter_fast_ops 525,14755
int snd_pcm_meter_open(566,16313
static int snd_pcm_meter_add_scope_conf(606,17390
int _snd_pcm_meter_open(755,20999
int snd_pcm_meter_add_scope(845,23278
snd_pcm_scope_t *snd_pcm_meter_search_scope(snd_pcm_meter_search_scope860,23690
snd_pcm_uframes_t snd_pcm_meter_get_bufsize(880,24228
unsigned int snd_pcm_meter_get_channels(894,24572
unsigned int snd_pcm_meter_get_rate(908,24915
snd_pcm_uframes_t snd_pcm_meter_get_now(922,25331
snd_pcm_uframes_t snd_pcm_meter_get_boundary(936,25677
void snd_pcm_scope_set_name(950,26027
const char *snd_pcm_scope_get_name(snd_pcm_scope_get_name960,26245
void snd_pcm_scope_set_ops(970,26454
void *snd_pcm_scope_get_callback_private(snd_pcm_scope_get_callback_private980,26705
void snd_pcm_scope_set_callback_private(990,26951
typedef struct _snd_pcm_scope_s16 996,27078
	snd_pcm_t *pcm;pcm997,27114
	snd_pcm_adpcm_state_t *adpcm_states;adpcm_states998,27131
	unsigned int index;999,27169
	snd_pcm_uframes_t old;1000,27190
	int16_t *buf;buf1001,27214
	snd_pcm_channel_area_t *buf_areas;buf_areas1002,27229
} snd_pcm_scope_s16_t;1003,27265
static int s16_enable(1005,27289
static void s16_disable(1069,28986
static void s16_close(1080,29220
static void s16_start(1086,29332
static void s16_stop(1090,29400
static void s16_update(1094,29467
static void s16_reset(1146,30844
static const snd_pcm_scope_ops_t s16_ops 1153,31018
int snd_pcm_scope_s16_open(1176,31689
int16_t *snd_pcm_scope_s16_get_channel_buffer(snd_pcm_scope_s16_get_channel_buffer1208,32437
int snd_pcm_scope_malloc(1227,32997

alsa-lib-1.0.29/src/pcm/pcm_file.c,2673
const char *_snd_module_pcm_file _snd_module_pcm_file37,1180
#define LEADING_KEY	43,1304
#define RATE_KEY	44,1354
#define CHANNELS_KEY	45,1375
#define BWIDTH_KEY	46,1400
#define FORMAT_KEY	47,1423
#define VALUE_MAXLEN	50,1479
typedef enum _snd_pcm_file_format 52,1504
	SND_PCM_FILE_FORMAT_RAW,53,1540
	SND_PCM_FILE_FORMAT_WAV54,1566
} snd_pcm_file_format_t;55,1591
struct wav_fmt 58,1640
	short fmt;59,1657
	short chan;60,1669
	int rate;61,1682
	int bps;62,1693
	short bwidth;63,1703
	short bits;64,1718
	snd_pcm_generic_t gen;68,1752
	char *fname;fname69,1776
	char *final_fname;final_fname70,1790
	int trunc;71,1810
	int perm;72,1822
	int fd;73,1833
	char *ifname;ifname74,1842
	int ifd;75,1857
	int format;76,1867
	snd_pcm_uframes_t appl_ptr;77,1880
	snd_pcm_uframes_t file_ptr_bytes;78,1909
	snd_pcm_uframes_t wbuf_size;79,1944
	size_t wbuf_size_bytes;80,1974
	size_t wbuf_used_bytes;81,1999
	char *wbuf;wbuf82,2024
	size_t rbuf_size_bytes;83,2037
	size_t rbuf_used_bytes;84,2062
	char *rbuf;rbuf85,2087
	snd_pcm_channel_area_t *wbuf_areas;wbuf_areas86,2100
	size_t buffer_bytes;87,2137
	struct wav_fmt wav_header;88,2159
	size_t filelen;89,2187
} snd_pcm_file_t;90,2204
#define TO_LE32(93,2259
#define TO_LE16(94,2282
#define TO_LE32(96,2311
#define TO_LE16(97,2342
static int snd_pcm_file_append_value(100,2381
static int snd_pcm_file_replace_fname(128,3042
static int snd_pcm_file_open_output_file(207,5028
static void setup_wav_header(269,6449
static int write_wav_header(282,6839
static void fixup_wav_header(311,7543
static void snd_pcm_file_write_bytes(339,8140
static void snd_pcm_file_add_frames(372,8934
static int snd_pcm_file_close(401,9904
static int snd_pcm_file_reset(419,10261
static int snd_pcm_file_drop(431,10558
static int snd_pcm_file_drain(443,10853
static snd_pcm_sframes_t snd_pcm_file_rewindable(454,11117
static snd_pcm_sframes_t snd_pcm_file_rewind(464,11406
static snd_pcm_sframes_t snd_pcm_file_forwardable(482,11958
static snd_pcm_sframes_t snd_pcm_file_forward(492,12273
static snd_pcm_sframes_t snd_pcm_file_writei(510,12867
static snd_pcm_sframes_t snd_pcm_file_writen(522,13263
static snd_pcm_sframes_t snd_pcm_file_readi(534,13641
static snd_pcm_sframes_t snd_pcm_file_readn(551,14039
static snd_pcm_sframes_t snd_pcm_file_mmap_commit(565,14401
static int snd_pcm_file_hw_free(583,14949
static int snd_pcm_file_hw_params(595,15230
static void snd_pcm_file_dump(635,16501
static const snd_pcm_ops_t snd_pcm_file_ops 654,17035
static const snd_pcm_fast_ops_t snd_pcm_file_fast_ops 672,17644
int snd_pcm_file_open(723,19706
int _snd_pcm_file_open(859,23492

alsa-lib-1.0.29/src/pcm/pcm_dmix_i386.h,183
static void MIX_AREAS_16(32,1090
static void MIX_AREAS_16_MMX(156,3265
static void MIX_AREAS_32(246,5118
static void MIX_AREAS_24(359,7282
static void MIX_AREAS_24_CMOV(465,9382

alsa-lib-1.0.29/src/pcm/pcm_rate.c,3571
#define DEBUG_REFINE40,1298
const char *_snd_module_pcm_rate _snd_module_pcm_rate45,1370
typedef struct _snd_pcm_rate snd_pcm_rate_t;50,1437
struct _snd_pcm_rate 52,1483
	snd_pcm_generic_t gen;53,1506
	snd_atomic_write_t watom;54,1530
	snd_pcm_uframes_t appl_ptr,55,1557
	snd_pcm_uframes_t appl_ptr, hw_ptr;55,1557
	snd_pcm_uframes_t last_commit_ptr;56,1594
	snd_pcm_uframes_t orig_avail_min;57,1630
	snd_pcm_sw_params_t sw_params;58,1665
	snd_pcm_format_t sformat;59,1697
	unsigned int srate;60,1724
	snd_pcm_channel_area_t *pareas;pareas61,1745
	snd_pcm_channel_area_t *sareas;sareas62,1821
	snd_pcm_rate_info_t info;63,1898
	void *open_func;open_func64,1925
	void *obj;obj65,1943
	snd_pcm_rate_ops_t ops;66,1955
	unsigned int get_idx;67,1980
	unsigned int put_idx;68,2003
	int16_t *src_buf;src_buf69,2026
	int16_t *dst_buf;dst_buf70,2045
	int start_pending;71,2064
	snd_htimestamp_t trigger_tstamp;72,2135
	unsigned int plugin_version;73,2169
	unsigned int rate_min,74,2199
	unsigned int rate_min, rate_max;74,2199
#define SND_PCM_RATE_PLUGIN_VERSION_OLD	77,2237
static int snd_pcm_rate_hw_refine_cprepare(81,2334
static int snd_pcm_rate_hw_refine_sprepare(114,3324
static int snd_pcm_rate_hw_refine_schange(130,3939
static int snd_pcm_rate_hw_refine_cchange(159,5061
static int snd_pcm_rate_hw_refine(229,7865
static int snd_pcm_rate_hw_params(240,8214
static int snd_pcm_rate_hw_free(337,11266
static void recalc(354,11659
static int snd_pcm_rate_sw_params(371,12080
static int snd_pcm_rate_init(420,13668
static void convert_to_s16(431,13879
#define GET16_LABELS437,14088
#undef GET16_LABELS439,14133
#define GET16_END 458,14582
#undef GET16_END460,14634
static void convert_from_s16(469,14745
#define PUT16_LABELS475,14968
#undef PUT16_LABELS477,15013
#define PUT16_END 497,15470
#undef PUT16_END499,15522
static void do_convert(507,15613
snd_pcm_rate_write_areas1(539,16641
snd_pcm_rate_read_areas1(552,17038
static inline void snd_pcm_rate_sync_hwptr(564,17415
static int snd_pcm_rate_hwsync(581,17952
static int snd_pcm_rate_delay(593,18237
static int snd_pcm_rate_prepare(600,18392
static int snd_pcm_rate_reset(620,18797
static snd_pcm_sframes_t snd_pcm_rate_rewindable(639,19197
static snd_pcm_sframes_t snd_pcm_rate_forwardable(644,19295
static snd_pcm_sframes_t snd_pcm_rate_rewind(649,19394
static snd_pcm_sframes_t snd_pcm_rate_forward(655,19583
static int snd_pcm_rate_commit_area(661,19774
static int snd_pcm_rate_commit_next_period(768,22809
static int snd_pcm_rate_grab_next_period(776,23059
static int snd_pcm_rate_sync_playback_area(880,26149
static snd_pcm_sframes_t snd_pcm_rate_mmap_commit(912,27083
static snd_pcm_sframes_t snd_pcm_rate_avail_update(932,27597
static int snd_pcm_rate_htimestamp(970,28740
static int snd_pcm_rate_poll_revents(996,29347
static int snd_pcm_rate_drain(1007,29767
static snd_pcm_state_t snd_pcm_rate_state(1049,30936
static int snd_pcm_rate_start(1058,31160
static int snd_pcm_rate_status(1084,31831
static void snd_pcm_rate_dump(1121,32989
static int snd_pcm_rate_close(1142,33651
static const snd_pcm_fast_ops_t snd_pcm_rate_fast_ops 1153,33896
static const snd_pcm_ops_t snd_pcm_rate_ops 1182,34936
const snd_config_t *snd_pcm_rate_get_default_converter(snd_pcm_rate_get_default_converter1205,35676
static int is_builtin_plugin(1215,35916
static const char *const default_rate_plugins[default_rate_plugins1220,36005
static int rate_open_func(1224,36090
int snd_pcm_rate_open(1281,37877
int _snd_pcm_rate_open(1431,41801

alsa-lib-1.0.29/src/pcm/pcm_extplug.c,1999
const char *_snd_module_pcm_extplug _snd_module_pcm_extplug36,1159
typedef struct snd_pcm_extplug_priv 41,1229
	snd_pcm_plugin_t plug;42,1267
	snd_pcm_extplug_t *data;data43,1291
	struct snd_ext_parm params[params44,1317
	struct snd_ext_parm sparams[sparams45,1373
} extplug_priv_t;46,1430
static const int hw_params_type[hw_params_type48,1449
#define is_mask_type(53,1631
static const unsigned int excl_parbits[excl_parbits55,1710
int snd_ext_parm_set_minmax(66,2078
static int val_compar(80,2367
int snd_ext_parm_set_list(85,2489
void snd_ext_parm_clear(102,2929
int snd_interval_list(111,3084
int snd_ext_parm_interval_refine(148,3830
int snd_ext_parm_mask_refine(169,4351
static int extplug_hw_refine(185,4693
static int snd_pcm_extplug_hw_refine_cprepare(204,5181
static int snd_pcm_extplug_hw_refine_sprepare(221,5668
static unsigned int get_links(233,6054
static int snd_pcm_extplug_hw_refine_schange(256,6732
static int snd_pcm_extplug_hw_refine_cchange(266,7027
static int snd_pcm_extplug_hw_refine(276,7320
static int snd_pcm_extplug_hw_params(290,7722
static int snd_pcm_extplug_hw_free(321,8686
snd_pcm_extplug_write_areas(335,9001
snd_pcm_extplug_read_areas(357,9602
static int snd_pcm_extplug_init(378,10145
static void snd_pcm_extplug_dump(387,10307
static void clear_ext_params(407,10825
static int snd_pcm_extplug_close(416,11021
static snd_pcm_chmap_query_t **snd_pcm_extplug_query_chmaps(snd_pcm_extplug_query_chmaps428,11276
static snd_pcm_chmap_t *snd_pcm_extplug_get_chmap(snd_pcm_extplug_get_chmap438,11577
static int snd_pcm_extplug_set_chmap(448,11859
static const snd_pcm_ops_t snd_pcm_extplug_ops 458,12166
int snd_pcm_extplug_create(663,19168
int snd_pcm_extplug_delete(736,21158
void snd_pcm_extplug_params_reset(748,21398
int snd_pcm_extplug_set_slave_param_list(766,21961
int snd_pcm_extplug_set_slave_param_minmax(788,22772
int snd_pcm_extplug_set_param_list(814,23669
int snd_pcm_extplug_set_param_minmax(836,24481

alsa-lib-1.0.29/src/pcm/pcm_shm.c,2249
const char *_snd_module_pcm_shm _snd_module_pcm_shm50,1466
	int socket;55,1548
	volatile snd_pcm_shm_ctrl_t *ctrl;ctrl56,1561
} snd_pcm_shm_t;57,1597
static long snd_pcm_shm_action_fd0(60,1622
static int snd_pcm_shm_new_rbptr(80,2052
static long snd_pcm_shm_action(112,3152
static long snd_pcm_shm_action_fd(147,3940
static int snd_pcm_shm_nonblock(181,4728
static int snd_pcm_shm_async(186,4840
static int snd_pcm_shm_info(196,5118
static int snd_pcm_shm_hw_refine_cprepare(210,5445
static int snd_pcm_shm_hw_refine_sprepare(215,5582
static int snd_pcm_shm_hw_refine_schange(224,5885
static int snd_pcm_shm_hw_refine_cchange(243,6576
static int snd_pcm_shm_hw_refine_slave(262,7266
static int snd_pcm_shm_hw_refine(275,7610
static int snd_pcm_shm_hw_params_slave(285,7949
static int snd_pcm_shm_hw_params(299,8345
static int snd_pcm_shm_hw_free(308,8642
static int snd_pcm_shm_sw_params(316,8854
static int snd_pcm_shm_mmap(330,9210
static int snd_pcm_shm_munmap(335,9287
static int snd_pcm_shm_channel_info(363,9908
static int snd_pcm_shm_status(389,10456
static snd_pcm_state_t snd_pcm_shm_state(403,10800
static int snd_pcm_shm_hwsync(411,11018
static int snd_pcm_shm_delay(419,11226
static snd_pcm_sframes_t snd_pcm_shm_avail_update(432,11544
static int snd_pcm_shm_htimestamp(444,11828
static int snd_pcm_shm_prepare(451,12038
static int snd_pcm_shm_reset(459,12250
static int snd_pcm_shm_start(467,12458
static int snd_pcm_shm_drop(475,12666
static int snd_pcm_shm_drain(483,12872
static int snd_pcm_shm_pause(502,13264
static snd_pcm_sframes_t snd_pcm_shm_rewindable(511,13516
static snd_pcm_sframes_t snd_pcm_shm_rewind(516,13626
static snd_pcm_sframes_t snd_pcm_shm_forwardable(525,13909
static snd_pcm_sframes_t snd_pcm_shm_forward(530,14020
static int snd_pcm_shm_resume(539,14304
static snd_pcm_sframes_t snd_pcm_shm_mmap_commit(547,14514
static int snd_pcm_shm_poll_descriptor(559,14901
static int snd_pcm_shm_close(571,15188
static void snd_pcm_shm_dump(585,15502
static const snd_pcm_ops_t snd_pcm_shm_ops 594,15708
static const snd_pcm_fast_ops_t snd_pcm_shm_fast_ops 609,16151
static int make_local_socket(634,16930
int snd_pcm_shm_open(670,17886
int _snd_pcm_shm_open(810,20922

alsa-lib-1.0.29/src/pcm/pcm_linear.c,1274
const char *_snd_module_pcm_linear _snd_module_pcm_linear37,1187
	snd_pcm_plugin_t plug;43,1311
	unsigned int use_getput;44,1335
	unsigned int conv_idx;45,1361
	unsigned int get_idx,46,1385
	unsigned int get_idx, put_idx;46,1385
	snd_pcm_format_t sformat;47,1417
} snd_pcm_linear_t;48,1444
int snd_pcm_linear_convert_index(53,1492
int snd_pcm_linear_get_index(79,2264
int snd_pcm_linear_put_index(110,3015
void snd_pcm_linear_convert(141,3766
#define CONV_LABELS146,4030
#undef CONV_LABELS148,4074
#define CONV_END 165,4694
#undef CONV_END167,4741
void snd_pcm_linear_getput(175,4816
#define CONV24_LABELS180,5098
#undef CONV24_LABELS182,5144
#define CONV24_END 201,5824
#undef CONV24_END203,5873
static int snd_pcm_linear_hw_refine_cprepare(213,5975
static int snd_pcm_linear_hw_refine_sprepare(233,6630
static int snd_pcm_linear_hw_refine_schange(245,7091
static int snd_pcm_linear_hw_refine_cchange(263,7675
static int snd_pcm_linear_hw_refine(281,8258
static int snd_pcm_linear_hw_params(291,8610
snd_pcm_linear_write_areas(327,9912
snd_pcm_linear_read_areas(352,10661
static void snd_pcm_linear_dump(376,11378
static const snd_pcm_ops_t snd_pcm_linear_ops 389,11774
int snd_pcm_linear_open(420,12898
int _snd_pcm_linear_open(502,15330

alsa-lib-1.0.29/src/pcm/atomic.c,34
void snd_atomic_read_wait(26,941

alsa-lib-1.0.29/src/pcm/pcm_plugin.c,1002
snd_pcm_plugin_undo_read(93,2288
snd_pcm_plugin_undo_write(103,2608
snd_pcm_plugin_undo_read_generic(113,2926
snd_pcm_plugin_undo_write_generic(123,3245
void snd_pcm_plugin_init(132,3551
static int snd_pcm_plugin_delay(140,3789
static int snd_pcm_plugin_prepare(157,4279
static int snd_pcm_plugin_reset(178,4719
static snd_pcm_sframes_t snd_pcm_plugin_rewindable(199,5155
snd_pcm_sframes_t snd_pcm_plugin_rewind(204,5268
static snd_pcm_sframes_t snd_pcm_plugin_forwardable(227,5910
snd_pcm_sframes_t snd_pcm_plugin_forward(232,6016
static snd_pcm_sframes_t snd_pcm_plugin_write_areas(255,6668
static snd_pcm_sframes_t snd_pcm_plugin_read_areas(302,8266
snd_pcm_plugin_writei(351,9836
snd_pcm_plugin_writen(360,10132
snd_pcm_plugin_readi(369,10412
snd_pcm_plugin_readn(378,10690
snd_pcm_plugin_mmap_commit(387,10966
static snd_pcm_sframes_t snd_pcm_plugin_avail_update(455,12994
static int snd_pcm_plugin_status(519,15056
const snd_pcm_fast_ops_t snd_pcm_plugin_fast_ops 544,15681

alsa-lib-1.0.29/src/pcm/ladspa.h,3540
#define LADSPA_INCLUDED23,936
#define LADSPA_VERSION 25,961
#define LADSPA_VERSION_MAJOR 26,990
#define LADSPA_VERSION_MINOR 27,1021
typedef float LADSPA_Data;84,3720
typedef int LADSPA_Properties;94,4019
#define LADSPA_PROPERTY_REALTIME 99,4254
#define LADSPA_PROPERTY_INPLACE_BROKEN 106,4630
#define LADSPA_PROPERTY_HARD_RT_CAPABLE 132,5877
#define LADSPA_IS_REALTIME(134,5922
#define LADSPA_IS_INPLACE_BROKEN(135,5992
#define LADSPA_IS_HARD_RT_CAPABLE(136,6068
typedef int LADSPA_PortDescriptor;152,6725
#define LADSPA_PORT_INPUT 155,6831
#define LADSPA_PORT_OUTPUT 158,6936
#define LADSPA_PORT_CONTROL 162,7050
#define LADSPA_PORT_AUDIO 166,7160
#define LADSPA_IS_PORT_INPUT(168,7193
#define LADSPA_IS_PORT_OUTPUT(169,7253
#define LADSPA_IS_PORT_CONTROL(170,7314
#define LADSPA_IS_PORT_AUDIO(171,7376
typedef int LADSPA_PortRangeHintDescriptor;200,8659
#define LADSPA_HINT_BOUNDED_BELOW 208,9061
#define LADSPA_HINT_BOUNDED_ABOVE 216,9459
#define LADSPA_HINT_TOGGLED 224,9868
#define LADSPA_HINT_SAMPLE_RATE 232,10303
#define LADSPA_HINT_LOGARITHMIC 237,10552
#define LADSPA_HINT_INTEGER 245,10944
#define LADSPA_HINT_DEFAULT_MASK 258,11683
#define LADSPA_HINT_DEFAULT_NONE 261,11791
#define LADSPA_HINT_DEFAULT_MINIMUM 265,11929
#define LADSPA_HINT_DEFAULT_LOW 272,12253
#define LADSPA_HINT_DEFAULT_MIDDLE 279,12576
#define LADSPA_HINT_DEFAULT_HIGH 286,12901
#define LADSPA_HINT_DEFAULT_MAXIMUM 290,13041
#define LADSPA_HINT_DEFAULT_0 295,13234
#define LADSPA_HINT_DEFAULT_1 300,13427
#define LADSPA_HINT_DEFAULT_100 303,13540
#define LADSPA_HINT_DEFAULT_440 308,13785
#define LADSPA_IS_HINT_BOUNDED_BELOW(310,13828
#define LADSPA_IS_HINT_BOUNDED_ABOVE(311,13904
#define LADSPA_IS_HINT_TOGGLED(312,13980
#define LADSPA_IS_HINT_SAMPLE_RATE(313,14050
#define LADSPA_IS_HINT_LOGARITHMIC(314,14124
#define LADSPA_IS_HINT_INTEGER(315,14198
#define LADSPA_IS_HINT_HAS_DEFAULT(317,14269
#define LADSPA_IS_HINT_DEFAULT_MINIMUM(318,14344
#define LADSPA_IS_HINT_DEFAULT_LOW(320,14499
#define LADSPA_IS_HINT_DEFAULT_MIDDLE(322,14650
#define LADSPA_IS_HINT_DEFAULT_HIGH(324,14804
#define LADSPA_IS_HINT_DEFAULT_MAXIMUM(326,14956
#define LADSPA_IS_HINT_DEFAULT_0(328,15111
#define LADSPA_IS_HINT_DEFAULT_1(330,15260
#define LADSPA_IS_HINT_DEFAULT_100(332,15409
#define LADSPA_IS_HINT_DEFAULT_440(334,15560
typedef struct _LADSPA_PortRangeHint 337,15713
  LADSPA_PortRangeHintDescriptor HintDescriptor;340,15783
  LADSPA_Data LowerBound;345,16019
  LADSPA_Data UpperBound;350,16232
} LADSPA_PortRangeHint;352,16259
typedef void * LADSPA_Handle;363,16644
typedef struct _LADSPA_Descriptor 373,16977
  unsigned long UniqueID;379,17228
  const char * Label;386,17576
  LADSPA_Properties Properties;389,17660
  const char * Name;393,17793
  const char * Maker;397,17955
  const char * Copyright;402,18152
  unsigned long PortCount;406,18269
  const LADSPA_PortDescriptor * PortDescriptors;410,18404
  const char * const * PortNames;415,18614
  const LADSPA_PortRangeHint * PortRangeHints;419,18777
  void * ImplementationData;426,19129
  LADSPA_Handle (*instantiate)instantiate437,19622
   void (*connect_port)connect_port466,21265
  void (*activate)activate489,22538
  void (*run)run505,23315
  void (*run_adding)run_adding521,24153
  void (*set_run_adding_gain)set_run_adding_gain533,24713
  void (*deactivate)deactivate549,25536
  void (*cleanup)cleanup558,25912
} LADSPA_Descriptor;560,25956
(*LADSPA_Descriptor_Function)LADSPA_Descriptor_Function593,27397

alsa-lib-1.0.29/src/pcm/pcm_asym.c,94
const char *_snd_module_pcm_asym _snd_module_pcm_asym13,222
int _snd_pcm_asym_open(77,1947

alsa-lib-1.0.29/src/pcm/pcm_dmix_x86_64.c,1339
#define MIX_AREAS_16 5,44
#define MIX_AREAS_32 6,78
#define MIX_AREAS_24 7,112
#define LOCK_PREFIX 8,146
#define XADD 9,169
#define XSUB 10,189
#undef MIX_AREAS_1612,238
#undef MIX_AREAS_3213,258
#undef MIX_AREAS_2414,278
#undef LOCK_PREFIX15,298
#undef XADD16,317
#undef XSUB17,329
#define MIX_AREAS_16 19,342
#define MIX_AREAS_32 20,378
#define MIX_AREAS_24 21,414
#define LOCK_PREFIX 22,450
#define XADD 23,473
#define XSUB 24,493
#undef MIX_AREAS_1626,542
#undef MIX_AREAS_3227,562
#undef MIX_AREAS_2428,582
#undef LOCK_PREFIX29,602
#undef XADD30,621
#undef XSUB31,633
#define MIX_AREAS_16 33,646
#define MIX_AREAS_32 34,684
#define MIX_AREAS_24 35,722
#define LOCK_PREFIX 36,760
#define XADD 37,790
#define XSUB 38,810
#undef MIX_AREAS_1640,859
#undef MIX_AREAS_3241,879
#undef MIX_AREAS_2442,899
#undef LOCK_PREFIX43,919
#undef XADD44,938
#undef XSUB45,950
#define MIX_AREAS_16 47,964
#define MIX_AREAS_32 48,1004
#define MIX_AREAS_24 49,1044
#define LOCK_PREFIX 50,1084
#define XADD 51,1114
#define XSUB 52,1134
#undef MIX_AREAS_1654,1183
#undef MIX_AREAS_3255,1203
#undef MIX_AREAS_2456,1223
#undef LOCK_PREFIX57,1243
#undef XADD58,1262
#undef XSUB59,1274
#define x86_64_dmix_supported_format 61,1288
#define dmix_supported_format 66,1438
static void mix_select_callbacks(69,1535

alsa-lib-1.0.29/src/pcm/pcm_ioplug.c,3313
const char *_snd_module_pcm_ioplug _snd_module_pcm_ioplug36,1143
typedef struct snd_pcm_ioplug_priv 42,1228
	snd_pcm_ioplug_t *data;data43,1265
	struct snd_ext_parm params[params44,1290
	unsigned int last_hw;45,1345
	snd_pcm_uframes_t avail_max;46,1368
	snd_htimestamp_t trigger_tstamp;47,1398
} ioplug_priv_t;48,1432
static void snd_pcm_ioplug_hw_ptr_update(51,1478
static int snd_pcm_ioplug_info(69,1929
static int snd_pcm_ioplug_channel_info(83,2332
static int snd_pcm_ioplug_status(88,2471
static snd_pcm_state_t snd_pcm_ioplug_state(101,2835
static int snd_pcm_ioplug_hwsync(107,2965
static int snd_pcm_ioplug_delay(113,3066
static int snd_pcm_ioplug_reset(127,3410
static int snd_pcm_ioplug_prepare(138,3601
static const int hw_params_type[hw_params_type149,3861
static int rule_mul(160,4354
static int rule_div(170,4615
static int rule_muldivk(180,4880
static int rule_mulkdiv(190,5167
static void dump_parm(200,5440
static int refine_time_and_size(210,5680
static int refine_back_time_and_size(232,6188
static int snd_pcm_ioplug_hw_refine(249,6597
static int snd_pcm_ioplug_hw_params(395,10843
static int snd_pcm_ioplug_hw_free(420,11993
static int snd_pcm_ioplug_sw_params(429,12182
static int snd_pcm_ioplug_start(439,12415
static int snd_pcm_ioplug_drop(457,12768
static int snd_pcm_ioplug_drain(472,13068
static int snd_pcm_ioplug_pause(483,13329
static snd_pcm_sframes_t snd_pcm_ioplug_rewindable(504,13801
static snd_pcm_sframes_t snd_pcm_ioplug_rewind(509,13914
static snd_pcm_sframes_t snd_pcm_ioplug_forwardable(515,14066
static snd_pcm_sframes_t snd_pcm_ioplug_forward(520,14172
static int snd_pcm_ioplug_resume(526,14324
static snd_pcm_sframes_t ioplug_priv_transfer_areas(535,14503
static snd_pcm_sframes_t snd_pcm_ioplug_writei(554,15002
static snd_pcm_sframes_t snd_pcm_ioplug_writen(566,15381
static snd_pcm_sframes_t snd_pcm_ioplug_readi(578,15742
static snd_pcm_sframes_t snd_pcm_ioplug_readn(590,16103
static snd_pcm_sframes_t snd_pcm_ioplug_mmap_commit(602,16460
static snd_pcm_sframes_t snd_pcm_ioplug_avail_update(622,17048
static int snd_pcm_ioplug_nonblock(650,17886
static int snd_pcm_ioplug_poll_descriptors_count(658,18040
static int snd_pcm_ioplug_poll_descriptors(668,18281
static int snd_pcm_ioplug_poll_revents(685,18724
static int snd_pcm_ioplug_mmap(696,19048
static int snd_pcm_ioplug_async(701,19128
static int snd_pcm_ioplug_munmap(708,19277
static snd_pcm_chmap_query_t **snd_pcm_ioplug_query_chmaps(snd_pcm_ioplug_query_chmaps713,19359
static snd_pcm_chmap_t *snd_pcm_ioplug_get_chmap(snd_pcm_ioplug_get_chmap723,19624
static int snd_pcm_ioplug_set_chmap(733,19873
static void snd_pcm_ioplug_dump(743,20144
static void clear_io_params(761,20571
static int snd_pcm_ioplug_close(768,20717
static const snd_pcm_ops_t snd_pcm_ioplug_ops 780,20927
static const snd_pcm_fast_ops_t snd_pcm_ioplug_fast_ops 798,21535
int snd_pcm_ioplug_create(938,27230
int snd_pcm_ioplug_delete(990,28423
void snd_pcm_ioplug_params_reset(1002,28655
int snd_pcm_ioplug_set_param_list(1019,29176
int snd_pcm_ioplug_set_param_minmax(1043,30012
int snd_pcm_ioplug_reinit_status(1068,30891
const snd_pcm_channel_area_t *snd_pcm_ioplug_mmap_areas(snd_pcm_ioplug_mmap_areas1088,31532
int snd_pcm_ioplug_set_state(1105,32021

alsa-lib-1.0.29/src/pcm/pcm_plug.c,2433
const char *_snd_module_pcm_plug _snd_module_pcm_plug34,1121
enum snd_pcm_plug_route_policy 39,1188
	PLUG_ROUTE_POLICY_NONE,40,1221
	PLUG_ROUTE_POLICY_DEFAULT,41,1246
	PLUG_ROUTE_POLICY_COPY,42,1274
	PLUG_ROUTE_POLICY_AVERAGE,43,1299
	PLUG_ROUTE_POLICY_DUP,44,1327
	snd_pcm_generic_t gen;48,1372
	snd_pcm_t *req_slave;req_slave49,1396
	snd_pcm_format_t sformat;50,1419
	int schannels;51,1446
	int srate;52,1462
	const snd_config_t *rate_converter;rate_converter53,1474
	enum snd_pcm_plug_route_policy route_policy;54,1511
	snd_pcm_route_ttable_entry_t *ttable;ttable55,1557
	int ttable_ok;56,1596
	unsigned int tt_ssize,57,1612
	unsigned int tt_ssize, tt_cused,57,1612
	unsigned int tt_ssize, tt_cused, tt_sused;57,1612
} snd_pcm_plug_t;58,1656
static int snd_pcm_plug_close(62,1683
static int snd_pcm_plug_info(79,2095
static const snd_pcm_format_t linear_preferred_formats[linear_preferred_formats90,2328
#define BUILD_PCM_NONLINEAR175,4202
static const snd_pcm_format_t nonlinear_preferred_formats[nonlinear_preferred_formats179,4265
static const snd_pcm_format_t float_preferred_formats[float_preferred_formats193,4555
static const char linear_format_widths[linear_format_widths208,4880
static int check_linear_format(215,5031
static snd_pcm_format_t snd_pcm_plug_slave_format(237,5590
static void snd_pcm_plug_clear(331,8255
	snd_pcm_access_t access;348,8717
	snd_pcm_format_t format;349,8743
	unsigned int channels;350,8769
	unsigned int rate;351,8793
} snd_pcm_plug_params_t;352,8813
static int snd_pcm_plug_change_rate(356,8875
static int snd_pcm_plug_change_channels(376,9482
static int snd_pcm_plug_change_format(478,12454
static int snd_pcm_plug_change_access(572,14804
static int snd_pcm_plug_change_mmap(586,15225
static int snd_pcm_plug_insert_plugins(623,16042
static int snd_pcm_plug_hw_refine_cprepare(670,17245
static int snd_pcm_plug_hw_refine_sprepare(696,18110
static int check_access_change(719,18833
static int snd_pcm_plug_hw_refine_schange(766,20572
static int snd_pcm_plug_hw_refine_cchange(866,23975
static int snd_pcm_plug_hw_refine_slave(972,27543
static int snd_pcm_plug_hw_refine(978,27728
static int snd_pcm_plug_hw_params(988,28073
static int snd_pcm_plug_hw_free(1042,29932
static void snd_pcm_plug_dump(1051,30139
static const snd_pcm_ops_t snd_pcm_plug_ops 1058,30328
int snd_pcm_plug_open(1088,31421
int _snd_pcm_plug_open(1198,34747

alsa-lib-1.0.29/src/pcm/mask.c,57
#define SND_MASK_C22,862
#define SND_MASK_INLINE23,881

alsa-lib-1.0.29/src/pcm/mask.h,73
typedef struct _snd_mask snd_mask_t;22,859
#define SND_MASK_MAX 24,897

alsa-lib-1.0.29/src/pcm/pcm_simple.c,206
static int set_buffer_time(28,941
static int set_hw_params(47,1292
static int set_sw_params(110,2970
int snd_spcm_init(157,4237
int snd_spcm_init_duplex(212,5644
int snd_spcm_init_get_params(290,7589

alsa-lib-1.0.29/src/pcm/pcm_mulaw.c,1209
const char *_snd_module_pcm_mulaw _snd_module_pcm_mulaw37,1186
typedef void (*mulaw_f)mulaw_f42,1254
	snd_pcm_plugin_t plug;51,1566
	unsigned int getput_idx;52,1590
	mulaw_f func;53,1616
	snd_pcm_format_t sformat;54,1631
} snd_pcm_mulaw_t;55,1658
static inline int val_seg(59,1686
static unsigned char s16_to_ulaw(106,3031
static int ulaw_to_s16(142,3919
void snd_pcm_mulaw_decode(161,4299
#define PUT16_LABELS168,4564
#undef PUT16_LABELS170,4609
#define PUT16_END 188,5276
#undef PUT16_END190,5324
void snd_pcm_mulaw_encode(198,5400
#define GET16_LABELS205,5665
#undef GET16_LABELS207,5710
#define GET16_END 225,6350
#undef GET16_END227,6398
static int snd_pcm_mulaw_hw_refine_cprepare(238,6530
static int snd_pcm_mulaw_hw_refine_sprepare(262,7326
static int snd_pcm_mulaw_hw_refine_schange(274,7783
static int snd_pcm_mulaw_hw_refine_cchange(292,8366
static int snd_pcm_mulaw_hw_refine(310,8948
static int snd_pcm_mulaw_hw_params(320,9295
snd_pcm_mulaw_write_areas(357,10482
snd_pcm_mulaw_read_areas(377,11023
static void snd_pcm_mulaw_dump(396,11532
static const snd_pcm_ops_t snd_pcm_mulaw_ops 409,11923
int snd_pcm_mulaw_open(438,12995
int _snd_pcm_mulaw_open(522,15480

alsa-lib-1.0.29/src/pcm/pcm_alaw.c,1186
const char *_snd_module_pcm_alaw _snd_module_pcm_alaw37,1183
typedef void (*alaw_f)alaw_f42,1250
	snd_pcm_plugin_t plug;51,1591
	unsigned int getput_idx;52,1615
	alaw_f func;53,1641
	snd_pcm_format_t sformat;54,1655
} snd_pcm_alaw_t;55,1682
static inline int val_seg(59,1709
static unsigned char s16_to_alaw(96,2469
static int alaw_to_s16(125,2982
void snd_pcm_alaw_decode(144,3260
#define PUT16_LABELS151,3519
#undef PUT16_LABELS153,3564
#define PUT16_END 171,4231
#undef PUT16_END173,4279
void snd_pcm_alaw_encode(181,4355
#define GET16_LABELS188,4614
#undef GET16_LABELS190,4659
#define GET16_END 208,5299
#undef GET16_END210,5347
static int snd_pcm_alaw_hw_refine_cprepare(221,5479
static int snd_pcm_alaw_hw_refine_sprepare(247,6299
static int snd_pcm_alaw_hw_refine_schange(259,6752
static int snd_pcm_alaw_hw_refine_cchange(277,7334
static int snd_pcm_alaw_hw_refine(295,7915
static int snd_pcm_alaw_hw_params(305,8257
snd_pcm_alaw_write_areas(342,9422
snd_pcm_alaw_read_areas(362,9949
static void snd_pcm_alaw_dump(381,10444
static const snd_pcm_ops_t snd_pcm_alaw_ops 394,10829
int snd_pcm_alaw_open(424,11954
int _snd_pcm_alaw_open(508,14406

alsa-lib-1.0.29/src/pcm/pcm_hw.c,5155
const char *_snd_module_pcm_hw _snd_module_pcm_hw49,1520
#define F_SETSIG 55,1602
struct sndrv_pcm_hw_params_old 62,1656
	unsigned int flags;63,1689
			   SNDRV_PCM_HW_PM_HW_65,1761
					SNDRV_PCM_HW_PARAM_SAMPLE_AM_SAMPLE67,1861
	unsigned int rmask;68,1903
	unsigned int cmask;69,1924
	unsigned int info;70,1945
	unsigned int msbits;71,1965
	unsigned int rate_num;72,1987
	unsigned int rate_den;73,2011
	sndrv_pcm_uframes_t fifo_size;74,2035
	unsigned char reserved[reserved75,2067
#define SND_PCM_IOCTL_HW_REFINE_OLD 78,2100
#define SND_PCM_IOCTL_HW_PARAMS_OLD 79,2185
static const snd_pcm_fast_ops_t snd_pcm_hw_fast_ops;83,2428
static const snd_pcm_fast_ops_t snd_pcm_hw_fast_ops_timer;84,2481
	int version;91,2569
	int fd;92,2583
	int card,93,2592
	int card, device,93,2592
	int card, device, subdevice;93,2592
	int sync_ptr_ioctl;94,2622
	volatile struct snd_pcm_mmap_status * mmap_status;95,2643
	struct snd_pcm_mmap_control *mmap_control;mmap_control96,2695
	struct snd_pcm_sync_ptr *sync_ptr;sync_ptr97,2739
	int period_event;98,2775
	snd_timer_t *period_timer;period_timer99,2794
	struct pollfd period_timer_pfd;100,2822
	int period_timer_need_poll;101,2855
	snd_pcm_format_t format;103,2913
	int rate;104,2939
	int channels;105,2950
	unsigned int chmap_caps;107,2982
	snd_pcm_chmap_query_t **chmap_override;chmap_override108,3008
} snd_pcm_hw_t;109,3049
#define SNDRV_FILE_PCM_STREAM_PLAYBACK	111,3066
#define SNDRV_FILE_PCM_STREAM_CAPTURE	112,3141
#define SNDRV_PCM_VERSION_MAX	113,3215
#define FAST_PCM_STATE(116,3314
#define FAST_PCM_TSTAMP(118,3389
struct timespec snd_pcm_hw_fast_tstamp(121,3449
static int sync_ptr1(132,3711
static inline int sync_ptr(145,3996
static int snd_pcm_hw_clear_timer_queue(150,4115
static int snd_pcm_hw_poll_descriptors_count(164,4463
static int snd_pcm_hw_poll_descriptors(169,4557
static int snd_pcm_hw_poll_revents(182,4908
static int snd_pcm_hw_nonblock(198,5368
static int snd_pcm_hw_async(221,5825
static int snd_pcm_hw_info(256,6532
static inline int hw_refine_call(268,6810
static int snd_pcm_hw_hw_refine(276,7188
static inline int hw_params_call(314,8071
static int snd_pcm_hw_hw_params(322,8449
static void snd_pcm_hw_close_timer(344,9058
static int snd_pcm_hw_change_timer(352,9208
static int snd_pcm_hw_hw_free(420,11531
static int snd_pcm_hw_sw_params(433,11823
static int snd_pcm_hw_channel_info(488,13821
static int snd_pcm_hw_status(509,14369
static snd_pcm_state_t snd_pcm_hw_state(525,14794
static int snd_pcm_hw_delay(534,15000
static int snd_pcm_hw_hwsync(546,15287
static int snd_pcm_hw_prepare(578,15976
static int snd_pcm_hw_reset(590,16270
static int snd_pcm_hw_start(602,16558
static int snd_pcm_hw_drop(623,17039
static int snd_pcm_hw_drain(636,17289
static int snd_pcm_hw_pause(648,17532
static snd_pcm_sframes_t snd_pcm_hw_rewindable(660,17795
static snd_pcm_sframes_t snd_pcm_hw_rewind(665,17904
static snd_pcm_sframes_t snd_pcm_hw_forwardable(680,18278
static snd_pcm_sframes_t snd_pcm_hw_forward(685,18380
static int snd_pcm_hw_resume(729,19432
static int hw_link(741,19687
static int snd_pcm_hw_link_slaves(752,19970
static int snd_pcm_hw_link(761,20205
static int snd_pcm_hw_unlink(771,20446
static snd_pcm_sframes_t snd_pcm_hw_writei(782,20673
static snd_pcm_sframes_t snd_pcm_hw_writen(801,21293
static snd_pcm_sframes_t snd_pcm_hw_readi(820,21907
static snd_pcm_sframes_t snd_pcm_hw_readn(839,22504
static int snd_pcm_hw_mmap_status(858,23115
static int snd_pcm_hw_mmap_control(892,24201
static int snd_pcm_hw_munmap_status(914,24814
static int snd_pcm_hw_munmap_control(931,25179
static int snd_pcm_hw_mmap(948,25541
static int snd_pcm_hw_munmap(953,25617
static int snd_pcm_hw_close(958,25695
static snd_pcm_sframes_t snd_pcm_hw_mmap_commit(972,25965
static snd_pcm_sframes_t snd_pcm_hw_avail_update(986,26363
static int snd_pcm_hw_htimestamp(1013,27048
static void __fill_chmap_ctl_id(1033,27499
static void fill_chmap_ctl_id(1045,27891
static int is_chmap_type(1051,28077
snd_pcm_query_chmaps_from_hw(1074,28889
enum { CHMAP_CTL_QUERY,1145,30452
enum { CHMAP_CTL_QUERY, CHMAP_CTL_GET,1145,30452
enum { CHMAP_CTL_QUERY, CHMAP_CTL_GET, CHMAP_CTL_SET 1145,30452
static int chmap_caps(1147,30509
static void chmap_caps_set_ok(1156,30675
static void chmap_caps_set_error(1161,30770
static snd_pcm_chmap_query_t **snd_pcm_hw_query_chmaps(snd_pcm_hw_query_chmaps1166,30874
static snd_pcm_chmap_t *snd_pcm_hw_get_chmap(snd_pcm_hw_get_chmap1186,31368
static int snd_pcm_hw_set_chmap(1244,32864
static void snd_pcm_hw_dump(1293,34165
static const snd_pcm_ops_t snd_pcm_hw_ops 1313,34791
static const snd_pcm_fast_ops_t snd_pcm_hw_fast_ops 1331,35335
static const snd_pcm_fast_ops_t snd_pcm_hw_fast_ops_timer 1362,36266
int snd_pcm_hw_open_fd(1405,37738
int snd_pcm_hw_open(1533,40856
int _snd_pcm_hw_open(1655,44239
#define __OLD_TO_NEW_MASK(1817,48139
#define __NEW_TO_OLD_MASK(1818,48196
static void snd_pcm_hw_convert_from_old_params(1821,48261
static void snd_pcm_hw_convert_to_old_params(1840,48965
static int use_old_hw_params_ioctl(1866,49856

alsa-lib-1.0.29/src/pcm/pcm_dsnoop.c,1472
const char *_snd_module_pcm_dsnoop _snd_module_pcm_dsnoop50,1466
static int snoop_timestamp(57,1526
static void snoop_areas(74,1932
static void snd_pcm_dsnoop_sync_area(102,2819
static int snd_pcm_dsnoop_sync_ptr(130,3806
static int snd_pcm_dsnoop_status(176,5061
static snd_pcm_state_t snd_pcm_dsnoop_state(200,5781
static int snd_pcm_dsnoop_delay(215,6143
static int snd_pcm_dsnoop_hwsync(240,6714
static int snd_pcm_dsnoop_prepare(260,7150
static int snd_pcm_dsnoop_reset(271,7434
static int snd_pcm_dsnoop_start(280,7666
static int snd_pcm_dsnoop_drop(298,8111
static int snd_pcm_dsnoop_drain(308,8351
static int snd_pcm_dsnoop_pause(331,8952
static snd_pcm_sframes_t snd_pcm_dsnoop_rewindable(336,9065
static snd_pcm_sframes_t snd_pcm_dsnoop_rewind(341,9181
static snd_pcm_sframes_t snd_pcm_dsnoop_forwardable(352,9459
static snd_pcm_sframes_t snd_pcm_dsnoop_forward(357,9573
static snd_pcm_sframes_t snd_pcm_dsnoop_writei(368,9852
static snd_pcm_sframes_t snd_pcm_dsnoop_writen(373,10032
static int snd_pcm_dsnoop_close(378,10205
static snd_pcm_sframes_t snd_pcm_dsnoop_mmap_commit(401,10889
static snd_pcm_sframes_t snd_pcm_dsnoop_avail_update(428,11592
static int snd_pcm_dsnoop_htimestamp(441,11884
static void snd_pcm_dsnoop_dump(463,12419
static const snd_pcm_ops_t snd_pcm_dsnoop_ops 476,12739
static const snd_pcm_fast_ops_t snd_pcm_dsnoop_fast_ops 494,13347
int snd_pcm_dsnoop_open(540,14897
int _snd_pcm_dsnoop_open(786,21130

alsa-lib-1.0.29/src/pcm/pcm_direct.c,2809
union semun 47,1296
	int              val;48,1310
	struct semid_ds *buf;buf49,1359
	unsigned short  *array;array50,1420
	struct seminfo  *__buf;__buf51,1477
int snd_pcm_direct_semaphore_create_or_connect(59,1609
#define SND_PCM_DIRECT_MAGIC	85,2191
int snd_pcm_direct_shm_create_or_connect(91,2306
static int _snd_pcm_direct_shm_discard(146,3837
int snd_pcm_direct_shm_discard(168,4372
static int get_tmp_name(177,4499
static int make_local_socket(187,4750
#define SERVER_JOB_DEBUG243,6032
#define server_printf(244,6057
#undef SERVER_JOB_DEBUG246,6119
#define server_printf(247,6143
static snd_pcm_direct_t *server_job_dmix;server_job_dmix250,6201
static void server_cleanup(252,6244
static void server_job_signal(263,6510
static int _snd_send_fd(274,6851
static void server_job(305,7517
int snd_pcm_direct_server_create(407,10257
int snd_pcm_direct_server_discard(445,10967
int snd_pcm_direct_client_connect(464,11298
int snd_pcm_direct_client_discard(485,11692
int snd_pcm_direct_nonblock(498,11863
int snd_pcm_direct_async(504,12038
void snd_pcm_direct_clear_timer_queue(511,12230
int snd_pcm_direct_timer_stop(540,12923
int snd_pcm_direct_poll_revents(546,13023
int snd_pcm_direct_info(593,14116
static inline snd_mask_t *hw_param_mask(hw_param_mask613,14725
static inline snd_interval_t *hw_param_interval(hw_param_interval619,14887
static int hw_param_interval_refine_one(625,15066
static int hw_param_interval_refine_minmax(643,15492
#undef REFINE_DEBUG656,15815
int snd_pcm_direct_hw_refine(658,15836
int snd_pcm_direct_hw_params(753,19060
int snd_pcm_direct_hw_free(765,19366
int snd_pcm_direct_sw_params(771,19488
int snd_pcm_direct_channel_info(777,19659
int snd_pcm_direct_mmap(782,19799
int snd_pcm_direct_munmap(787,19880
snd_pcm_chmap_query_t **snd_pcm_direct_query_chmaps(snd_pcm_direct_query_chmaps792,19955
snd_pcm_chmap_t *snd_pcm_direct_get_chmap(snd_pcm_direct_get_chmap798,20115
int snd_pcm_direct_set_chmap(804,20262
int snd_pcm_direct_resume(810,20429
#define COPY_SLAVE(827,20829
static void save_slave_setting(830,20923
#undef COPY_SLAVE863,21698
int snd_pcm_direct_initialize_slave(870,21928
int snd_pcm_direct_initialize_poll_fd(1112,29349
static snd_pcm_uframes_t recalc_boundary_size(1184,31476
#define COPY_SLAVE(1194,31730
static void copy_slave_setting(1197,31824
#undef COPY_SLAVE1231,32684
int snd_pcm_direct_open_secondary_client(1237,32763
int snd_pcm_direct_initialize_secondary_slave(1270,33493
int snd_pcm_direct_set_timer_params(1294,34037
int snd_pcm_direct_check_interleave(1321,34685
int snd_pcm_direct_parse_bindings(1368,35839
static int _snd_pcm_direct_get_slave_ipc_offset(1453,38080
static int snd_pcm_direct_get_slave_ipc_offset(1572,40990
int snd_pcm_direct_parse_open_conf(1579,41181

alsa-lib-1.0.29/src/pcm/pcm_route.c,3119
const char *_snd_module_pcm_route _snd_module_pcm_route38,1205
#define div(45,1430
#define div(47,1526
	int channel;53,1608
	int as_int;54,1622
	float as_float;56,1666
} snd_pcm_route_ttable_src_t;58,1690
typedef struct snd_pcm_route_ttable_dst snd_pcm_route_ttable_dst_t;60,1721
	enum {UINT64,UINT6463,1807
	enum {UINT64, FLOAT}FLOAT63,1807
	enum {UINT64, FLOAT} sum_idx;63,1807
	unsigned int get_idx;64,1838
	unsigned int put_idx;65,1861
	unsigned int conv_idx;66,1884
	int use_getput;67,1908
	unsigned int src_size;68,1925
	snd_pcm_format_t dst_sfmt;69,1949
	unsigned int nsrcs;70,1977
	unsigned int ndsts;71,1998
	snd_pcm_route_ttable_dst_t *dsts;dsts72,2019
} snd_pcm_route_params_t;73,2054
typedef void (*route_f)route_f76,2082
struct snd_pcm_route_ttable_dst 85,2403
	int att;86,2437
	unsigned int nsrcs;87,2464
	snd_pcm_route_ttable_src_t* srcs;88,2485
	route_f func;89,2520
	int32_t as_sint32;93,2555
	int64_t as_sint64;94,2575
	float as_float;96,2626
} sum_t;98,2650
	snd_pcm_plugin_t plug;102,2716
	snd_pcm_format_t sformat;103,2740
	int schannels;104,2767
	snd_pcm_route_params_t params;105,2783
	snd_pcm_chmap_t *chmap;chmap106,2815
} snd_pcm_route_t;107,2840
static void snd_pcm_route_convert1_zero(111,2885
static void snd_pcm_route_convert1_one(125,3398
#define CONV_LABELS134,3790
#undef CONV_LABELS136,3834
#define CONV_END 166,4744
#undef CONV_END168,4791
static void snd_pcm_route_convert1_one_getput(175,4859
#define CONV24_LABELS184,5258
#undef CONV24_LABELS186,5304
#define CONV24_END 218,6280
#undef CONV24_END220,6329
static void snd_pcm_route_convert1_many(227,6399
#define GET32_LABELS236,6750
#define PUT32_LABELS237,6771
#undef GET32_LABELS239,6816
#undef PUT32_LABELS240,6836
#define GET32_END 332,9330
#undef GET32_END334,9382
#define PUT32_END 389,10635
#undef PUT32_END391,10689
static void snd_pcm_route_convert(400,10773
static int snd_pcm_route_close(431,11655
static int snd_pcm_route_hw_refine_cprepare(447,12048
static int snd_pcm_route_hw_refine_sprepare(470,12805
static int snd_pcm_route_hw_refine_schange(488,13456
static int snd_pcm_route_hw_refine_cchange(512,14254
static int snd_pcm_route_hw_refine(536,15051
static int snd_pcm_route_hw_params(546,15398
snd_pcm_route_write_areas(586,16800
snd_pcm_route_read_areas(608,17426
static snd_pcm_chmap_t *snd_pcm_route_get_chmap(snd_pcm_route_get_chmap629,18020
static snd_pcm_chmap_query_t **snd_pcm_route_query_chmaps(snd_pcm_route_query_chmaps659,18798
static void snd_pcm_route_dump(670,19062
static int strtochannel(725,20882
#define MAX_CHMAP_CHANNELS 756,21520
static int determine_chmap(758,21552
static int find_matching_chmap(819,22890
static int route_chmap_init(873,24055
static const snd_pcm_ops_t snd_pcm_route_ops 901,24749
static int route_load_ttable(919,25348
int snd_pcm_route_open(1006,27954
static int _snd_pcm_route_determine_ttable(1058,29568
int snd_pcm_route_determine_ttable(1115,31101
static int _snd_pcm_route_load_ttable(1133,31681
int snd_pcm_route_load_ttable(1217,34035
int _snd_pcm_route_open(1278,36000

alsa-lib-1.0.29/src/pcm/pcm_adpcm.c,1403
const char *_snd_module_pcm_adpcm _snd_module_pcm_adpcm67,2584
typedef void (*adpcm_f)adpcm_f72,2652
	snd_pcm_plugin_t plug;82,2998
	unsigned int getput_idx;83,3022
	adpcm_f func;84,3048
	snd_pcm_format_t sformat;85,3063
	snd_pcm_adpcm_state_t *states;states86,3090
} snd_pcm_adpcm_t;87,3122
static const char IndexAdjust[IndexAdjust92,3199
static const short StepSize[StepSize95,3317
static char adpcm_encoder(107,3829
static int adpcm_decoder(168,5373
void snd_pcm_adpcm_decode(216,6399
#define PUT16_LABELS224,6700
#undef PUT16_LABELS226,6745
#define PUT16_END 254,7637
#undef PUT16_END256,7685
void snd_pcm_adpcm_encode(269,7841
#define GET16_LABELS277,8142
#undef GET16_LABELS279,8187
#define GET16_END 302,8955
#undef GET16_END304,9003
static int snd_pcm_adpcm_hw_refine_cprepare(324,9295
static int snd_pcm_adpcm_hw_refine_sprepare(351,10138
static int snd_pcm_adpcm_hw_refine_schange(363,10595
static int snd_pcm_adpcm_hw_refine_cchange(381,11178
static int snd_pcm_adpcm_hw_refine(399,11760
static int snd_pcm_adpcm_hw_params(409,12107
static int snd_pcm_adpcm_hw_free(449,13429
static int snd_pcm_adpcm_init(457,13621
snd_pcm_adpcm_write_areas(469,13878
snd_pcm_adpcm_read_areas(489,14434
static void snd_pcm_adpcm_dump(508,14958
static const snd_pcm_ops_t snd_pcm_adpcm_ops 521,15352
int snd_pcm_adpcm_open(551,16472
int _snd_pcm_adpcm_open(634,18898

alsa-lib-1.0.29/src/pcm/pcm_dmix_generic.c,1164
#define LOCK_PREFIX 3,53
#define ARCH_ADD(4,83
struct __xchg_dummy 8,212
struct __xchg_dummy { unsigned long a[a8,212
#define __xg(9,259
static inline unsigned long __cmpxchg(10,304
#define ARCH_CMPXCHG(37,982
#define IS_CONCURRENT	40,1113
#define ARCH_ADD(44,1179
#define ARCH_CMPXCHG(45,1215
#define NO_CONCURRENT_ACCESS	46,1261
#define IS_CONCURRENT	47,1324
static void mix_areas_16(51,1394
static void mix_areas_32(82,2173
static void mix_select_callbacks(113,2965
#define generic_dmix_supported_format 122,3174
static void generic_mix_areas_16_native(130,3484
static void generic_remix_areas_16_native(162,4160
static void generic_mix_areas_32_native(193,4851
static void generic_remix_areas_32_native(227,5561
static void generic_mix_areas_16_swap(260,6284
static void generic_remix_areas_16_swap(292,7053
static void generic_mix_areas_32_swap(323,7877
static void generic_remix_areas_32_swap(357,8635
static void generic_mix_areas_24(391,9445
static void generic_remix_areas_24(424,10165
static void generic_mix_areas_u8(457,10917
static void generic_remix_areas_u8(486,11500
static void generic_mix_select_callbacks(516,12116

alsa-lib-1.0.29/src/pcm/interval.h,582
typedef struct _snd_interval snd_interval_t;22,863
#define snd_interval_add	46,1932
#define snd_interval_sub	47,1975
#define snd_interval_mul	48,2018
#define snd_interval_div	49,2061
#define snd_interval_muldiv	50,2104
#define snd_interval_muldivk	51,2153
#define snd_interval_mulkdiv	52,2204
#define snd_interval_print	53,2255
#define snd_interval_refine_min	54,2302
#define snd_interval_refine_max	55,2359
#define snd_interval_refine	56,2416
#define snd_interval_refine_first 57,2465
#define snd_interval_refine_last 58,2526
#define snd_interval_refine_set	59,2585

alsa-lib-1.0.29/src/pcm/pcm_dmix.c,1920
const char *_snd_module_pcm_dmix _snd_module_pcm_dmix50,1456
#define STATE_RUN_PENDING	55,1605
static int shm_sum_create_or_connect(67,1755
static int shm_sum_discard(109,2854
static void dmix_server_free(130,3420
#define mix_select_callbacks(149,3831
#define dmix_supported_format 150,3895
static void mix_areas(154,3970
static void remix_areas(222,6083
#define dmix_down_sem(296,8384
#define dmix_up_sem(297,8471
#define dmix_down_sem(299,8560
#define dmix_up_sem(300,8588
static void snd_pcm_dmix_sync_area(307,8682
static int snd_pcm_dmix_sync_ptr(394,11587
static snd_pcm_state_t snd_pcm_dmix_state(447,13051
static int snd_pcm_dmix_status(465,13450
static int snd_pcm_dmix_delay(487,14072
static int snd_pcm_dmix_hwsync(513,14657
static int snd_pcm_dmix_prepare(535,15133
static void reset_slave_ptr(546,15425
static int snd_pcm_dmix_reset(559,15926
static int snd_pcm_dmix_start_timer(568,16151
static int snd_pcm_dmix_start(581,16415
static int snd_pcm_dmix_drop(603,16921
static int snd_pcm_dmix_drain(613,17155
static int snd_pcm_dmix_pause(657,18225
static snd_pcm_sframes_t snd_pcm_dmix_rewindable(662,18336
static snd_pcm_sframes_t snd_pcm_dmix_rewind(667,18456
static snd_pcm_sframes_t snd_pcm_dmix_forwardable(745,20796
static snd_pcm_sframes_t snd_pcm_dmix_forward(750,20900
static snd_pcm_sframes_t snd_pcm_dmix_readi(761,21175
static snd_pcm_sframes_t snd_pcm_dmix_readn(766,21346
static int snd_pcm_dmix_close(771,21516
static snd_pcm_sframes_t snd_pcm_dmix_mmap_commit(795,22193
static snd_pcm_sframes_t snd_pcm_dmix_avail_update(831,23279
static int snd_pcm_dmix_htimestamp(841,23559
static int snd_pcm_dmix_poll_revents(863,24079
static void snd_pcm_dmix_dump(872,24385
static const snd_pcm_ops_t snd_pcm_dmix_ops 885,24705
static const snd_pcm_fast_ops_t snd_pcm_dmix_fast_ops 903,25307
int snd_pcm_dmix_open(949,26813
int _snd_pcm_dmix_open(1274,35148

alsa-lib-1.0.29/src/pcm/interval_inline.h,879
#define INTERVAL_INLINE 22,864
INTERVAL_INLINE void snd_interval_any(24,903
INTERVAL_INLINE void snd_interval_none(34,1064
INTERVAL_INLINE int snd_interval_checkempty(39,1142
INTERVAL_INLINE int snd_interval_empty(45,1297
INTERVAL_INLINE int snd_interval_single(50,1384
INTERVAL_INLINE int snd_interval_value(57,1558
INTERVAL_INLINE void snd_interval_set_value(63,1676
INTERVAL_INLINE int snd_interval_min(71,1848
INTERVAL_INLINE int snd_interval_max(77,1964
INTERVAL_INLINE void snd_interval_set_minmax(83,2080
INTERVAL_INLINE int snd_interval_test(92,2277
INTERVAL_INLINE void snd_interval_copy(98,2476
INTERVAL_INLINE int snd_interval_setinteger(103,2574
INTERVAL_INLINE void snd_interval_floor(113,2768
INTERVAL_INLINE void snd_interval_unfloor(125,2970
INTERVAL_INLINE int snd_interval_always_eq(139,3182
INTERVAL_INLINE int snd_interval_never_eq(145,3396

alsa-lib-1.0.29/src/pcm/pcm_mmap_emul.c,999
const char *_snd_module_pcm_mmap_emul _snd_module_pcm_mmap_emul34,1109
	snd_pcm_generic_t gen;43,1208
	unsigned int mmap_emul 44,1232
	snd_pcm_uframes_t hw_ptr;45,1260
	snd_pcm_uframes_t appl_ptr;46,1287
	snd_pcm_uframes_t start_threshold;47,1316
} mmap_emul_t;48,1352
static int snd_pcm_mmap_emul_hw_refine(55,1513
static int snd_pcm_mmap_emul_hw_params(153,5134
static int snd_pcm_mmap_emul_sw_params(209,6557
static int snd_pcm_mmap_emul_prepare(230,7093
static int snd_pcm_mmap_emul_reset(242,7313
snd_pcm_mmap_emul_rewind(255,7554
snd_pcm_mmap_emul_forward(264,7774
sync_slave_write(274,8065
sync_slave_read(297,8696
snd_pcm_mmap_emul_mmap_commit(317,9140
static snd_pcm_sframes_t snd_pcm_mmap_emul_avail_update(331,9522
static void snd_pcm_mmap_emul_dump(343,9834
static const snd_pcm_ops_t snd_pcm_mmap_emul_ops 356,10169
static const snd_pcm_fast_ops_t snd_pcm_mmap_emul_fast_ops 374,10803
int __snd_pcm_mmap_emul_open(407,12050
int _snd_pcm_mmap_emul_open(471,13482

alsa-lib-1.0.29/src/pcm/pcm_null.c,2114
const char *_snd_module_pcm_null _snd_module_pcm_null37,1182
	snd_htimestamp_t trigger_tstamp;42,1265
	snd_pcm_state_t state;43,1299
	snd_pcm_uframes_t appl_ptr;44,1323
	snd_pcm_uframes_t hw_ptr;45,1352
	int poll_fd;46,1379
	snd_pcm_chmap_query_t **chmap;chmap47,1393
} snd_pcm_null_t;48,1425
static int snd_pcm_null_close(51,1451
static int snd_pcm_null_nonblock(59,1592
static int snd_pcm_null_async(64,1705
static int snd_pcm_null_info(69,1844
static snd_pcm_sframes_t snd_pcm_null_avail_update(83,2246
static int snd_pcm_null_status(94,2650
static snd_pcm_state_t snd_pcm_null_state(106,3036
static int snd_pcm_null_hwsync(112,3163
static int snd_pcm_null_delay(117,3243
static int snd_pcm_null_reset(123,3363
static int snd_pcm_null_prepare(130,3465
static int snd_pcm_null_start(137,3633
static int snd_pcm_null_drop(149,3959
static int snd_pcm_null_drain(157,4143
static int snd_pcm_null_pause(165,4328
static snd_pcm_sframes_t snd_pcm_null_rewindable(180,4675
static snd_pcm_sframes_t snd_pcm_null_forwardable(185,4771
static snd_pcm_sframes_t snd_pcm_null_rewind(191,4871
static snd_pcm_sframes_t snd_pcm_null_forward(206,5242
static int snd_pcm_null_resume(221,5612
static snd_pcm_sframes_t snd_pcm_null_xfer_areas(226,5692
static snd_pcm_sframes_t snd_pcm_null_writei(236,5994
static snd_pcm_sframes_t snd_pcm_null_writen(241,6195
static snd_pcm_sframes_t snd_pcm_null_readi(246,6389
static snd_pcm_sframes_t snd_pcm_null_readn(251,6582
static snd_pcm_sframes_t snd_pcm_null_mmap_commit(256,6774
static int snd_pcm_null_hw_refine(263,6969
static int snd_pcm_null_hw_params(272,7268
static int snd_pcm_null_hw_free(277,7398
static int snd_pcm_null_sw_params(282,7479
static snd_pcm_chmap_query_t **snd_pcm_null_query_chmaps(snd_pcm_null_query_chmaps287,7609
static snd_pcm_chmap_t *snd_pcm_null_get_chmap(snd_pcm_null_get_chmap296,7812
static void snd_pcm_null_dump(305,8012
static const snd_pcm_ops_t snd_pcm_null_ops 314,8220
static const snd_pcm_fast_ops_t snd_pcm_null_fast_ops 332,8787
int snd_pcm_null_open(368,9984
int _snd_pcm_null_open(453,12043

alsa-lib-1.0.29/src/pcm/pcm_dmix_i386.c,1875
#define MIX_AREAS_16 5,42
#define MIX_AREAS_16_MMX 6,76
#define MIX_AREAS_32 7,118
#define MIX_AREAS_24 8,152
#define MIX_AREAS_24_CMOV 9,186
#define LOCK_PREFIX 10,230
#define XADD 11,253
#define XSUB 12,273
#undef MIX_AREAS_1614,320
#undef MIX_AREAS_16_MMX15,340
#undef MIX_AREAS_3216,364
#undef MIX_AREAS_2417,384
#undef MIX_AREAS_24_CMOV18,404
#undef LOCK_PREFIX19,429
#undef XADD20,448
#undef XSUB21,460
#define MIX_AREAS_16 23,473
#define MIX_AREAS_16_MMX 24,509
#define MIX_AREAS_32 25,553
#define MIX_AREAS_24 26,589
#define MIX_AREAS_24_CMOV 27,625
#define LOCK_PREFIX 28,671
#define XADD 29,694
#define XSUB 30,714
#undef MIX_AREAS_1632,761
#undef MIX_AREAS_16_MMX33,781
#undef MIX_AREAS_3234,805
#undef MIX_AREAS_2435,825
#undef MIX_AREAS_24_CMOV36,845
#undef LOCK_PREFIX37,870
#undef XADD38,889
#undef XSUB39,901
#define MIX_AREAS_16 41,914
#define MIX_AREAS_16_MMX 42,952
#define MIX_AREAS_32 43,998
#define MIX_AREAS_24 44,1036
#define MIX_AREAS_24_CMOV 45,1074
#define LOCK_PREFIX 46,1122
#define XADD 47,1152
#define XSUB 48,1172
#undef MIX_AREAS_1650,1219
#undef MIX_AREAS_16_MMX51,1239
#undef MIX_AREAS_3252,1263
#undef MIX_AREAS_2453,1283
#undef MIX_AREAS_24_CMOV54,1303
#undef LOCK_PREFIX55,1328
#undef XADD56,1347
#undef XSUB57,1359
#define MIX_AREAS_16 59,1373
#define MIX_AREAS_16_MMX 60,1413
#define MIX_AREAS_32 61,1461
#define MIX_AREAS_24 62,1501
#define MIX_AREAS_24_CMOV 63,1541
#define LOCK_PREFIX 64,1591
#define XADD 65,1621
#define XSUB 66,1641
#undef MIX_AREAS_1668,1688
#undef MIX_AREAS_16_MMX69,1708
#undef MIX_AREAS_3270,1732
#undef MIX_AREAS_2471,1752
#undef MIX_AREAS_24_CMOV72,1772
#undef LOCK_PREFIX73,1797
#undef XADD74,1816
#undef XSUB75,1828
#define i386_dmix_supported_format 77,1842
#define dmix_supported_format 83,2027
static void mix_select_callbacks(86,2122

alsa-lib-1.0.29/src/pcm/pcm.c,17859
const char *snd_pcm_name(snd_pcm_name651,25421
snd_pcm_type_t snd_pcm_type(664,25656
snd_pcm_stream_t snd_pcm_stream(677,25903
int snd_pcm_close(691,26184
int snd_pcm_nonblock(722,26903
int snd_pcm_async(752,27585
int snd_pcm_info(769,27963
int snd_pcm_hw_params_current(780,28317
int snd_pcm_hw_params(831,31151
int snd_pcm_hw_free(846,31536
int snd_pcm_sw_params(874,32249
int snd_pcm_status(918,33611
snd_pcm_state_t snd_pcm_state(932,33986
int snd_pcm_hwsync(947,34436
int snd_pcm_delay(988,36024
int snd_pcm_resume(1010,36798
int snd_pcm_htimestamp(1030,37315
int snd_pcm_prepare(1045,37693
int snd_pcm_reset(1062,38026
int snd_pcm_start(1077,38319
int snd_pcm_drop(1098,38830
int snd_pcm_drain(1121,39437
int snd_pcm_pause(1141,39946
snd_pcm_sframes_t snd_pcm_rewindable(1160,40477
snd_pcm_sframes_t snd_pcm_rewind(1177,40902
snd_pcm_sframes_t snd_pcm_forwardable(1198,41495
snd_pcm_sframes_t INTERNAL(1216,41947
snd_pcm_sframes_t snd_pcm_writei(1249,43210
snd_pcm_sframes_t snd_pcm_writen(1281,44468
snd_pcm_sframes_t snd_pcm_readi(1313,45652
snd_pcm_sframes_t snd_pcm_readn(1345,46860
int snd_pcm_link(1368,47466
int snd_pcm_unlink(1382,47771
int snd_pcm_poll_descriptors_count(1395,48032
int snd_pcm_poll_descriptors(1430,49434
int snd_pcm_poll_descriptors_revents(1467,50675
#define PCMTYPE(1480,51039
#define STATE(1481,51082
#define STREAM(1482,51124
#define READY(1483,51168
#define XRUN(1484,51210
#define SILENCE(1485,51250
#define TSTAMP(1486,51296
#define TSTAMP_TYPE(1487,51340
#define ACCESS(1488,51394
#define START(1489,51438
#define HW_PARAM(1490,51480
#define SW_PARAM(1491,51528
#define FORMAT(1492,51576
#define SUBFORMAT(1493,51620
#define FORMATD(1495,51672
#define SUBFORMATD(1496,51719
static const char *const snd_pcm_stream_names[snd_pcm_stream_names1499,51775
static const char *const snd_pcm_state_names[snd_pcm_state_names1504,51868
static const char *const snd_pcm_access_names[snd_pcm_access_names1516,52076
static const char *const snd_pcm_format_names[snd_pcm_format_names1524,52266
static const char *const snd_pcm_format_aliases[snd_pcm_format_aliases1574,53185
static const char *const snd_pcm_format_descriptions[snd_pcm_format_descriptions1586,53408
static const char *const snd_pcm_type_names[snd_pcm_type_names1636,56027
static const char *const snd_pcm_subformat_names[snd_pcm_subformat_names1669,56622
static const char *const snd_pcm_subformat_descriptions[snd_pcm_subformat_descriptions1673,56699
static const char *const snd_pcm_start_mode_names[snd_pcm_start_mode_names1677,56796
static const char *const snd_pcm_xrun_mode_names[snd_pcm_xrun_mode_names1682,56888
static const char *const snd_pcm_tstamp_mode_names[snd_pcm_tstamp_mode_names1687,56973
static const char *const snd_pcm_tstamp_type_names[snd_pcm_tstamp_type_names1692,57066
const char *snd_pcm_stream_name(snd_pcm_stream_name1704,57336
const char *snd_pcm_access_name(snd_pcm_access_name1716,57603
const char *snd_pcm_format_name(snd_pcm_format_name1728,57870
const char *snd_pcm_format_description(snd_pcm_format_description1740,58160
snd_pcm_format_t snd_pcm_format_value(1752,58460
const char *snd_pcm_subformat_name(snd_pcm_subformat_name1779,59226
const char *snd_pcm_subformat_description(snd_pcm_subformat_description1791,59549
const char *snd_pcm_start_mode_name(snd_pcm_start_mode_name1803,59878
const char *snd_pcm_xrun_mode_name(snd_pcm_xrun_mode_name1819,60305
const char *snd_pcm_tstamp_mode_name(snd_pcm_tstamp_mode_name1835,60718
const char *snd_pcm_tstamp_type_name(snd_pcm_tstamp_type_name1847,61006
const char *snd_pcm_state_name(snd_pcm_state_name1859,61271
const char *INTERNAL(INTERNAL1872,61527
int snd_pcm_dump_hw_setup(1889,61980
int snd_pcm_dump_sw_setup(1919,63237
int snd_pcm_dump_setup(1946,64361
int snd_pcm_status_dump(1959,64651
int snd_pcm_dump(1979,65439
snd_pcm_sframes_t snd_pcm_bytes_to_frames(1993,65721
ssize_t snd_pcm_frames_to_bytes(2009,66083
long snd_pcm_bytes_to_samples(2025,66448
ssize_t snd_pcm_samples_to_bytes(2041,66802
int snd_async_add_pcm_handler(2061,67331
snd_pcm_t *snd_async_handler_get_pcm(snd_async_handler_get_pcm2091,68105
static const char *const build_in_pcms[build_in_pcms2100,68318
static int snd_pcm_open_conf(2107,68609
static int snd_pcm_open_noupdate(2257,72389
int snd_pcm_open(2289,73281
int snd_pcm_open_lconf(2309,73868
int snd_pcm_open_fallback(2327,74460
int snd_pcm_new(2342,74852
int snd_pcm_free(2363,75299
int snd_pcm_open_named_slave(2374,75482
int snd_pcm_wait(2402,76398
int snd_pcm_wait_nocheck(2426,76949
snd_pcm_sframes_t snd_pcm_avail_update(2507,79314
snd_pcm_sframes_t snd_pcm_avail(2524,79861
int snd_pcm_avail_delay(2548,80465
int snd_pcm_area_silence(2581,81238
int snd_pcm_areas_silence(2685,83498
int snd_pcm_area_copy(2736,84967
int snd_pcm_areas_copy(2857,87898
static void dump_one_param(2922,89802
int snd_pcm_hw_params_dump(2935,90205
int snd_pcm_hw_params_can_mmap_sample_resolution(2955,90984
int snd_pcm_hw_params_is_double(2975,91733
int snd_pcm_hw_params_is_batch(2995,92473
int snd_pcm_hw_params_is_block_transfer(3015,93160
int snd_pcm_hw_params_is_monotonic(3035,93857
int snd_pcm_hw_params_can_overrange(3055,94542
int snd_pcm_hw_params_can_pause(3075,95188
int snd_pcm_hw_params_can_resume(3095,95829
int snd_pcm_hw_params_is_half_duplex(3115,96479
int snd_pcm_hw_params_is_joint_duplex(3135,97183
int snd_pcm_hw_params_can_sync_start(3155,97896
int snd_pcm_hw_params_can_disable_period_wakeup(3171,98379
int snd_pcm_hw_params_supports_audio_wallclock_ts(3191,99107
int snd_pcm_hw_params_get_rate_numden(3212,99889
int snd_pcm_hw_params_get_sbits(3234,100623
int snd_pcm_hw_params_get_fifo_size(3253,101232
int snd_pcm_hw_params_any(3271,101678
size_t snd_pcm_access_mask_sizeof(3281,101905
int snd_pcm_access_mask_malloc(3291,102151
void snd_pcm_access_mask_free(3304,102431
void snd_pcm_access_mask_copy(3314,102636
void snd_pcm_access_mask_none(3324,102860
void snd_pcm_access_mask_any(3333,103051
int snd_pcm_access_mask_test(3343,103289
int snd_pcm_access_mask_empty(3354,103591
void snd_pcm_access_mask_set(3364,103843
void snd_pcm_access_mask_reset(3374,104118
size_t snd_pcm_format_mask_sizeof(3383,104342
int snd_pcm_format_mask_malloc(3393,104588
void snd_pcm_format_mask_free(3406,104868
void snd_pcm_format_mask_copy(3416,105073
void snd_pcm_format_mask_none(3426,105297
void snd_pcm_format_mask_any(3435,105488
int snd_pcm_format_mask_test(3445,105715
int snd_pcm_format_mask_empty(3456,106017
void snd_pcm_format_mask_set(3466,106258
void snd_pcm_format_mask_reset(3476,106522
size_t snd_pcm_subformat_mask_sizeof(3486,106750
int snd_pcm_subformat_mask_malloc(3496,107005
void snd_pcm_subformat_mask_free(3509,107297
void snd_pcm_subformat_mask_copy(3519,107511
void snd_pcm_subformat_mask_none(3529,107747
void snd_pcm_subformat_mask_any(3538,107947
int snd_pcm_subformat_mask_test(3548,108189
int snd_pcm_subformat_mask_empty(3559,108503
void snd_pcm_subformat_mask_set(3569,108759
void snd_pcm_subformat_mask_reset(3579,109041
size_t snd_pcm_hw_params_sizeof(3589,109273
int snd_pcm_hw_params_malloc(3599,109515
void snd_pcm_hw_params_free(3612,109787
void snd_pcm_hw_params_copy(3622,109986
int INTERNAL(3636,110377
int snd_pcm_hw_params_test_access(3655,110982
int snd_pcm_hw_params_set_access(3667,111439
int INTERNAL(3680,111889
int INTERNAL(3696,112477
int snd_pcm_hw_params_set_access_mask(3711,113031
int snd_pcm_hw_params_get_access_mask(3721,113385
int INTERNAL(3737,113901
int snd_pcm_hw_params_test_format(3752,114443
int snd_pcm_hw_params_set_format(3764,114848
int INTERNAL(3777,115288
int INTERNAL(3793,115882
int snd_pcm_hw_params_set_format_mask(3808,116447
void snd_pcm_hw_params_get_format_mask(3818,116801
int INTERNAL(3831,117270
int snd_pcm_hw_params_test_subformat(3846,117835
int snd_pcm_hw_params_set_subformat(3858,118312
int INTERNAL(3871,118770
int INTERNAL(3887,119376
int snd_pcm_hw_params_set_subformat_mask(3902,119955
void snd_pcm_hw_params_get_subformat_mask(3912,120324
int INTERNAL(3925,120789
int INTERNAL(3940,121282
int INTERNAL(3955,121787
int snd_pcm_hw_params_test_channels(3970,122327
int snd_pcm_hw_params_set_channels(3982,122781
int snd_pcm_hw_params_set_channels_min(3994,123275
int snd_pcm_hw_params_set_channels_max(4006,123781
int snd_pcm_hw_params_set_channels_minmax(4019,124374
int INTERNAL(4032,124927
int INTERNAL(4048,125501
int INTERNAL(4064,126078
int INTERNAL(4083,126768
int INTERNAL(4101,127369
int INTERNAL(4119,127982
int snd_pcm_hw_params_test_rate(4137,128615
int snd_pcm_hw_params_set_rate(4152,129158
int snd_pcm_hw_params_set_rate_min(4167,129791
int snd_pcm_hw_params_set_rate_max(4182,130434
int snd_pcm_hw_params_set_rate_minmax(4199,131270
int INTERNAL(4215,131938
int INTERNAL(4234,132632
int INTERNAL(4253,133329
int snd_pcm_hw_params_set_rate_resample(4268,133914
int snd_pcm_hw_params_get_rate_resample(4286,134452
int snd_pcm_hw_params_set_export_buffer(4300,134936
int snd_pcm_hw_params_get_export_buffer(4318,135486
int snd_pcm_hw_params_set_period_wakeup(4347,136740
int snd_pcm_hw_params_get_period_wakeup(4369,137375
int INTERNAL(4386,137985
int INTERNAL(4404,138622
int INTERNAL(4422,139271
int snd_pcm_hw_params_test_period_time(4440,139949
int snd_pcm_hw_params_set_period_time(4455,140530
int snd_pcm_hw_params_set_period_time_min(4471,141202
int snd_pcm_hw_params_set_period_time_max(4486,141883
int snd_pcm_hw_params_set_period_time_minmax(4503,142774
int INTERNAL(4519,143501
int INTERNAL(4538,144232
int INTERNAL(4555,144885
int INTERNAL(4574,145627
int INTERNAL(4596,146342
int INTERNAL(4618,147076
int snd_pcm_hw_params_test_period_size(4640,147839
int snd_pcm_hw_params_set_period_size(4655,148425
int snd_pcm_hw_params_set_period_size_min(4670,149101
int snd_pcm_hw_params_set_period_size_max(4689,149862
int snd_pcm_hw_params_set_period_size_minmax(4710,150833
int INTERNAL(4731,151668
int INTERNAL(4754,152492
int INTERNAL(4777,153312
int snd_pcm_hw_params_set_period_size_integer(4795,153975
int INTERNAL(4811,154537
int INTERNAL(4829,155161
int INTERNAL(4847,155797
int snd_pcm_hw_params_test_periods(4865,156462
int snd_pcm_hw_params_set_periods(4880,157034
int snd_pcm_hw_params_set_periods_min(4895,157696
int snd_pcm_hw_params_set_periods_max(4910,158368
int snd_pcm_hw_params_set_periods_minmax(4927,159247
int INTERNAL(4943,159968
int INTERNAL(4962,160694
int INTERNAL(4981,161423
int snd_pcm_hw_params_set_periods_integer(4995,161998
int INTERNAL(5011,162552
int INTERNAL(5029,163189
int INTERNAL(5047,163838
int snd_pcm_hw_params_test_buffer_time(5065,164516
int snd_pcm_hw_params_set_buffer_time(5080,165097
int snd_pcm_hw_params_set_buffer_time_min(5095,165768
int snd_pcm_hw_params_set_buffer_time_max(5110,166449
int snd_pcm_hw_params_set_buffer_time_minmax(5127,167340
int INTERNAL(5143,168067
int INTERNAL(5162,168806
int INTERNAL(5181,169550
int INTERNAL(5197,170168
int INTERNAL(5216,170773
int INTERNAL(5237,171457
int snd_pcm_hw_params_test_buffer_size(5258,172149
int snd_pcm_hw_params_set_buffer_size(5272,172679
int snd_pcm_hw_params_set_buffer_size_min(5284,173200
int snd_pcm_hw_params_set_buffer_size_max(5300,173808
int snd_pcm_hw_params_set_buffer_size_minmax(5317,174522
int INTERNAL(5335,175236
int INTERNAL(5355,175905
int INTERNAL(5375,176582
int INTERNAL(5398,177392
int INTERNAL(5417,178021
int INTERNAL(5436,178658
int snd_pcm_hw_params_test_tick_time(5455,179315
int snd_pcm_hw_params_set_tick_time(5470,179888
int snd_pcm_hw_params_set_tick_time_min(5485,180553
int snd_pcm_hw_params_set_tick_time_max(5500,181224
int snd_pcm_hw_params_set_tick_time_minmax(5517,182103
int INTERNAL(5533,182839
int INTERNAL(5552,183574
int INTERNAL(5571,184311
int snd_pcm_hw_params_get_min_align(5585,184898
int snd_pcm_sw_params_current(5614,185692
int snd_pcm_sw_params_dump(5643,186591
size_t snd_pcm_sw_params_sizeof(5661,187437
int snd_pcm_sw_params_malloc(5671,187679
void snd_pcm_sw_params_free(5684,187951
void snd_pcm_sw_params_copy(5694,188150
int snd_pcm_sw_params_get_boundary(5706,188502
int snd_pcm_sw_params_set_start_mode(5720,188888
snd_pcm_start_t snd_pcm_sw_params_get_start_mode(5746,189577
int snd_pcm_sw_params_set_xrun_mode(5765,190187
snd_pcm_xrun_t snd_pcm_sw_params_get_xrun_mode(5794,191006
int snd_pcm_sw_params_set_tstamp_mode(5813,191601
int INTERNAL(5834,192246
int snd_pcm_sw_params_set_tstamp_type(5851,192758
int snd_pcm_sw_params_get_tstamp_type(5868,193267
int snd_pcm_sw_params_set_sleep_min(5883,193758
int INTERNAL(5898,194343
int snd_pcm_sw_params_set_avail_min(5922,195208
int INTERNAL(5945,195984
int snd_pcm_sw_params_set_period_event(5964,196583
int snd_pcm_sw_params_get_period_event(5977,196963
int snd_pcm_sw_params_set_xfer_align(5992,197424
int INTERNAL(6007,197996
int snd_pcm_sw_params_set_start_threshold(6027,198655
int INTERNAL(6047,199359
int snd_pcm_sw_params_set_stop_threshold(6071,200193
int INTERNAL(6093,201036
int snd_pcm_sw_params_set_silence_threshold(6116,201755
int INTERNAL(6142,202662
int snd_pcm_sw_params_set_silence_size(6170,203720
int INTERNAL(6196,204661
size_t snd_pcm_status_sizeof(6211,205017
int snd_pcm_status_malloc(6221,205250
void snd_pcm_status_free(6234,205510
void snd_pcm_status_copy(6244,205700
snd_pcm_state_t snd_pcm_status_get_state(6255,205956
void snd_pcm_status_get_trigger_tstamp(6270,206430
void INTERNAL(6287,207030
void snd_pcm_status_get_tstamp(6302,207560
void INTERNAL(6315,207925
void snd_pcm_status_get_audio_htstamp(6330,208431
snd_pcm_sframes_t snd_pcm_status_get_delay(6346,208923
snd_pcm_uframes_t snd_pcm_status_get_avail(6356,209193
snd_pcm_uframes_t snd_pcm_status_get_avail_max(6366,209483
snd_pcm_uframes_t snd_pcm_status_get_overrange(6376,209720
size_t snd_pcm_info_sizeof(6386,209910
int snd_pcm_info_malloc(6396,210137
void snd_pcm_info_free(6409,210389
void snd_pcm_info_copy(6419,210573
unsigned int snd_pcm_info_get_device(6430,210797
unsigned int snd_pcm_info_get_subdevice(6441,211020
snd_pcm_stream_t snd_pcm_info_get_stream(6452,211248
int snd_pcm_info_get_card(6463,211525
const char *snd_pcm_info_get_id(snd_pcm_info_get_id6474,211727
const char *snd_pcm_info_get_name(snd_pcm_info_get_name6485,211945
const char *snd_pcm_info_get_subdevice_name(snd_pcm_info_get_subdevice_name6496,212192
snd_pcm_class_t snd_pcm_info_get_class(6507,212429
snd_pcm_subclass_t snd_pcm_info_get_subclass(6518,212655
unsigned int snd_pcm_info_get_subdevices_count(6529,212912
unsigned int snd_pcm_info_get_subdevices_avail(6540,213189
snd_pcm_sync_id_t snd_pcm_info_get_sync(6551,213461
void snd_pcm_info_set_device(6564,213773
void snd_pcm_info_set_subdevice(6575,214035
void snd_pcm_info_set_stream(6586,214290
int snd_pcm_mmap_begin(6610,215284
snd_pcm_sframes_t snd_pcm_mmap_commit(6690,217747
int _snd_pcm_poll_descriptor(6710,218377
void snd_pcm_areas_from_buf(6716,218463
void snd_pcm_areas_from_bufs(6728,218788
snd_pcm_sframes_t snd_pcm_read_areas(6740,219103
snd_pcm_sframes_t snd_pcm_write_areas(6819,220709
snd_pcm_uframes_t _snd_pcm_mmap_hw_ptr(6904,222675
snd_pcm_uframes_t _snd_pcm_boundary(6909,222757
static const char *const names[names6919,223108
int snd_pcm_slave_conf(6930,223536
		unsigned int index;6936,223721
		int flags;6937,223743
		void *ptr;ptr6938,223756
		int present;6939,223769
int snd_pcm_conf_generic_id(7063,226620
static void snd_pcm_set_ptr(7074,226860
void snd_pcm_set_hw_ptr(7085,227152
void snd_pcm_set_appl_ptr(7092,227339
static void snd_pcm_link_ptr(7099,227536
static void snd_pcm_unlink_ptr(7129,228373
void snd_pcm_link_hw_ptr(7154,228896
void snd_pcm_link_appl_ptr(7161,229043
void snd_pcm_unlink_hw_ptr(7168,229196
void snd_pcm_unlink_appl_ptr(7175,229347
#define OBSOLETE1(7192,229590
#define OBSOLETE1(7198,229728
#define __P_OLD_GET(7203,229853
#define __P_OLD_GET1(7212,230066
#define __OLD_GET(7221,230295
#define __OLD_GET1(7222,230385
#define __P_OLD_NEAR(7254,232495
#define __P_OLD_NEAR1(7262,232711
#define __OLD_NEAR(7270,232943
#define __OLD_NEAR1(7271,233015
#define __P_OLD_SET_FL(7282,233619
#define __P_OLD_SET_FL1(7291,233840
#define __OLD_SET_FL(7300,234077
#define __OLD_SET_FL1(7301,234153
#define __P_OLD_GET_SW(7327,235747
#define __OLD_GET_SW(7336,235947
static int chmap_equal(7426,241326
snd_pcm_chmap_query_t **snd_pcm_query_chmaps(snd_pcm_query_chmaps7444,241963
void snd_pcm_free_chmaps(7455,242240
snd_pcm_chmap_t *snd_pcm_get_chmap(snd_pcm_get_chmap7472,242611
int snd_pcm_set_chmap(7485,242917
#define _NAME(7499,243208
static const char *chmap_type_names[chmap_type_names7500,243251
#undef _NAME7503,243374
const char *snd_pcm_chmap_type_name(snd_pcm_chmap_type_name7511,243566
#define _NAME(7520,243741
static const char *chmap_names[chmap_names7521,243779
#undef _NAME7536,244292
const char *snd_pcm_chmap_name(snd_pcm_chmap_name7544,244484
static const char *chmap_long_names[chmap_long_names7552,244629
const char *snd_pcm_chmap_long_name(snd_pcm_chmap_long_name7597,246203
int snd_pcm_chmap_print(7612,246621
static int str_to_chmap(7645,247438
unsigned int snd_pcm_chmap_from_string(7690,248374
snd_pcm_chmap_t *snd_pcm_chmap_parse_string(snd_pcm_chmap_parse_string7702,248667
static int _copy_to_fixed_query_map(7746,249530
_snd_pcm_make_single_query_chmaps(7760,249930
snd_pcm_chmap_t *_snd_pcm_copy_chmap(_snd_pcm_copy_chmap7775,250207
_snd_pcm_copy_chmap_query(7788,250503
_snd_pcm_choose_fixed_chmap(7813,251103
_snd_pcm_parse_config_chmaps(7828,251467
int snd_pcm_recover(7892,252969
int snd_pcm_set_params(7940,254765
int snd_pcm_get_params(8094,260645

alsa-lib-1.0.29/src/pcm/pcm_dmix_x86_64.h,104
static void MIX_AREAS_16(33,1144
static void MIX_AREAS_32(128,2909
static void MIX_AREAS_24(243,5005

alsa-lib-1.0.29/src/pcm/pcm_generic.c,1958
int snd_pcm_generic_close(37,1137
int snd_pcm_generic_nonblock(47,1342
int snd_pcm_generic_async(53,1507
int snd_pcm_generic_poll_descriptors_count(59,1672
int snd_pcm_generic_poll_descriptors(65,1841
int snd_pcm_generic_poll_revents(71,2052
int snd_pcm_generic_info(77,2299
int snd_pcm_generic_hw_free(83,2461
int snd_pcm_generic_sw_params(89,2600
int snd_pcm_generic_hw_refine(95,2780
int snd_pcm_generic_hw_params(101,2960
int snd_pcm_generic_prepare(107,3150
int snd_pcm_generic_channel_info(113,3289
int snd_pcm_generic_status(128,3725
snd_pcm_state_t snd_pcm_generic_state(134,3898
int snd_pcm_generic_hwsync(140,4045
int snd_pcm_generic_reset(146,4182
int snd_pcm_generic_start(152,4317
int snd_pcm_generic_drop(158,4452
int snd_pcm_generic_drain(164,4585
int snd_pcm_generic_pause(170,4720
int snd_pcm_generic_resume(176,4875
int snd_pcm_generic_delay(182,5012
snd_pcm_sframes_t snd_pcm_generic_forwardable(188,5182
snd_pcm_sframes_t snd_pcm_generic_forward(194,5343
snd_pcm_sframes_t snd_pcm_generic_rewindable(200,5540
snd_pcm_sframes_t snd_pcm_generic_rewind(206,5699
int snd_pcm_generic_link(212,5884
int snd_pcm_generic_link_slaves(220,6128
int snd_pcm_generic_unlink(228,6395
snd_pcm_sframes_t snd_pcm_generic_writei(236,6620
snd_pcm_sframes_t snd_pcm_generic_writen(242,6829
snd_pcm_sframes_t snd_pcm_generic_readi(248,7029
snd_pcm_sframes_t snd_pcm_generic_readn(254,7230
snd_pcm_sframes_t snd_pcm_generic_mmap_commit(260,7428
snd_pcm_sframes_t snd_pcm_generic_avail_update(268,7676
int snd_pcm_generic_htimestamp(274,7839
int snd_pcm_generic_real_htimestamp(284,8170
int snd_pcm_generic_mmap(303,8559
int snd_pcm_generic_munmap(315,8899
snd_pcm_chmap_query_t **snd_pcm_generic_query_chmaps(snd_pcm_generic_query_chmaps326,9090
snd_pcm_chmap_t *snd_pcm_generic_get_chmap(snd_pcm_generic_get_chmap332,9259
int snd_pcm_generic_set_chmap(338,9415
int snd_pcm_generic_may_wait_for_avail_min(344,9591

alsa-lib-1.0.29/src/ucm/utils.c,448
void uc_mgr_error(35,1498
void uc_mgr_stdout(44,1643
int uc_mgr_config_load(52,1762
void uc_mgr_free_value(88,2430
void uc_mgr_free_dev_list(102,2705
void uc_mgr_free_sequence_element(115,2996
void uc_mgr_free_sequence(130,3250
void uc_mgr_free_transition_element(142,3528
void uc_mgr_free_transition(149,3682
void uc_mgr_free_modifier(161,3974
void uc_mgr_free_device(180,4486
void uc_mgr_free_verb(199,4992
void uc_mgr_free(232,5950

alsa-lib-1.0.29/src/ucm/main.c,2262
static int check_identifier(51,1896
static int list_count(63,2149
static int alloc_str_list(74,2358
char *snd_use_case_identifier(snd_use_case_identifier97,2936
int snd_use_case_free_list(122,3448
static int open_ctl(133,3649
static int binary_file_parse(164,4337
static int execute_cset(222,5563
static int execute_sequence(279,6836
static int import_master_config(382,9321
static void *find0(find0404,9913
#define find(421,10257
static int get_list0(433,10673
#define get_list(467,11503
static int get_list20(481,12002
#define get_list2(525,13150
static inline struct use_case_verb *find_verb(find_verb537,13530
static int is_devlist_supported(545,13734
static inline int is_modifier_supported(578,14428
static inline int is_device_supported(584,14598
        find_device(597,14957
        find_modifier(625,15619
long device_status(646,16109
long modifier_status(660,16523
static int set_verb(681,17149
static int set_modifier(709,17766
static int set_device(743,18594
int snd_use_case_mgr_open(776,19417
int snd_use_case_mgr_reload(820,20400
int snd_use_case_mgr_close(845,20920
static int dismantle_use_case(855,21078
int snd_use_case_mgr_reset(898,22300
static int get_verb_list(918,22894
static int get_device_list(931,23335
static int get_modifier_list(954,24075
static int get_supcon_device_list(978,24873
static int get_supported_device_list(1029,25962
static int get_conflicting_device_list(1041,26351
struct myvalue 1048,26559
        struct list_head list;1049,26576
        char *value;value1050,26607
static int add_values(1054,26639
static int get_value_list(1092,28027
static int get_enabled_device_list(1160,30434
static int get_enabled_modifier_list(1176,30978
int snd_use_case_get_list(1193,31597
static int get_value1(1240,33322
static int get_value3(1261,33930
static int get_value(1289,34715
int snd_use_case_get(1359,36219
int snd_use_case_geti(1441,38145
	pthread_mutex_unlock(&uc_mgr->mutex)mutex1488,39420
static int handle_transition_verb(1492,39482
static int set_verb_user(1514,40254
static int set_device_user(1553,41547
static int set_modifier_user(1567,41998
static int switch_device(1582,42474
static int switch_modifier(1636,44567
int snd_use_case_set(1695,46769

alsa-lib-1.0.29/src/ucm/ucm_local.h,2770
#define UC_MGR_DEBUG36,1482
#define MAX_FILE	43,1574
#define ALSA_USE_CASE_DIR	44,1596
#define SEQUENCE_ELEMENT_TYPE_CDEV	46,1646
#define SEQUENCE_ELEMENT_TYPE_CSET	47,1683
#define SEQUENCE_ELEMENT_TYPE_SLEEP	48,1720
#define SEQUENCE_ELEMENT_TYPE_EXEC	49,1758
#define SEQUENCE_ELEMENT_TYPE_CSET_BIN_FILE	50,1795
struct ucm_value 52,1842
        struct list_head list;53,1861
        char *name;name54,1892
        char *data;data55,1912
struct sequence_element 58,1936
	struct list_head list;59,1962
	unsigned int type;60,1986
		long sleep;62,2015
		char *cdev;cdev63,2087
		char *cset;cset64,2101
		char *exec;exec65,2115
	} data;66,2129
struct transition_sequence 72,2231
	struct list_head list;73,2260
	char *name;name74,2284
	struct list_head transition_list;75,2297
enum dev_list_type 81,2374
	DEVLIST_NONE,82,2395
	DEVLIST_SUPPORTED,83,2410
	DEVLIST_CONFLICTING84,2430
struct dev_list_node 87,2455
	struct list_head list;88,2478
	char *name;name89,2502
struct dev_list 92,2519
	enum dev_list_type type;93,2537
	struct list_head list;94,2563
struct use_case_modifier 101,2711
	struct list_head list;102,2738
	struct list_head active_list;103,2762
	char *name;name105,2794
	char *comment;comment106,2807
	struct list_head enable_list;109,2869
	struct list_head disable_list;110,2900
	struct list_head transition_list;113,2965
	struct dev_list dev_list;116,3049
	struct list_head value_list;119,3091
struct use_case_device 126,3241
	struct list_head list;127,3266
	struct list_head active_list;128,3290
	char *name;name130,3322
	char *comment;comment131,3335
	struct list_head enable_list;134,3395
	struct list_head disable_list;135,3426
	struct list_head transition_list;138,3489
	struct dev_list dev_list;141,3573
	struct list_head value_list;144,3619
struct use_case_verb 151,3783
	struct list_head list;152,3806
	unsigned int active:active154,3831
	char *name;name156,3857
	char *comment;comment157,3870
	struct list_head enable_list;160,3928
	struct list_head disable_list;161,3959
	struct list_head transition_list;164,4020
	struct list_head device_list;167,4116
	struct list_head modifier_list;170,4201
	struct list_head value_list;173,4253
struct snd_use_case_mgr 179,4342
	char *card_name;card_name180,4368
	char *comment;comment181,4386
	struct list_head verb_list;184,4472
	struct list_head default_list;187,4537
	struct list_head value_list;190,4607
	struct use_case_verb *active_verb;active_verb193,4660
	struct list_head active_devices;194,4696
	struct list_head active_modifiers;195,4730
	pthread_mutex_t mutex;198,4782
	snd_ctl_t *ctl;ctl201,4844
	char *ctl_dev;ctl_dev202,4861
#define uc_error 205,4881
#define uc_dbg 208,4926
#define uc_dbg(210,4954

alsa-lib-1.0.29/src/ucm/parser.c,975
#define ALSA_CONFIG_UCM_VAR 37,1591
int parse_string(46,1770
int parse_is_name_safe(62,2007
int parse_get_safe_id(71,2155
static int parse_transition(86,2385
static int parse_compound(135,3357
static int strip_legacy_dev_index(168,4150
static int parse_device_list(185,4460
static int parse_sequence(252,5888
static int parse_value(369,8658
static int parse_modifier(483,11103
static int parse_device(630,14218
static int parse_compound_check_legacy(743,16809
static int parse_device_name(789,17725
static int parse_modifier_name(797,17944
static int parse_verb(842,19086
static int parse_verb_file(910,20788
static int parse_master_section(1013,23291
static int parse_controls(1076,24794
static int parse_master_file(1136,26223
static int load_master_config(1197,27582
int uc_mgr_import_master_config(1219,28098
static int filename_filter(1235,28394
int uc_mgr_scan_master_configs(1253,28750
#define SORTFUNC	1268,29121
#define SORTFUNC	1270,29156

alsa-lib-1.0.29/alsalisp/alsalisp.c,167
static int verbose 31,1002
static int warning 32,1026
static int debug 33,1050
static void interpret_filename(35,1073
static void usage(73,2156
int main(79,2251

install/include/alsa/control.h,4181
#define __ALSA_CONTROL_H29,1099
#define SND_CONTROL_DLSYM_VERSION	43,1342
typedef struct snd_aes_iec958 46,1420
	unsigned char status[status47,1452
	unsigned char subcode[subcode48,1518
	unsigned char pad;49,1579
	unsigned char dig_subframe[dig_subframe50,1616
} snd_aes_iec958_t;51,1681
typedef struct _snd_ctl_card_info snd_ctl_card_info_t;54,1733
typedef struct _snd_ctl_elem_id snd_ctl_elem_id_t;57,1829
typedef struct _snd_ctl_elem_list snd_ctl_elem_list_t;60,1926
typedef struct _snd_ctl_elem_info snd_ctl_elem_info_t;63,2016
typedef struct _snd_ctl_elem_value snd_ctl_elem_value_t;66,2107
typedef struct _snd_ctl_event snd_ctl_event_t;69,2192
typedef enum _snd_ctl_elem_type 72,2264
	SND_CTL_ELEM_TYPE_NONE 74,2319
	SND_CTL_ELEM_TYPE_BOOLEAN,76,2373
	SND_CTL_ELEM_TYPE_INTEGER,78,2426
	SND_CTL_ELEM_TYPE_ENUMERATED,80,2482
	SND_CTL_ELEM_TYPE_BYTES,82,2536
	SND_CTL_ELEM_TYPE_IEC958,84,2602
	SND_CTL_ELEM_TYPE_INTEGER64,86,2661
	SND_CTL_ELEM_TYPE_LAST 87,2691
	SND_CTL_ELEM_TYPE_LAST = SND_CTL_ELEM_TYPE_INTEGER6487,2691
} snd_ctl_elem_type_t;88,2745
typedef enum _snd_ctl_elem_iface 91,2798
	SND_CTL_ELEM_IFACE_CARD 93,2852
	SND_CTL_ELEM_IFACE_HWDEP,95,2916
	SND_CTL_ELEM_IFACE_MIXER,97,2957
	SND_CTL_ELEM_IFACE_PCM,99,2996
	SND_CTL_ELEM_IFACE_RAWMIDI,101,3037
	SND_CTL_ELEM_IFACE_TIMER,103,3080
	SND_CTL_ELEM_IFACE_SEQUENCER,105,3125
	SND_CTL_ELEM_IFACE_LAST 106,3156
	SND_CTL_ELEM_IFACE_LAST = SND_CTL_ELEM_IFACE_SEQUENCER106,3156
} snd_ctl_elem_iface_t;107,3212
typedef enum _snd_ctl_event_type 110,3256
	SND_CTL_EVENT_ELEM 112,3322
	SND_CTL_EVENT_LAST 113,3347
	SND_CTL_EVENT_LAST = SND_CTL_EVENT_ELEM113,3347
}snd_ctl_event_type_t;snd_ctl_event_type_t114,3388
#define SND_CTL_EVENT_MASK_REMOVE 118,3530
#define SND_CTL_EVENT_MASK_VALUE	120,3626
#define SND_CTL_EVENT_MASK_INFO	122,3720
#define SND_CTL_EVENT_MASK_ADD	124,3807
#define SND_CTL_EVENT_MASK_TLV	126,3907
#define SND_CTL_NAME_NONE	129,3970
#define SND_CTL_NAME_PLAYBACK	131,4025
#define SND_CTL_NAME_CAPTURE	133,4093
#define SND_CTL_NAME_IEC958_NONE	136,4160
#define SND_CTL_NAME_IEC958_SWITCH	138,4221
#define SND_CTL_NAME_IEC958_VOLUME	140,4290
#define SND_CTL_NAME_IEC958_DEFAULT	142,4359
#define SND_CTL_NAME_IEC958_MASK	144,4430
#define SND_CTL_NAME_IEC958_CON_MASK	146,4495
#define SND_CTL_NAME_IEC958_PRO_MASK	148,4568
#define SND_CTL_NAME_IEC958_PCM_STREAM	150,4641
#define SND_CTL_NAME_IEC958(152,4735
#define SND_CTL_POWER_MASK	155,4901
#define SND_CTL_POWER_D0 157,4967
#define SND_CTL_POWER_D1 159,5040
#define SND_CTL_POWER_D2 161,5114
#define SND_CTL_POWER_D3 163,5186
#define SND_CTL_POWER_D3hot	165,5261
#define SND_CTL_POWER_D3cold	167,5351
#define SND_CTL_TLVT_CONTAINER	170,5442
#define SND_CTL_TLVT_DB_SCALE	172,5514
#define SND_CTL_TLVT_DB_LINEAR	174,5584
#define SND_CTL_TLVT_DB_RANGE	176,5660
#define SND_CTL_TLVT_DB_MINMAX	178,5753
#define SND_CTL_TLVT_DB_MINMAX_MUTE	180,5859
#define SND_CTL_TLV_DB_GAIN_MUTE	183,5921
#define SND_CTL_TLVT_CHMAP_FIXED	186,6010
#define SND_CTL_TLVT_CHMAP_VAR	188,6108
#define SND_CTL_TLVT_CHMAP_PAIRED	190,6208
typedef enum _snd_ctl_type 193,6267
	SND_CTL_TYPE_HW,195,6321
	SND_CTL_TYPE_SHM,197,6372
	SND_CTL_TYPE_INET,199,6437
	SND_CTL_TYPE_EXT201,6489
} snd_ctl_type_t;202,6507
#define SND_CTL_NONBLOCK	205,6589
#define SND_CTL_ASYNC	208,6687
#define SND_CTL_READONLY	211,6774
typedef struct _snd_ctl snd_ctl_t;214,6826
#define SND_SCTL_NOFREE	217,6909
typedef struct _snd_sctl snd_sctl_t;220,6960
static __inline__ int snd_ctl_abort(237,7733
#define snd_ctl_elem_id_alloca(308,11435
#define snd_ctl_card_info_alloca(331,12806
#define snd_ctl_event_alloca(349,13808
#define snd_ctl_elem_list_alloca(361,14336
#define snd_ctl_elem_info_alloca(382,15733
#define snd_ctl_elem_value_alloca(438,19693
typedef struct _snd_hctl_elem snd_hctl_elem_t;497,23512
typedef struct _snd_hctl snd_hctl_t;500,23579
typedef int (*snd_hctl_compare_t)snd_hctl_compare_t508,23787
typedef int (*snd_hctl_callback_t)snd_hctl_callback_t519,24164
typedef int (*snd_hctl_elem_callback_t)snd_hctl_elem_callback_t528,24434
static __inline__ int snd_hctl_abort(535,24741

install/include/alsa/pcm_ioplug.h,2402
#define __ALSA_PCM_IOPLUG_H32,1042
	SND_PCM_IOPLUG_HW_ACCESS 43,1240
	SND_PCM_IOPLUG_HW_FORMAT,44,1291
	SND_PCM_IOPLUG_HW_CHANNELS,45,1333
	SND_PCM_IOPLUG_HW_RATE,46,1379
	SND_PCM_IOPLUG_HW_PERIOD_BYTES,47,1418
	SND_PCM_IOPLUG_HW_BUFFER_BYTES,48,1472
	SND_PCM_IOPLUG_HW_PERIODS,49,1526
	SND_PCM_IOPLUG_HW_PARAMS	50,1580
typedef struct snd_pcm_ioplug snd_pcm_ioplug_t;54,1673
typedef struct snd_pcm_ioplug_callback snd_pcm_ioplug_callback_t;56,1753
typedef snd_pcm_ioplug snd_pcm_ioplug_t;59,1880
typedef snd_pcm_ioplug_callback snd_pcm_ioplug_callback_t;60,1921
#define SND_PCM_IOPLUG_FLAG_LISTED	66,2034
#define SND_PCM_IOPLUG_FLAG_MONOTONIC	67,2102
#define SND_PCM_IOPLUG_VERSION_MAJOR	72,2205
#define SND_PCM_IOPLUG_VERSION_MINOR	73,2275
#define SND_PCM_IOPLUG_VERSION_TINY	74,2345
#define SND_PCM_IOPLUG_VERSION	78,2451
struct snd_pcm_ioplug 83,2627
	unsigned int version;88,2771
	const char *name;name92,2884
	unsigned int flags;93,2903
	int poll_fd;94,2956
	unsigned int poll_events;95,3000
	unsigned int mmap_rw;96,3047
	const snd_pcm_ioplug_callback_t *callback;callback100,3191
	void *private_data;private_data104,3312
	snd_pcm_t *pcm;pcm108,3394
	snd_pcm_stream_t stream;110,3412
	snd_pcm_state_t state;111,3474
	volatile snd_pcm_uframes_t appl_ptr;112,3536
	volatile snd_pcm_uframes_t hw_ptr;113,3613
	int nonblock;114,3679
	snd_pcm_access_t access;116,3731
	snd_pcm_format_t format;117,3811
	unsigned int channels;118,3890
	unsigned int rate;119,3976
	snd_pcm_uframes_t period_size;120,4044
	snd_pcm_uframes_t buffer_size;121,4130
struct snd_pcm_ioplug_callback 125,4252
	int (*start)start129,4323
	int (*stop)stop133,4397
	snd_pcm_sframes_t (*pointer)pointer137,4486
	snd_pcm_sframes_t (*transfer)transfer141,4581
	int (*close)close148,4790
	int (*hw_params)hw_params152,4861
	int (*hw_free)hw_free156,4963
	int (*sw_params)sw_params160,5036
	int (*prepare)prepare164,5138
	int (*drain)drain168,5207
	int (*pause)pause172,5281
	int (*resume)resume176,5361
	int (*poll_descriptors_count)poll_descriptors_count180,5446
	int (*poll_descriptors)poll_descriptors184,5541
	int (*poll_revents)poll_revents188,5672
	void (*dump)dump192,5809
	int (*delay)delay196,5937
	snd_pcm_chmap_query_t **(*query_chmaps)query_chmaps200,6062
	snd_pcm_chmap_t *(*get_chmap)get_chmap204,6184
	int (*set_chmap)set_chmap208,6296

install/include/alsa/rawmidi.h,991
#define __ALSA_RAWMIDI_H29,1099
#define SND_RAWMIDI_DLSYM_VERSION	42,1338
typedef struct _snd_rawmidi_info snd_rawmidi_info_t;45,1429
typedef struct _snd_rawmidi_params snd_rawmidi_params_t;47,1516
typedef struct _snd_rawmidi_status snd_rawmidi_status_t;49,1605
typedef enum _snd_rawmidi_stream 52,1697
	SND_RAWMIDI_STREAM_OUTPUT 54,1754
	SND_RAWMIDI_STREAM_INPUT,56,1807
	SND_RAWMIDI_STREAM_LAST 57,1834
	SND_RAWMIDI_STREAM_LAST = SND_RAWMIDI_STREAM_INPUT57,1834
} snd_rawmidi_stream_t;58,1886
#define SND_RAWMIDI_APPEND	61,1962
#define SND_RAWMIDI_NONBLOCK	63,2058
#define SND_RAWMIDI_SYNC	65,2154
typedef struct _snd_rawmidi snd_rawmidi_t;68,2209
typedef enum _snd_rawmidi_type 71,2273
	SND_RAWMIDI_TYPE_HW,73,2335
	SND_RAWMIDI_TYPE_SHM,75,2416
	SND_RAWMIDI_TYPE_INET,77,2489
	SND_RAWMIDI_TYPE_VIRTUAL79,2549
} snd_rawmidi_type_t;80,2575
#define snd_rawmidi_info_alloca(96,3406
#define snd_rawmidi_params_alloca(119,4902
#define snd_rawmidi_status_alloca(136,6067

install/include/alsa/pcm.h,13434
#define __ALSA_PCM_H30,1135
#define SND_PCM_DLSYM_VERSION	43,1339
typedef struct _snd_pcm_info snd_pcm_info_t;46,1420
typedef struct _snd_pcm_hw_params snd_pcm_hw_params_t;62,2225
typedef struct _snd_pcm_sw_params snd_pcm_sw_params_t;65,2325
 typedef struct _snd_pcm_status snd_pcm_status_t;67,2408
typedef struct _snd_pcm_access_mask snd_pcm_access_mask_t;69,2487
typedef struct _snd_pcm_format_mask snd_pcm_format_mask_t;71,2570
typedef struct _snd_pcm_subformat_mask snd_pcm_subformat_mask_t;73,2656
typedef enum _snd_pcm_class 76,2739
	SND_PCM_CLASS_GENERIC 79,2794
	SND_PCM_CLASS_MULTI,81,2850
	SND_PCM_CLASS_MODEM,83,2902
	SND_PCM_CLASS_DIGITIZER,85,2949
	SND_PCM_CLASS_LAST 86,2975
	SND_PCM_CLASS_LAST = SND_PCM_CLASS_DIGITIZER86,2975
} snd_pcm_class_t;87,3021
typedef enum _snd_pcm_subclass 90,3061
	SND_PCM_SUBCLASS_GENERIC_MIX 92,3132
	SND_PCM_SUBCLASS_MULTI_MIX,94,3218
	SND_PCM_SUBCLASS_LAST 95,3247
	SND_PCM_SUBCLASS_LAST = SND_PCM_SUBCLASS_MULTI_MIX95,3247
} snd_pcm_subclass_t;96,3299
typedef enum _snd_pcm_stream 99,3352
	SND_PCM_STREAM_PLAYBACK 101,3407
	SND_PCM_STREAM_CAPTURE,103,3460
	SND_PCM_STREAM_LAST 104,3485
	SND_PCM_STREAM_LAST = SND_PCM_STREAM_CAPTURE104,3485
} snd_pcm_stream_t;105,3531
typedef enum _snd_pcm_access 108,3575
	SND_PCM_ACCESS_MMAP_INTERLEAVED 110,3659
	SND_PCM_ACCESS_MMAP_NONINTERLEAVED,112,3754
	SND_PCM_ACCESS_MMAP_COMPLEX,114,3834
	SND_PCM_ACCESS_RW_INTERLEAVED,116,3908
	SND_PCM_ACCESS_RW_NONINTERLEAVED,118,3984
	SND_PCM_ACCESS_LAST 119,4019
	SND_PCM_ACCESS_LAST = SND_PCM_ACCESS_RW_NONINTERLEAVED119,4019
} snd_pcm_access_t;120,4075
typedef enum _snd_pcm_format 123,4121
	SND_PCM_FORMAT_UNKNOWN 125,4168
	SND_PCM_FORMAT_S8 127,4219
	SND_PCM_FORMAT_U8,129,4266
	SND_PCM_FORMAT_S16_LE,131,4322
	SND_PCM_FORMAT_S16_BE,133,4379
	SND_PCM_FORMAT_U16_LE,135,4441
	SND_PCM_FORMAT_U16_BE,137,4500
	SND_PCM_FORMAT_S24_LE,139,4597
	SND_PCM_FORMAT_S24_BE,141,4691
	SND_PCM_FORMAT_U24_LE,143,4790
	SND_PCM_FORMAT_U24_BE,145,4886
	SND_PCM_FORMAT_S32_LE,147,4946
	SND_PCM_FORMAT_S32_BE,149,5003
	SND_PCM_FORMAT_U32_LE,151,5065
	SND_PCM_FORMAT_U32_BE,153,5124
	SND_PCM_FORMAT_FLOAT_LE,155,5202
	SND_PCM_FORMAT_FLOAT_BE,157,5279
	SND_PCM_FORMAT_FLOAT64_LE,159,5359
	SND_PCM_FORMAT_FLOAT64_BE,161,5438
	SND_PCM_FORMAT_IEC958_SUBFRAME_LE,163,5496
	SND_PCM_FORMAT_IEC958_SUBFRAME_BE,165,5559
	SND_PCM_FORMAT_MU_LAW,167,5610
	SND_PCM_FORMAT_A_LAW,169,5648
	SND_PCM_FORMAT_IMA_ADPCM,171,5689
	SND_PCM_FORMAT_MPEG,173,5729
	SND_PCM_FORMAT_GSM,175,5763
	SND_PCM_FORMAT_SPECIAL 177,5800
	SND_PCM_FORMAT_S24_3LE 179,5882
	SND_PCM_FORMAT_S24_3BE,181,5961
	SND_PCM_FORMAT_U24_3LE,183,6040
	SND_PCM_FORMAT_U24_3BE,185,6116
	SND_PCM_FORMAT_S20_3LE,187,6193
	SND_PCM_FORMAT_S20_3BE,189,6267
	SND_PCM_FORMAT_U20_3LE,191,6346
	SND_PCM_FORMAT_U20_3BE,193,6422
	SND_PCM_FORMAT_S18_3LE,195,6499
	SND_PCM_FORMAT_S18_3BE,197,6573
	SND_PCM_FORMAT_U18_3LE,199,6652
	SND_PCM_FORMAT_U18_3BE,201,6728
	SND_PCM_FORMAT_G723_24,203,6806
	SND_PCM_FORMAT_G723_24_1B,205,6882
	SND_PCM_FORMAT_G723_40,207,6963
	SND_PCM_FORMAT_G723_40_1B,209,7039
	SND_PCM_FORMAT_DSD_U8,211,7125
	SND_PCM_FORMAT_DSD_U16_LE,213,7208
	SND_PCM_FORMAT_DSD_U32_LE,215,7295
	SND_PCM_FORMAT_DSD_U16_BE,217,7382
	SND_PCM_FORMAT_DSD_U32_BE,219,7469
	SND_PCM_FORMAT_LAST 220,7497
	SND_PCM_FORMAT_LAST = SND_PCM_FORMAT_DSD_U32_BE,220,7497
	SND_PCM_FORMAT_S16 224,7617
	SND_PCM_FORMAT_S16 = SND_PCM_FORMAT_S16_LE,224,7617
	SND_PCM_FORMAT_U16 226,7697
	SND_PCM_FORMAT_U16 = SND_PCM_FORMAT_U16_LE,226,7697
	SND_PCM_FORMAT_S24 228,7775
	SND_PCM_FORMAT_S24 = SND_PCM_FORMAT_S24_LE,228,7775
	SND_PCM_FORMAT_U24 230,7855
	SND_PCM_FORMAT_U24 = SND_PCM_FORMAT_U24_LE,230,7855
	SND_PCM_FORMAT_S32 232,7933
	SND_PCM_FORMAT_S32 = SND_PCM_FORMAT_S32_LE,232,7933
	SND_PCM_FORMAT_U32 234,8013
	SND_PCM_FORMAT_U32 = SND_PCM_FORMAT_U32_LE,234,8013
	SND_PCM_FORMAT_FLOAT 236,8090
	SND_PCM_FORMAT_FLOAT = SND_PCM_FORMAT_FLOAT_LE,236,8090
	SND_PCM_FORMAT_FLOAT64 238,8171
	SND_PCM_FORMAT_FLOAT64 = SND_PCM_FORMAT_FLOAT64_LE,238,8171
	SND_PCM_FORMAT_IEC958_SUBFRAME 240,8251
	SND_PCM_FORMAT_IEC958_SUBFRAME = SND_PCM_FORMAT_IEC958_SUBFRAME_LE240,8251
	SND_PCM_FORMAT_S16 243,8387
	SND_PCM_FORMAT_S16 = SND_PCM_FORMAT_S16_BE,243,8387
	SND_PCM_FORMAT_U16 245,8467
	SND_PCM_FORMAT_U16 = SND_PCM_FORMAT_U16_BE,245,8467
	SND_PCM_FORMAT_S24 247,8545
	SND_PCM_FORMAT_S24 = SND_PCM_FORMAT_S24_BE,247,8545
	SND_PCM_FORMAT_U24 249,8625
	SND_PCM_FORMAT_U24 = SND_PCM_FORMAT_U24_BE,249,8625
	SND_PCM_FORMAT_S32 251,8703
	SND_PCM_FORMAT_S32 = SND_PCM_FORMAT_S32_BE,251,8703
	SND_PCM_FORMAT_U32 253,8783
	SND_PCM_FORMAT_U32 = SND_PCM_FORMAT_U32_BE,253,8783
	SND_PCM_FORMAT_FLOAT 255,8860
	SND_PCM_FORMAT_FLOAT = SND_PCM_FORMAT_FLOAT_BE,255,8860
	SND_PCM_FORMAT_FLOAT64 257,8941
	SND_PCM_FORMAT_FLOAT64 = SND_PCM_FORMAT_FLOAT64_BE,257,8941
	SND_PCM_FORMAT_IEC958_SUBFRAME 259,9021
	SND_PCM_FORMAT_IEC958_SUBFRAME = SND_PCM_FORMAT_IEC958_SUBFRAME_BE259,9021
} snd_pcm_format_t;263,9126
typedef enum _snd_pcm_subformat 266,9175
	SND_PCM_SUBFORMAT_STD 268,9226
	SND_PCM_SUBFORMAT_LAST 269,9254
	SND_PCM_SUBFORMAT_LAST = SND_PCM_SUBFORMAT_STD269,9254
} snd_pcm_subformat_t;270,9302
typedef enum _snd_pcm_state 273,9343
	SND_PCM_STATE_OPEN 275,9386
	SND_PCM_STATE_SETUP,277,9436
	SND_PCM_STATE_PREPARED,279,9481
	SND_PCM_STATE_RUNNING,281,9522
	SND_PCM_STATE_XRUN,283,9613
	SND_PCM_STATE_DRAINING,285,9692
	SND_PCM_STATE_PAUSED,287,9732
	SND_PCM_STATE_SUSPENDED,289,9785
	SND_PCM_STATE_DISCONNECTED,291,9844
	SND_PCM_STATE_LAST 292,9873
	SND_PCM_STATE_LAST = SND_PCM_STATE_DISCONNECTED292,9873
} snd_pcm_state_t;293,9922
typedef enum _snd_pcm_start 296,9964
	SND_PCM_START_DATA 298,10037
	SND_PCM_START_EXPLICIT,300,10085
	SND_PCM_START_LAST 301,10110
	SND_PCM_START_LAST = SND_PCM_START_EXPLICIT301,10110
} snd_pcm_start_t;302,10155
typedef enum _snd_pcm_xrun 305,10196
	SND_PCM_XRUN_NONE 307,10257
	SND_PCM_XRUN_STOP,309,10312
	SND_PCM_XRUN_LAST 310,10332
	SND_PCM_XRUN_LAST = SND_PCM_XRUN_STOP310,10332
} snd_pcm_xrun_t;311,10371
typedef enum _snd_pcm_tstamp 314,10416
	SND_PCM_TSTAMP_NONE 316,10468
	SND_PCM_TSTAMP_ENABLE,318,10553
	SND_PCM_TSTAMP_MMAP 322,10674
	SND_PCM_TSTAMP_MMAP = SND_PCM_TSTAMP_ENABLE,322,10674
	SND_PCM_TSTAMP_LAST 323,10720
	SND_PCM_TSTAMP_LAST = SND_PCM_TSTAMP_ENABLE323,10720
} snd_pcm_tstamp_t;324,10765
typedef enum _snd_pcm_tstamp_type 326,10786
	SND_PCM_TSTAMP_TYPE_GETTIMEOFDAY 327,10822
	SND_PCM_TSTAMP_TYPE_MONOTONIC,328,10892
	SND_PCM_TSTAMP_TYPE_MONOTONIC_RAW,329,10964
	SND_PCM_TSTAMP_TYPE_LAST 330,11030
	SND_PCM_TSTAMP_TYPE_LAST = SND_PCM_TSTAMP_TYPE_MONOTONIC_RAW,330,11030
} snd_pcm_tstamp_type_t;331,11093
typedef unsigned long snd_pcm_uframes_t;334,11151
typedef long snd_pcm_sframes_t;336,11222
#define SND_PCM_NONBLOCK	339,11318
#define SND_PCM_ASYNC	341,11419
#define SND_PCM_ABORT	343,11512
#define SND_PCM_NO_AUTO_RESAMPLE	345,11607
#define SND_PCM_NO_AUTO_CHANNELS	347,11713
#define SND_PCM_NO_AUTO_FORMAT	349,11818
#define SND_PCM_NO_SOFTVOL	351,11896
typedef struct _snd_pcm snd_pcm_t;354,11954
enum _snd_pcm_type 357,12006
	SND_PCM_TYPE_HW 359,12052
	SND_PCM_TYPE_HOOKS,361,12093
	SND_PCM_TYPE_MULTI,364,12193
	SND_PCM_TYPE_FILE,366,12242
	SND_PCM_TYPE_NULL,368,12288
	SND_PCM_TYPE_SHM,370,12341
	SND_PCM_TYPE_INET,372,12406
	SND_PCM_TYPE_COPY,374,12449
	SND_PCM_TYPE_LINEAR,376,12506
	SND_PCM_TYPE_ALAW,378,12564
	SND_PCM_TYPE_MULAW,380,12621
	SND_PCM_TYPE_ADPCM,382,12682
	SND_PCM_TYPE_RATE,384,12731
	SND_PCM_TYPE_ROUTE,386,12787
	SND_PCM_TYPE_PLUG,388,12836
	SND_PCM_TYPE_SHARE,390,12876
	SND_PCM_TYPE_METER,392,12918
	SND_PCM_TYPE_MIX,394,12958
	SND_PCM_TYPE_DROUTE,396,13036
	SND_PCM_TYPE_LBSERVER,398,13111
	SND_PCM_TYPE_LINEAR_FLOAT,400,13197
	SND_PCM_TYPE_LADSPA,402,13259
	SND_PCM_TYPE_DMIX,404,13310
	SND_PCM_TYPE_JACK,406,13371
	SND_PCM_TYPE_DSNOOP,408,13422
	SND_PCM_TYPE_DSHARE,410,13474
	SND_PCM_TYPE_IEC958,412,13527
	SND_PCM_TYPE_SOFTVOL,414,13576
	SND_PCM_TYPE_IOPLUG,416,13627
	SND_PCM_TYPE_EXTPLUG,418,13680
	SND_PCM_TYPE_MMAP_EMUL,420,13733
	SND_PCM_TYPE_LAST 421,13758
	SND_PCM_TYPE_LAST = SND_PCM_TYPE_MMAP_EMUL421,13758
typedef enum _snd_pcm_type snd_pcm_type_t;425,13822
typedef struct _snd_pcm_channel_area 428,13896
	void *addr;addr430,13975
	unsigned int first;432,14027
	unsigned int step;434,14081
} snd_pcm_channel_area_t;435,14101
typedef union _snd_pcm_sync_id 438,14158
	unsigned char id[id440,14208
	unsigned short id16[id16442,14249
	unsigned int id32[id32444,14292
} snd_pcm_sync_id_t;445,14315
typedef struct _snd_pcm_scope snd_pcm_scope_t;448,14377
static __inline__ int snd_pcm_abort(467,15283
#define SND_CHMAP_API_VERSION	506,17513
enum snd_pcm_chmap_type 509,17600
	SND_CHMAP_TYPE_NONE 510,17626
	SND_CHMAP_TYPE_FIXED,511,17687
	SND_CHMAP_TYPE_VAR,512,17740
	SND_CHMAP_TYPE_PAIRED,513,17802
	SND_CHMAP_TYPE_LAST 514,17870
	SND_CHMAP_TYPE_LAST = SND_CHMAP_TYPE_PAIRED,514,17870
enum snd_pcm_chmap_position 518,17963
	SND_CHMAP_UNKNOWN 519,17993
	SND_CHMAP_NA,520,18037
	SND_CHMAP_MONO,521,18073
	SND_CHMAP_FL,522,18111
	SND_CHMAP_FR,523,18146
	SND_CHMAP_RL,524,18182
	SND_CHMAP_RR,525,18216
	SND_CHMAP_FC,526,18251
	SND_CHMAP_LFE,527,18288
	SND_CHMAP_SL,528,18317
	SND_CHMAP_SR,529,18351
	SND_CHMAP_RC,530,18386
	SND_CHMAP_FLC,531,18422
	SND_CHMAP_FRC,532,18465
	SND_CHMAP_RLC,533,18509
	SND_CHMAP_RRC,534,18551
	SND_CHMAP_FLW,535,18594
	SND_CHMAP_FRW,536,18635
	SND_CHMAP_FLH,537,18677
	SND_CHMAP_FCH,538,18718
	SND_CHMAP_FRH,539,18761
	SND_CHMAP_TC,540,18803
	SND_CHMAP_TFL,541,18838
	SND_CHMAP_TFR,542,18878
	SND_CHMAP_TFC,543,18919
	SND_CHMAP_TRL,544,18961
	SND_CHMAP_TRR,545,19000
	SND_CHMAP_TRC,546,19040
	SND_CHMAP_TFLC,547,19081
	SND_CHMAP_TFRC,548,19129
	SND_CHMAP_TSL,549,19178
	SND_CHMAP_TSR,550,19217
	SND_CHMAP_LLFE,551,19257
	SND_CHMAP_RLFE,552,19292
	SND_CHMAP_BC,553,19328
	SND_CHMAP_BLC,554,19366
	SND_CHMAP_BRC,555,19410
	SND_CHMAP_LAST 556,19455
	SND_CHMAP_LAST = SND_CHMAP_BRC,556,19455
#define SND_CHMAP_POSITION_MASK	560,19528
#define SND_CHMAP_PHASE_INVERSE	563,19626
#define SND_CHMAP_DRIVER_SPEC	565,19730
typedef struct snd_pcm_chmap 568,19805
	unsigned int channels;569,19836
	unsigned int pos[pos570,19887
} snd_pcm_chmap_t;571,19940
typedef struct snd_pcm_chmap_query 574,20030
	enum snd_pcm_chmap_type type;575,20067
	snd_pcm_chmap_t map;576,20123
} snd_pcm_chmap_query_t;577,20176
#define snd_pcm_info_alloca(628,21960
typedef struct _snd_pcm_hw_strategy snd_pcm_hw_strategy_t;679,24672
typedef struct _snd_pcm_hw_strategy_simple_choices_list 682,24785
	unsigned int value;683,24843
	unsigned int badness;684,24864
} snd_pcm_hw_strategy_simple_choices_list_t;685,24887
#define snd_pcm_hw_params_alloca(709,25695
#define snd_pcm_sw_params_alloca(850,38298
#define snd_pcm_access_mask_alloca(898,40918
#define snd_pcm_format_mask_alloca(923,41948
#define snd_pcm_subformat_mask_alloca(948,42990
#define snd_pcm_status_alloca(973,44079
typedef enum _snd_pcm_hook_type 1098,49780
	SND_PCM_HOOK_TYPE_HW_PARAMS 1099,49814
	SND_PCM_HOOK_TYPE_HW_FREE,1100,49848
	SND_PCM_HOOK_TYPE_CLOSE,1101,49876
	SND_PCM_HOOK_TYPE_LAST 1102,49902
	SND_PCM_HOOK_TYPE_LAST = SND_PCM_HOOK_TYPE_CLOSE1102,49902
} snd_pcm_hook_type_t;1103,49952
typedef struct _snd_pcm_hook snd_pcm_hook_t;1106,50002
typedef int (*snd_pcm_hook_func_t)snd_pcm_hook_func_t1108,50081
typedef struct _snd_pcm_scope_ops 1127,50691
	int (*enable)enable1131,50817
	void (*disable)disable1135,50912
	void (*start)start1139,51022
	void (*stop)stop1143,51130
	void (*update)update1147,51239
	void (*reset)reset1151,51340
	void (*close)close1155,51442
} snd_pcm_scope_ops_t;1156,51482
typedef enum _snd_spcm_latency 1187,52717
	SND_SPCM_LATENCY_STANDARD 1190,52865
	SND_SPCM_LATENCY_MEDIUM,1193,52999
	SND_SPCM_LATENCY_REALTIME1196,53156
} snd_spcm_latency_t;1197,53183
typedef enum _snd_spcm_xrun_type 1200,53234
	SND_SPCM_XRUN_IGNORE 1202,53341
	SND_SPCM_XRUN_STOP1204,53430
} snd_spcm_xrun_type_t;1205,53450
typedef enum _snd_spcm_duplex_type 1208,53505
	SND_SPCM_DUPLEX_LIBERAL 1210,53611
	SND_SPCM_DUPLEX_PEDANTIC1212,53706
} snd_spcm_duplex_type_t;1213,53732
const char *snd_pcm_start_mode_name(snd_pcm_start_mode_name1250,54674
const char *snd_pcm_xrun_mode_name(snd_pcm_xrun_mode_name1251,54761
int snd_pcm_sw_params_set_start_mode(1252,54846
snd_pcm_start_t snd_pcm_sw_params_get_start_mode(1253,54978
int snd_pcm_sw_params_set_xrun_mode(1254,55091
snd_pcm_xrun_t snd_pcm_sw_params_get_xrun_mode(1255,55221
int snd_pcm_sw_params_set_xfer_align(1257,55405
int snd_pcm_sw_params_get_xfer_align(1258,55539
int snd_pcm_sw_params_set_sleep_min(1259,55664
int snd_pcm_sw_params_get_sleep_min(1260,55792
int snd_pcm_hw_params_get_tick_time(1263,56048
int snd_pcm_hw_params_get_tick_time_min(1264,56177
int snd_pcm_hw_params_get_tick_time_max(1265,56310
int snd_pcm_hw_params_test_tick_time(1266,56443
int snd_pcm_hw_params_set_tick_time(1267,56581
int snd_pcm_hw_params_set_tick_time_min(1268,56718
int snd_pcm_hw_params_set_tick_time_max(1269,56861
int snd_pcm_hw_params_set_tick_time_minmax(1270,57004
int snd_pcm_hw_params_set_tick_time_near(1271,57185
int snd_pcm_hw_params_set_tick_time_first(1272,57329
int snd_pcm_hw_params_set_tick_time_last(1273,57474

install/include/alsa/seqmid.h,1415
#define __ALSA_SEQMID_H29,1097
#define snd_seq_ev_clear(48,1450
#define snd_seq_ev_set_tag(58,1673
#define snd_seq_ev_set_dest(71,1979
#define snd_seq_ev_set_subs(82,2234
#define snd_seq_ev_set_broadcast(94,2539
#define snd_seq_ev_set_source(105,2816
#define snd_seq_ev_set_direct(117,3143
#define snd_seq_ev_schedule_tick(132,3568
#define snd_seq_ev_schedule_real(151,4220
#define snd_seq_ev_set_priority(163,4635
#define snd_seq_ev_set_fixed(175,4979
#define snd_seq_ev_set_variable(189,5394
#define snd_seq_ev_set_varusr(205,5912
#define snd_seq_ev_set_queue_control(218,6266
#define snd_seq_ev_set_queue_start(231,6668
#define snd_seq_ev_set_queue_stop(241,6944
#define snd_seq_ev_set_queue_continue(251,7218
#define snd_seq_ev_set_queue_tempo(260,7470
#define snd_seq_ev_set_queue_pos_real(269,7744
#define snd_seq_ev_set_queue_pos_tick(281,8153
#define snd_seq_start_queue(296,8711
#define snd_seq_stop_queue(305,8980
#define snd_seq_continue_queue(314,9255
#define snd_seq_change_queue_tempo(324,9573
#define snd_seq_ev_set_note(371,11289
#define snd_seq_ev_set_noteon(386,11685
#define snd_seq_ev_set_noteoff(400,12044
#define snd_seq_ev_set_keypress(414,12409
#define snd_seq_ev_set_controller(428,12789
#define snd_seq_ev_set_pgmchange(441,13147
#define snd_seq_ev_set_pitchbend(453,13490
#define snd_seq_ev_set_chanpress(465,13817
#define snd_seq_ev_set_sysex(479,14221

install/include/alsa/seq_midi_event.h,96
#define __ALSA_SEQ_MIDI_EVENT_H29,1113
typedef struct snd_midi_event snd_midi_event_t;43,1390

install/include/alsa/pcm_extplug.h,1626
#define __ALSA_PCM_EXTPLUG_H32,1066
	SND_PCM_EXTPLUG_HW_FORMAT,43,1270
	SND_PCM_EXTPLUG_HW_CHANNELS,44,1313
	SND_PCM_EXTPLUG_HW_PARAMS	45,1360
typedef struct snd_pcm_extplug snd_pcm_extplug_t;49,1469
typedef struct snd_pcm_extplug_callback snd_pcm_extplug_callback_t;51,1552
typedef snd_pcm_extplug snd_pcm_extplug_t;54,1681
typedef snd_pcm_extplug_callback snd_pcm_extplug_callback_t;55,1724
#define SND_PCM_EXTPLUG_VERSION_MAJOR	61,1820
#define SND_PCM_EXTPLUG_VERSION_MINOR	62,1891
#define SND_PCM_EXTPLUG_VERSION_TINY	63,1962
#define SND_PCM_EXTPLUG_VERSION	67,2073
struct snd_pcm_extplug 72,2254
	unsigned int version;77,2401
	const char *name;name81,2515
	const snd_pcm_extplug_callback_t *callback;callback85,2630
	void *private_data;private_data89,2752
	snd_pcm_t *pcm;pcm93,2834
	snd_pcm_stream_t stream;97,2900
	snd_pcm_format_t format;101,2993
	snd_pcm_subformat_t subformat;105,3089
	unsigned int channels;109,3190
	unsigned int rate;113,3279
	snd_pcm_format_t slave_format;117,3372
	snd_pcm_subformat_t slave_subformat;121,3480
	unsigned int slave_channels;125,3593
struct snd_pcm_extplug_callback 129,3660
	snd_pcm_sframes_t (*transfer)transfer133,3777
	int (*close)close142,4087
	int (*hw_params)hw_params146,4160
	int (*hw_free)hw_free150,4264
	void (*dump)dump154,4334
	int (*init)init158,4463
	snd_pcm_chmap_query_t **(*query_chmaps)query_chmaps162,4562
	snd_pcm_chmap_t *(*get_chmap)get_chmap166,4686
	int (*set_chmap)set_chmap170,4800
static __inline__ int snd_pcm_extplug_set_param(191,5755
static __inline__ int snd_pcm_extplug_set_slave_param(199,6002

install/include/alsa/pcm_rate.h,1576
#define __ALSA_PCM_RATE_H32,1091
#define SND_PCM_RATE_PLUGIN_VERSION	41,1186
typedef struct snd_pcm_rate_side_info 44,1279
	snd_pcm_format_t format;45,1319
	unsigned int rate;46,1345
	snd_pcm_uframes_t buffer_size;47,1365
	snd_pcm_uframes_t period_size;48,1397
} snd_pcm_rate_side_info_t;49,1429
typedef struct snd_pcm_rate_info 52,1487
	struct snd_pcm_rate_side_info in;53,1522
	struct snd_pcm_rate_side_info out;54,1557
	unsigned int channels;55,1593
} snd_pcm_rate_info_t;56,1617
typedef struct snd_pcm_rate_ops 59,1681
	void (*close)close63,1759
	int (*init)init67,1846
	void (*free)free71,1941
	void (*reset)reset75,2030
	int (*adjust_pitch)adjust_pitch79,2119
	void (*convert)convert83,2210
	void (*convert_s16)convert_s1691,2519
	snd_pcm_uframes_t (*input_frames)input_frames96,2690
	snd_pcm_uframes_t (*output_frames)output_frames100,2811
	unsigned int version;105,2978
	int (*get_supported_rates)get_supported_rates110,3095
	void (*dump)dump116,3283
} snd_pcm_rate_ops_t;117,3328
typedef int (*snd_pcm_rate_open_func_t)snd_pcm_rate_open_func_t120,3377
#define SND_PCM_RATE_PLUGIN_ENTRY(126,3560
typedef struct snd_pcm_rate_old_ops 131,3698
	void (*close)close132,3736
	int (*init)init133,3763
	void (*free)free134,3815
	void (*reset)reset135,3841
	int (*adjust_pitch)adjust_pitch136,3868
	void (*convert)convert137,3928
	void (*convert_s16)convert_s16142,4161
	snd_pcm_uframes_t (*input_frames)input_frames144,4285
	snd_pcm_uframes_t (*output_frames)output_frames145,4358
} snd_pcm_rate_old_ops_t;146,4432

install/include/alsa/asoundlib.h,58
#define __ASOUNDLIB_H29,1098
#define __inline__ 44,1361

install/include/alsa/pcm_plugin.h,493
#define SND_PCM_PLUGIN_RATE_MIN 41,1385
#define SND_PCM_PLUGIN_RATE_MAX 42,1463
#define SND_PCM_PLUGIN_ROUTE_FLOAT 46,1645
#define SND_PCM_PLUGIN_ROUTE_FLOAT 48,1729
#define SND_PCM_PLUGIN_ROUTE_RESOLUTION 51,1813
typedef float snd_pcm_route_ttable_entry_t;55,1963
#define SND_PCM_PLUGIN_ROUTE_HALF 56,2007
#define SND_PCM_PLUGIN_ROUTE_FULL 57,2064
typedef int snd_pcm_route_ttable_entry_t;60,2158
#define SND_PCM_PLUGIN_ROUTE_HALF 61,2200
#define SND_PCM_PLUGIN_ROUTE_FULL 62,2291

install/include/alsa/version.h,188
#define SND_LIB_MAJOR	5,22
#define SND_LIB_MINOR	6,87
#define SND_LIB_SUBMINOR	7,152
#define SND_LIB_EXTRAVER	8,223
#define SND_LIB_VERSION	10,331
#define SND_LIB_VERSION_STR	14,461

install/include/alsa/use-case.h,1456
#define __ALSA_USE_CASE_H39,1561
#define SND_USE_CASE_VERB_INACTIVE	100,3712
#define SND_USE_CASE_VERB_HIFI	101,3782
#define SND_USE_CASE_VERB_HIFI_LOW_POWER	102,3842
#define SND_USE_CASE_VERB_VOICE	103,3928
#define SND_USE_CASE_VERB_VOICE_LOW_POWER	104,3991
#define SND_USE_CASE_VERB_VOICECALL	105,4080
#define SND_USE_CASE_VERB_IP_VOICECALL	106,4155
#define SND_USE_CASE_VERB_ANALOG_RADIO	107,4239
#define SND_USE_CASE_VERB_DIGITAL_RADIO	108,4326
#define SND_USE_CASE_DEV_NONE	118,4615
#define SND_USE_CASE_DEV_SPEAKER	119,4674
#define SND_USE_CASE_DEV_LINE	120,4740
#define SND_USE_CASE_DEV_HEADPHONES	121,4799
#define SND_USE_CASE_DEV_HEADSET	122,4874
#define SND_USE_CASE_DEV_HANDSET	123,4940
#define SND_USE_CASE_DEV_BLUETOOTH	124,5006
#define SND_USE_CASE_DEV_EARPIECE	125,5078
#define SND_USE_CASE_DEV_SPDIF	126,5147
#define SND_USE_CASE_DEV_HDMI	127,5209
#define SND_USE_CASE_MOD_CAPTURE_VOICE	149,6022
#define SND_USE_CASE_MOD_CAPTURE_MUSIC	150,6110
#define SND_USE_CASE_MOD_PLAY_MUSIC	151,6198
#define SND_USE_CASE_MOD_PLAY_VOICE	152,6277
#define SND_USE_CASE_MOD_PLAY_TONE	153,6356
#define SND_USE_CASE_MOD_ECHO_REF	154,6432
#define SND_USE_CASE_TQ_MUSIC	166,6793
#define SND_USE_CASE_TQ_VOICE	167,6860
#define SND_USE_CASE_TQ_TONES	168,6927
typedef struct snd_use_case_mgr snd_use_case_mgr_t;171,7021
static __inline__ int snd_use_case_card_list(372,14482
static __inline__ int snd_use_case_verb_list(383,14793

install/include/alsa/sound/sscape_ioctl.h,295
#define SSCAPE_IOCTL_H2,23
struct sscape_bootblock5,48
  unsigned char code[code7,74
  unsigned version;8,101
#define SSCAPE_MICROCODE_SIZE 11,125
struct sscape_microcode13,163
  unsigned char *code;code15,189
#define SND_SSCAPE_LOAD_BOOTB 18,216
#define SND_SSCAPE_LOAD_MCODE 19,288

install/include/alsa/sound/hdsp.h,2401
#define __SOUND_HDSP_H2,23
#define HDSP_MATRIX_MIXER_SIZE 24,864
	Digiface,27,916
	Multiface,28,927
	H9652,29,939
	H9632,30,947
	RPM,31,955
	Undefined,32,961
} HDSP_IO_Type;33,973
typedef struct _snd_hdsp_peak_rms hdsp_peak_rms_t;35,990
struct _snd_hdsp_peak_rms 37,1042
	uint32_t input_peaks[input_peaks38,1070
	uint32_t playback_peaks[playback_peaks39,1097
	uint32_t output_peaks[output_peaks40,1127
	uint64_t input_rms[input_rms41,1155
	uint64_t playback_rms[playback_rms42,1180
	uint64_t output_rms[output_rms44,1251
#define SNDRV_HDSP_IOCTL_GET_PEAK_RMS 47,1281
typedef struct _snd_hdsp_config_info hdsp_config_info_t;49,1353
struct _snd_hdsp_config_info 51,1411
	unsigned char pref_sync_ref;52,1442
	unsigned char wordclock_sync_check;53,1472
	unsigned char spdif_sync_check;54,1509
	unsigned char adatsync_sync_check;55,1542
	unsigned char adat_sync_check[adat_sync_check56,1578
	unsigned char spdif_in;57,1613
	unsigned char spdif_out;58,1638
	unsigned char spdif_professional;59,1664
	unsigned char spdif_emphasis;60,1699
	unsigned char spdif_nonaudio;61,1730
	unsigned int spdif_sample_rate;62,1761
	unsigned int system_sample_rate;63,1794
	unsigned int autosync_sample_rate;64,1828
	unsigned char system_clock_mode;65,1864
	unsigned char clock_source;66,1898
	unsigned char autosync_ref;67,1927
	unsigned char line_out;68,1956
	unsigned char passthru;69,1981
	unsigned char da_gain;70,2007
	unsigned char ad_gain;71,2031
	unsigned char phone_gain;72,2055
	unsigned char xlr_breakout_cable;73,2082
	unsigned char analog_extension_board;74,2117
#define SNDRV_HDSP_IOCTL_GET_CONFIG_INFO 77,2160
typedef struct _snd_hdsp_firmware hdsp_firmware_t;79,2238
struct _snd_hdsp_firmware 81,2290
	void *firmware_data;firmware_data82,2318
#define SNDRV_HDSP_IOCTL_UPLOAD_FIRMWARE 85,2366
typedef struct _snd_hdsp_version hdsp_version_t;87,2441
struct _snd_hdsp_version 89,2491
	HDSP_IO_Type io_type;90,2518
	unsigned short firmware_rev;91,2541
#define SNDRV_HDSP_IOCTL_GET_VERSION 94,2575
typedef struct _snd_hdsp_mixer hdsp_mixer_t;96,2645
struct _snd_hdsp_mixer 98,2691
	unsigned short matrix[matrix99,2716
#define SNDRV_HDSP_IOCTL_GET_MIXER 102,2768
typedef struct _snd_hdsp_9632_aeb hdsp_9632_aeb_t;104,2834
struct _snd_hdsp_9632_aeb 106,2886
	int aebi;107,2914
	int aebo;108,2925
#define SNDRV_HDSP_IOCTL_GET_9632_AEB 111,2940

install/include/alsa/sound/hdspm.h,3597
#define __SOUND_HDSPM_H2,24
#define HDSPM_MAX_CHANNELS 24,966
enum hdspm_io_type 26,1002
	MADI,27,1023
	MADIface,28,1030
	AIO,29,1041
	AES32,30,1047
	RayDAT31,1055
enum hdspm_speed 34,1067
	ss,35,1086
	ds,36,1091
	qs37,1096
struct hdspm_peak_rms 42,1175
	uint32_t input_peaks[input_peaks43,1199
	uint32_t playback_peaks[playback_peaks44,1226
	uint32_t output_peaks[output_peaks45,1256
	uint64_t input_rms[input_rms47,1285
	uint64_t playback_rms[playback_rms48,1310
	uint64_t output_rms[output_rms49,1338
	uint8_t speed;51,1365
	int status2;52,1405
#define SNDRV_HDSPM_IOCTL_GET_PEAK_RMS 55,1423
struct hdspm_config 60,1567
	unsigned char pref_sync_ref;61,1589
	unsigned char wordclock_sync_check;62,1619
	unsigned char madi_sync_check;63,1656
	unsigned int system_sample_rate;64,1688
	unsigned int autosync_sample_rate;65,1722
	unsigned char system_clock_mode;66,1758
	unsigned char clock_source;67,1792
	unsigned char autosync_ref;68,1821
	unsigned char line_out;69,1850
	unsigned int passthru;70,1875
	unsigned int analog_out;71,1899
#define SNDRV_HDSPM_IOCTL_GET_CONFIG 74,1929
enum hdspm_ltc_format 86,2309
	format_invalid,87,2333
	fps_24,88,2350
	fps_25,89,2359
	fps_2997,90,2368
	fps_3091,2379
enum hdspm_ltc_frame 94,2391
	frame_invalid,95,2414
	drop_frame,96,2430
	full_frame97,2443
enum hdspm_ltc_input_format 100,2459
	ntsc,101,2489
	pal,102,2496
	no_video103,2502
struct hdspm_ltc 106,2516
	unsigned int ltc;107,2535
	enum hdspm_ltc_format format;109,2555
	enum hdspm_ltc_frame frame;110,2586
	enum hdspm_ltc_input_format input_format;111,2615
#define SNDRV_HDSPM_IOCTL_GET_LTC 114,2662
enum hdspm_sync 122,2867
	hdspm_sync_no_lock 123,2885
	hdspm_sync_lock 124,2910
	hdspm_sync_sync 125,2932
enum hdspm_madi_input 128,2957
	hdspm_input_optical 129,2981
	hdspm_input_coax 130,3007
enum hdspm_madi_channel_format 133,3033
	hdspm_format_ch_64 134,3066
	hdspm_format_ch_56 135,3091
enum hdspm_madi_frame_format 138,3119
	hdspm_frame_48 139,3150
	hdspm_frame_96 140,3171
enum hdspm_syncsource 143,3195
	syncsource_wc 144,3219
	syncsource_madi 145,3239
	syncsource_tco 146,3261
	syncsource_sync 147,3282
	syncsource_none 148,3304
struct hdspm_status 151,3329
	uint8_t card_type;152,3351
	enum hdspm_syncsource autosync_source;153,3396
	uint64_t card_clock;155,3437
	uint32_t master_period;156,3459
			uint8_t sync_wc;160,3505
			uint8_t sync_madi;161,3547
			uint8_t sync_tco;162,3591
			uint8_t sync_in;163,3634
			uint8_t madi_input;164,3676
			uint8_t channel_format;165,3727
			uint8_t frame_format;166,3791
		} madi;167,3851
	} card_specific;168,3861
#define SNDRV_HDSPM_IOCTL_GET_STATUS 171,3883
#define HDSPM_ADDON_TCO 178,4022
struct hdspm_version 180,4049
	uint8_t card_type;181,4072
	char cardname[cardname182,4117
	unsigned int serial;183,4137
	unsigned short firmware_rev;184,4159
	int addons;185,4189
#define SNDRV_HDSPM_IOCTL_GET_VERSION 188,4206
#define HDSPM_MIXER_CHANNELS 203,4711
struct hdspm_channelfader 205,4760
	unsigned int in[in206,4788
	unsigned int pb[pb207,4828
struct hdspm_mixer 210,4872
	struct hdspm_channelfader ch[ch211,4893
struct hdspm_mixer_ioctl 214,4950
	struct hdspm_mixer *mixer;mixer215,4977
#define SNDRV_HDSPM_IOCTL_GET_MIXER 219,5070
typedef struct hdspm_peak_rms hdspm_peak_rms_t;222,5196
typedef struct hdspm_config_info hdspm_config_info_t;223,5244
typedef struct hdspm_version hdspm_version_t;224,5298
typedef struct hdspm_channelfader snd_hdspm_channelfader_t;225,5344
typedef struct hdspm_mixer hdspm_mixer_t;226,5404

install/include/alsa/sound/emu10k1.h,9177
#define __SOUND_EMU10K1_H2,26
#define EMU10K1_CARD_CREATIVE	32,982
#define EMU10K1_CARD_EMUAPS	33,1025
#define EMU10K1_FX8010_PCM_COUNT	35,1067
#define iMAC0	38,1126
#define iMAC1	39,1189
#define iMAC2	40,1252
#define iMAC3	41,1315
#define iMACINT0 42,1378
#define iMACINT1 43,1436
#define iACC3	44,1503
#define iMACMV 45,1559
#define iANDXOR 46,1613
#define iTSTNEG 47,1657
#define iLIMITGE 48,1707
#define iLIMITLT 49,1756
#define iLOG	50,1804
#define iEXP	51,1889
#define iINTERP 52,1974
#define iSKIP 53,2044
#define FXBUS(56,2123
#define EXTIN(57,2175
#define EXTOUT(58,2227
#define C_00000000	59,2280
#define C_00000001	60,2304
#define C_00000002	61,2328
#define C_00000003	62,2352
#define C_00000004	63,2376
#define C_00000008	64,2400
#define C_00000010	65,2424
#define C_00000020	66,2448
#define C_00000100	67,2472
#define C_00010000	68,2496
#define C_00080000	69,2520
#define C_10000000	70,2544
#define C_20000000	71,2568
#define C_40000000	72,2592
#define C_80000000	73,2616
#define C_7fffffff	74,2640
#define C_ffffffff	75,2664
#define C_fffffffe	76,2688
#define C_c0000000	77,2712
#define C_4f1bbcdc	78,2736
#define C_5a7ef9db	79,2760
#define C_00100000	80,2784
#define GPR_ACCU	81,2818
#define GPR_COND	82,2866
#define GPR_NOISE0	83,2919
#define GPR_NOISE1	84,2963
#define GPR_IRQ	85,3007
#define GPR_DBAC	86,3049
#define GPR(87,3110
#define ITRAM_DATA(88,3179
#define ETRAM_DATA(89,3257
#define ITRAM_ADDR(90,3335
#define ETRAM_ADDR(91,3413
#define A_FXBUS(93,3492
#define A_EXTIN(94,3547
#define A_EXTOUT(95,3602
#define A_GPR(96,3658
#define CC_REG_NORMALIZED 99,3721
#define CC_REG_BORROW	100,3758
#define CC_REG_MINUS	101,3791
#define CC_REG_ZERO	102,3823
#define CC_REG_SATURATE	103,3854
#define CC_REG_NONZERO	104,3889
#define FXBUS_PCM_LEFT	107,3939
#define FXBUS_PCM_RIGHT	108,3968
#define FXBUS_PCM_LEFT_REAR	109,3998
#define FXBUS_PCM_RIGHT_REAR	110,4031
#define FXBUS_MIDI_LEFT	111,4065
#define FXBUS_MIDI_RIGHT	112,4095
#define FXBUS_PCM_CENTER	113,4125
#define FXBUS_PCM_LFE	114,4155
#define FXBUS_PCM_LEFT_FRONT	115,4183
#define FXBUS_PCM_RIGHT_FRONT	116,4217
#define FXBUS_MIDI_REVERB	117,4252
#define FXBUS_MIDI_CHORUS	118,4283
#define FXBUS_PCM_LEFT_SIDE	119,4314
#define FXBUS_PCM_RIGHT_SIDE	120,4347
#define FXBUS_PT_LEFT	121,4381
#define FXBUS_PT_RIGHT	122,4409
#define EXTIN_AC97_L	125,4452
#define EXTIN_AC97_R	126,4516
#define EXTIN_SPDIF_CD_L 127,4581
#define EXTIN_SPDIF_CD_R 128,4655
#define EXTIN_ZOOM_L	129,4730
#define EXTIN_ZOOM_R	130,4787
#define EXTIN_TOSLINK_L	131,4845
#define EXTIN_TOSLINK_R 132,4918
#define EXTIN_LINE1_L	133,4992
#define EXTIN_LINE1_R	134,5058
#define EXTIN_COAX_SPDIF_L 135,5125
#define EXTIN_COAX_SPDIF_R 136,5197
#define EXTIN_LINE2_L	137,5270
#define EXTIN_LINE2_R	138,5336
#define EXTOUT_AC97_L	141,5418
#define EXTOUT_AC97_R	142,5484
#define EXTOUT_TOSLINK_L 143,5551
#define EXTOUT_TOSLINK_R 144,5624
#define EXTOUT_AC97_CENTER 145,5698
#define EXTOUT_AC97_LFE	146,5757
#define EXTOUT_HEADPHONE_L 147,5813
#define EXTOUT_HEADPHONE_R 148,5880
#define EXTOUT_REAR_L	149,5948
#define EXTOUT_REAR_R	150,6004
#define EXTOUT_ADC_CAP_L 151,6061
#define EXTOUT_ADC_CAP_R 152,6125
#define EXTOUT_MIC_CAP	153,6190
#define EXTOUT_AC97_REAR_L 154,6246
#define EXTOUT_AC97_REAR_R 155,6317
#define EXTOUT_ACENTER	156,6389
#define EXTOUT_ALFE	157,6440
#define A_EXTIN_AC97_L	160,6506
#define A_EXTIN_AC97_R	161,6570
#define A_EXTIN_SPDIF_CD_L	162,6635
#define A_EXTIN_SPDIF_CD_R	163,6689
#define A_EXTIN_OPT_SPDIF_L 164,6743
#define A_EXTIN_OPT_SPDIF_R 165,6823
#define A_EXTIN_LINE2_L	166,6905
#define A_EXTIN_LINE2_R	167,6972
#define A_EXTIN_ADC_L	168,7040
#define A_EXTIN_ADC_R	169,7096
#define A_EXTIN_AUX2_L	170,7153
#define A_EXTIN_AUX2_R	171,7213
#define A_EXTOUT_FRONT_L	174,7297
#define A_EXTOUT_FRONT_R	175,7352
#define A_EXTOUT_CENTER	176,7408
#define A_EXTOUT_LFE	177,7465
#define A_EXTOUT_HEADPHONE_L	178,7516
#define A_EXTOUT_HEADPHONE_R	179,7584
#define A_EXTOUT_REAR_L	180,7653
#define A_EXTOUT_REAR_R	181,7707
#define A_EXTOUT_AFRONT_L	182,7762
#define A_EXTOUT_AFRONT_R	183,7817
#define A_EXTOUT_ACENTER	184,7873
#define A_EXTOUT_ALFE	185,7923
#define A_EXTOUT_ASIDE_L	186,7968
#define A_EXTOUT_ASIDE_R	187,8036
#define A_EXTOUT_AREAR_L	188,8104
#define A_EXTOUT_AREAR_R	189,8157
#define A_EXTOUT_AC97_L	190,8211
#define A_EXTOUT_AC97_R	191,8265
#define A_EXTOUT_ADC_CAP_L	192,8312
#define A_EXTOUT_ADC_CAP_R	193,8374
#define A_EXTOUT_MIC_CAP	194,8437
#define A_C_00000000	197,8516
#define A_C_00000001	198,8542
#define A_C_00000002	199,8568
#define A_C_00000003	200,8594
#define A_C_00000004	201,8620
#define A_C_00000008	202,8646
#define A_C_00000010	203,8672
#define A_C_00000020	204,8698
#define A_C_00000100	205,8724
#define A_C_00010000	206,8750
#define A_C_00000800	207,8776
#define A_C_10000000	208,8802
#define A_C_20000000	209,8828
#define A_C_40000000	210,8854
#define A_C_80000000	211,8880
#define A_C_7fffffff	212,8906
#define A_C_ffffffff	213,8932
#define A_C_fffffffe	214,8958
#define A_C_c0000000	215,8984
#define A_C_4f1bbcdc	216,9010
#define A_C_5a7ef9db	217,9036
#define A_C_00100000	218,9062
#define A_GPR_ACCU	219,9088
#define A_GPR_COND	220,9138
#define A_GPR_NOISE0	221,9193
#define A_GPR_NOISE1	222,9239
#define A_GPR_IRQ	223,9285
#define A_GPR_DBAC	224,9328
#define A_GPR_DBACE	225,9402
#define EMU10K1_DBG_ZC	228,9515
#define EMU10K1_DBG_SATURATION_OCCURED	229,9575
#define EMU10K1_DBG_SATURATION_ADDR	230,9650
#define EMU10K1_DBG_SINGLE_STEP	231,9722
#define EMU10K1_DBG_STEP	232,9789
#define EMU10K1_DBG_CONDITION_CODE	233,9850
#define EMU10K1_DBG_SINGLE_STEP_ADDR	234,9917
#define TANKMEMADDRREG_ADDR_MASK 238,10042
#define TANKMEMADDRREG_CLEAR	239,10120
#define TANKMEMADDRREG_ALIGN	240,10188
#define TANKMEMADDRREG_WRITE	241,10279
#define TANKMEMADDRREG_READ	242,10350
	unsigned int internal_tram_size;246,10445
	unsigned int external_tram_size;247,10496
	char fxbus_names[fxbus_names248,10547
	char extin_names[extin_names249,10598
	char extout_names[extout_names250,10657
	unsigned int gpr_controls;251,10718
} emu10k1_fx8010_info_t;252,10775
#define EMU10K1_GPR_TRANSLATION_NONE	254,10801
#define EMU10K1_GPR_TRANSLATION_TABLE100	255,10841
#define EMU10K1_GPR_TRANSLATION_BASS	256,10884
#define EMU10K1_GPR_TRANSLATION_TREBLE	257,10924
#define EMU10K1_GPR_TRANSLATION_ONOFF	258,10966
enum emu10k1_ctl_elem_iface 260,11008
	EMU10K1_CTL_ELEM_IFACE_MIXER 261,11038
	EMU10K1_CTL_ELEM_IFACE_PCM 262,11100
	unsigned int pad;266,11172
	int iface;267,11208
	unsigned int device;268,11249
	unsigned int subdevice;269,11299
	unsigned char name[name270,11360
	unsigned int index;271,11412
} emu10k1_ctl_elem_id_t;272,11454
	emu10k1_ctl_elem_id_t id;275,11497
	unsigned int vcount;276,11557
	unsigned int count;277,11600
	unsigned short gpr[gpr278,11649
	unsigned int value[value279,11695
	unsigned int min;280,11742
	unsigned int max;281,11782
	unsigned int translation;282,11822
	unsigned int *tlv;tlv283,11899
} emu10k1_fx8010_control_gpr_t;284,11919
	char name[name287,11969
	uint32_t *gpr_map;gpr_map290,12082
	unsigned int gpr_add_control_count;292,12125
	emu10k1_fx8010_control_gpr_t *gpr_add_controls;gpr_add_controls293,12205
	unsigned int gpr_del_control_count;295,12289
	emu10k1_ctl_elem_id_t *gpr_del_controls;gpr_del_controls296,12364
	unsigned int gpr_list_control_count;298,12443
	unsigned int gpr_list_control_total;299,12517
	emu10k1_fx8010_control_gpr_t *gpr_list_controls;gpr_list_controls300,12589
	uint32_t *tram_data_map;tram_data_map303,12762
	uint32_t *tram_addr_map;tram_addr_map304,12812
	uint32_t *code;code307,12958
} emu10k1_fx8010_code_t;308,13009
	unsigned int address;311,13052
	unsigned int size;312,13111
	unsigned int *samples;samples313,13164
} emu10k1_fx8010_tram_t;315,13253
	unsigned int substream;318,13296
	unsigned int res1;319,13345
	unsigned int channels;320,13381
	unsigned int tram_start;321,13464
	unsigned int buffer_size;322,13538
	unsigned short gpr_size;323,13597
	unsigned short gpr_ptr;324,13682
	unsigned short gpr_count;325,13787
	unsigned short gpr_tmpcount;326,13882
	unsigned short gpr_trigger;327,13992
	unsigned short gpr_running;328,14080
	unsigned char pad;329,14162
	unsigned char etram[etram330,14198
	unsigned int res2;331,14277
} emu10k1_fx8010_pcm_t;332,14313
#define SNDRV_EMU10K1_IOCTL_INFO	334,14338
#define SNDRV_EMU10K1_IOCTL_CODE_POKE	335,14411
#define SNDRV_EMU10K1_IOCTL_CODE_PEEK	336,14489
#define SNDRV_EMU10K1_IOCTL_TRAM_SETUP	337,14567
#define SNDRV_EMU10K1_IOCTL_TRAM_POKE	338,14628
#define SNDRV_EMU10K1_IOCTL_TRAM_PEEK	339,14706
#define SNDRV_EMU10K1_IOCTL_PCM_POKE	340,14784
#define SNDRV_EMU10K1_IOCTL_PCM_PEEK	341,14860
#define SNDRV_EMU10K1_IOCTL_PVERSION	342,14936
#define SNDRV_EMU10K1_IOCTL_STOP	343,14995
#define SNDRV_EMU10K1_IOCTL_CONTINUE	344,15045
#define SNDRV_EMU10K1_IOCTL_ZERO_TRAM_COUNTER 345,15099
#define SNDRV_EMU10K1_IOCTL_SINGLE_STEP	346,15161
#define SNDRV_EMU10K1_IOCTL_DBG_READ	347,15223

install/include/alsa/sound/asound_fm.h,2230
#define __SOUND_ASOUND_FM_H2,28
#define SNDRV_DM_FM_MODE_OPL2	29,1042
#define SNDRV_DM_FM_MODE_OPL3	30,1077
struct snd_dm_fm_info 32,1113
	unsigned char fm_mode;33,1137
	unsigned char rhythm;34,1203
struct snd_dm_fm_voice 41,1324
	unsigned char op;42,1349
	unsigned char voice;43,1398
	unsigned char am;45,1447
	unsigned char vibrato;46,1494
	unsigned char do_sustain;47,1540
	unsigned char kbd_scale;48,1587
	unsigned char harmonic;49,1636
	unsigned char scale_level;50,1700
	unsigned char volume;51,1769
	unsigned char attack;53,1815
	unsigned char decay;54,1865
	unsigned char sustain;55,1913
	unsigned char release;56,1966
	unsigned char feedback;58,2019
	unsigned char connection;59,2076
	unsigned char left;60,2138
	unsigned char right;61,2178
	unsigned char waveform;62,2220
struct snd_dm_fm_note 70,2384
	unsigned char voice;71,2408
	unsigned char octave;72,2455
	unsigned int fnum;73,2512
	unsigned char key_on;74,2564
struct snd_dm_fm_params 81,2716
	unsigned char am_depth;82,2742
	unsigned char vib_depth;83,2808
	unsigned char kbd_split;84,2861
	unsigned char rhythm;85,2908
	unsigned char bass;88,3014
	unsigned char snare;89,3035
	unsigned char tomtom;90,3057
	unsigned char cymbal;91,3080
	unsigned char hihat;92,3103
#define SNDRV_DM_FM_IOCTL_INFO	99,3164
#define SNDRV_DM_FM_IOCTL_RESET	100,3235
#define SNDRV_DM_FM_IOCTL_PLAY_NOTE	101,3284
#define SNDRV_DM_FM_IOCTL_SET_VOICE	102,3359
#define SNDRV_DM_FM_IOCTL_SET_PARAMS	103,3435
#define SNDRV_DM_FM_IOCTL_SET_MODE	104,3513
#define SNDRV_DM_FM_IOCTL_SET_CONNECTION	106,3589
#define SNDRV_DM_FM_IOCTL_CLEAR_PATCHES	108,3678
#define SNDRV_DM_FM_OSS_IOCTL_RESET	110,3735
#define SNDRV_DM_FM_OSS_IOCTL_PLAY_NOTE	111,3777
#define SNDRV_DM_FM_OSS_IOCTL_SET_VOICE	112,3823
#define SNDRV_DM_FM_OSS_IOCTL_SET_PARAMS	113,3869
#define SNDRV_DM_FM_OSS_IOCTL_SET_MODE	114,3915
#define SNDRV_DM_FM_OSS_IOCTL_SET_OPL	115,3960
#define FM_KEY_SBI	121,4052
#define FM_KEY_2OP	122,4081
#define FM_KEY_4OP	123,4110
struct sbi_patch 125,4140
	unsigned char prog;126,4159
	unsigned char bank;127,4180
	char key[key128,4201
	char name[name129,4215
	char extension[extension130,4231
	unsigned char data[data131,4251

install/include/alsa/sound/type_compat.h,701
#define __TYPE_COMPAT_H2,24
typedef uint8_t __u8;6,88
typedef uint16_t __u16;7,110
typedef uint32_t __u32;8,134
typedef int8_t __s8;9,158
typedef int16_t __s16;10,179
typedef int32_t __s32;11,202
#define __cpu_to_le32(16,304
#define __cpu_to_be32(17,333
#define __cpu_to_le16(18,370
#define __cpu_to_be16(19,399
#define __cpu_to_le32(21,442
#define __cpu_to_be32(22,479
#define __cpu_to_le16(23,508
#define __cpu_to_be16(24,545
#define __le32_to_cpu 27,582
#define __be32_to_cpu 28,618
#define __le16_to_cpu 29,654
#define __be16_to_cpu 30,690
#define __le64 32,727
#define __le32 33,748
#define __le16 34,769
#define __be64 35,790
#define __be32 36,811
#define __be16 37,832

install/include/alsa/sound/sb16_csp.h,2173
#define __SOUND_SB16_CSP_H2,27
#define SNDRV_SB_CSP_MODE_NONE	27,965
#define SNDRV_SB_CSP_MODE_DSP_READ	28,1002
#define SNDRV_SB_CSP_MODE_DSP_WRITE	29,1064
#define SNDRV_SB_CSP_MODE_QSOUND	30,1123
#define SNDRV_SB_CSP_LOAD_FROMUSER	33,1197
#define SNDRV_SB_CSP_LOAD_INITBLOCK	34,1237
#define SNDRV_SB_CSP_SAMPLE_8BIT	37,1302
#define SNDRV_SB_CSP_SAMPLE_16BIT	38,1341
#define SNDRV_SB_CSP_MONO	41,1401
#define SNDRV_SB_CSP_STEREO	42,1434
#define SNDRV_SB_CSP_RATE_8000	45,1485
#define SNDRV_SB_CSP_RATE_11025	46,1522
#define SNDRV_SB_CSP_RATE_22050	47,1560
#define SNDRV_SB_CSP_RATE_44100	48,1598
#define SNDRV_SB_CSP_RATE_ALL	49,1636
#define SNDRV_SB_CSP_ST_IDLE	52,1697
#define SNDRV_SB_CSP_ST_LOADED	53,1732
#define SNDRV_SB_CSP_ST_RUNNING	54,1769
#define SNDRV_SB_CSP_ST_PAUSED	55,1807
#define SNDRV_SB_CSP_ST_AUTO	56,1844
#define SNDRV_SB_CSP_ST_QSOUND	57,1879
#define SNDRV_SB_CSP_QSOUND_MAX_RIGHT	60,1964
#define SNDRV_SB_CSP_MAX_MICROCODE_FILE_SIZE	63,2047
typedef struct snd_sb_csp_mc_header 66,2123
	char codec_name[codec_name67,2161
	unsigned short func_req;68,2207
} snd_sb_csp_mc_header_t;69,2258
typedef struct snd_sb_csp_microcode 72,2314
	snd_sb_csp_mc_header_t info;73,2352
	unsigned char data[data74,2382
} snd_sb_csp_microcode_t;75,2441
typedef struct snd_sb_csp_start 78,2517
	int sample_width;79,2551
	int channels;80,2601
} snd_sb_csp_start_t;81,2644
typedef struct snd_sb_csp_info 84,2689
	char codec_name[codec_name85,2722
	unsigned short func_nr;86,2768
	unsigned int acc_format;87,2816
	unsigned short acc_channels;88,2869
	unsigned short acc_width;89,2923
	unsigned short acc_rates;90,2978
	unsigned short csp_mode;91,3033
	unsigned short run_channels;92,3085
	unsigned short run_width;93,3139
	unsigned short version;94,3193
	unsigned short state;95,3249
} snd_sb_csp_info_t;96,3290
#define SNDRV_SB_CSP_IOCTL_INFO	100,3359
#define SNDRV_SB_CSP_IOCTL_LOAD_CODE	102,3455
#define SNDRV_SB_CSP_IOCTL_UNLOAD_CODE	104,3564
#define SNDRV_SB_CSP_IOCTL_START	106,3634
#define SNDRV_SB_CSP_IOCTL_STOP	108,3718
#define SNDRV_SB_CSP_IOCTL_PAUSE	110,3799
#define SNDRV_SB_CSP_IOCTL_RESTART	112,3882

install/include/alsa/mixer.h,1743
#define __ALSA_MIXER_H29,1095
typedef struct _snd_mixer snd_mixer_t;42,1256
typedef struct _snd_mixer_class snd_mixer_class_t;44,1330
typedef struct _snd_mixer_elem snd_mixer_elem_t;46,1409
typedef int (*snd_mixer_callback_t)snd_mixer_callback_t55,1659
typedef int (*snd_mixer_elem_callback_t)snd_mixer_elem_callback_t65,1936
typedef int (*snd_mixer_compare_t)snd_mixer_compare_t74,2199
typedef int (*snd_mixer_event_t)snd_mixer_event_t85,2596
typedef enum _snd_mixer_elem_type 90,2758
	SND_MIXER_ELEM_SIMPLE,92,2823
	SND_MIXER_ELEM_LAST 93,2847
	SND_MIXER_ELEM_LAST = SND_MIXER_ELEM_SIMPLE93,2847
} snd_mixer_elem_type_t;94,2892
#define snd_mixer_class_alloca(147,5737
typedef enum _snd_mixer_selem_channel_id 170,6851
	SND_MIXER_SCHN_UNKNOWN 172,6910
	SND_MIXER_SCHN_FRONT_LEFT 174,6959
	SND_MIXER_SCHN_FRONT_RIGHT,176,7011
	SND_MIXER_SCHN_REAR_LEFT,178,7058
	SND_MIXER_SCHN_REAR_RIGHT,180,7104
	SND_MIXER_SCHN_FRONT_CENTER,182,7153
	SND_MIXER_SCHN_WOOFER,184,7198
	SND_MIXER_SCHN_SIDE_LEFT,186,7240
	SND_MIXER_SCHN_SIDE_RIGHT,188,7286
	SND_MIXER_SCHN_REAR_CENTER,190,7334
	SND_MIXER_SCHN_LAST 191,7363
	SND_MIXER_SCHN_MONO 193,7422
	SND_MIXER_SCHN_MONO = SND_MIXER_SCHN_FRONT_LEFT193,7422
} snd_mixer_selem_channel_id_t;194,7471
enum snd_mixer_selem_regopt_abstract 197,7571
	SND_MIXER_SABSTRACT_NONE 199,7678
	SND_MIXER_SABSTRACT_BASIC,201,7772
struct snd_mixer_selem_regopt 205,7851
	int ver;207,7909
	enum snd_mixer_selem_regopt_abstract abstract;209,7956
	const char *device;device211,8084
	snd_pcm_t *playback_pcm;playback_pcm213,8171
	snd_pcm_t *capture_pcm;capture_pcm215,8262
typedef struct _snd_mixer_selem_id snd_mixer_selem_id_t;219,8330
#define snd_mixer_selem_id_alloca(299,13724

install/include/alsa/hwdep.h,1648
#define __ALSA_HWDEP_H29,1095
#define SND_HWDEP_DLSYM_VERSION	42,1312
typedef struct _snd_hwdep_info snd_hwdep_info_t;45,1398
typedef struct _snd_hwdep_dsp_status snd_hwdep_dsp_status_t;48,1482
typedef struct _snd_hwdep_dsp_image snd_hwdep_dsp_image_t;51,1577
typedef enum _snd_hwdep_iface 54,1660
	SND_HWDEP_IFACE_OPL2 55,1692
	SND_HWDEP_IFACE_OPL3,56,1743
	SND_HWDEP_IFACE_OPL4,57,1791
	SND_HWDEP_IFACE_SB16CSP,58,1839
	SND_HWDEP_IFACE_EMU10K1,59,1888
	SND_HWDEP_IFACE_YSS225,60,1937
	SND_HWDEP_IFACE_ICS2115,61,1985
	SND_HWDEP_IFACE_SSCAPE,62,2034
	SND_HWDEP_IFACE_VX,63,2108
	SND_HWDEP_IFACE_MIXART,64,2156
	SND_HWDEP_IFACE_USX2Y,65,2212
	SND_HWDEP_IFACE_EMUX_WAVETABLE,66,2277
	SND_HWDEP_IFACE_BLUETOOTH,67,2333
	SND_HWDEP_IFACE_USX2Y_PCM,68,2385
	SND_HWDEP_IFACE_PCXHR,69,2461
	SND_HWDEP_IFACE_SB_RC,70,2509
	SND_HWDEP_IFACE_HDA,71,2577
	SND_HWDEP_IFACE_USB_STREAM,72,2617
	SND_HWDEP_IFACE_FW_DICE,73,2682
	SND_HWDEP_IFACE_FW_FIREWORKS,74,2740
	SND_HWDEP_IFACE_FW_BEBOB,75,2813
	SND_HWDEP_IFACE_FW_OXFW,76,2876
	SND_HWDEP_IFACE_LAST 78,2943
	SND_HWDEP_IFACE_LAST = SND_HWDEP_IFACE_FW_OXFW	78,2943
} snd_hwdep_iface_t;79,3026
#define SND_HWDEP_OPEN_READ	82,3072
#define SND_HWDEP_OPEN_WRITE	84,3136
#define SND_HWDEP_OPEN_DUPLEX	86,3213
#define SND_HWDEP_OPEN_NONBLOCK	88,3298
typedef enum _snd_hwdep_type 91,3370
	SND_HWDEP_TYPE_HW,93,3428
	SND_HWDEP_TYPE_SHM,95,3505
	SND_HWDEP_TYPE_INET97,3574
} snd_hwdep_type_t;98,3595
typedef struct _snd_hwdep snd_hwdep_t;101,3636
#define snd_hwdep_info_alloca(118,4651
#define snd_hwdep_dsp_status_alloca(132,5404
#define snd_hwdep_dsp_image_alloca(145,6217

install/include/alsa/input.h,225
#define __ALSA_INPUT_H29,1095
typedef struct _snd_input snd_input_t;54,1730
typedef enum _snd_input_type 57,1789
	SND_INPUT_STDIO,59,1855
	SND_INPUT_BUFFER61,1909
} snd_input_type_t;62,1927
int snd_input_scanf(68,2228

install/include/alsa/alisp.h,335
struct alisp_cfg 22,862
	int verbose:verbose23,881
	    warning:warning24,898
	    debug:debug25,915
	snd_input_t *in;in26,930
	snd_output_t *out;out27,967
	snd_output_t *eout;eout28,1008
	snd_output_t *vout;vout29,1048
	snd_output_t *wout;wout30,1090
	snd_output_t *dout;dout31,1132
int alsa_lisp_function(42,1491

install/include/alsa/output.h,234
#define __ALSA_OUTPUT_H29,1097
typedef struct _snd_output snd_output_t;54,1762
typedef enum _snd_output_type 57,1824
	SND_OUTPUT_STDIO,59,1890
	SND_OUTPUT_BUFFER61,1944
} snd_output_type_t;62,1963
int snd_output_printf(69,2310

install/include/alsa/global.h,859
#define __ALSA_GLOBAL_H_29,1098
#define ATTRIBUTE_UNUSED 51,1578
#define __SND_DLSYM_VERSION(57,1746
#define SND_DLSYM_BUILD_VERSION(62,1917
struct snd_dlsym_link 66,2032
	struct snd_dlsym_link *next;next67,2056
	const char *dlsym_name;dlsym_name68,2086
	const void *dlsym_ptr;dlsym_ptr69,2111
#define __SND_DLSYM_VERSION(75,2261
#define SND_DLSYM_BUILD_VERSION(80,2450
#define __STRING(94,3141
#define SND_DLSYM_VERSION(98,3243
#define __snd_alloca(106,3481
typedef struct _snd_async_handler snd_async_handler_t;114,3841
typedef void (*snd_async_callback_t)snd_async_callback_t121,4003
struct timeval 138,4765
	time_t		tv_sec;139,4782
	long		tv_usec;140,4814
struct timespec 143,4853
	time_t		tv_sec;144,4871
	long		tv_nsec;145,4903
typedef struct timeval snd_timestamp_t;151,4972
typedef struct timespec snd_htimestamp_t;153,5036

install/include/alsa/seq_event.h,5394
#define __ALSA_SEQ_EVENT_H29,1103
typedef unsigned char snd_seq_event_type_t;41,1291
enum snd_seq_event_type 44,1364
	SND_SEQ_EVENT_SYSTEM 46,1449
	SND_SEQ_EVENT_RESULT,48,1544
	SND_SEQ_EVENT_NOTE 51,1644
	SND_SEQ_EVENT_NOTEON,53,1723
	SND_SEQ_EVENT_NOTEOFF,55,1801
	SND_SEQ_EVENT_KEYPRESS,57,1904
	SND_SEQ_EVENT_CONTROLLER 60,1988
	SND_SEQ_EVENT_PGMCHANGE,62,2081
	SND_SEQ_EVENT_CHANPRESS,64,2170
	SND_SEQ_EVENT_PITCHBEND,66,2282
	SND_SEQ_EVENT_CONTROL14,68,2378
	SND_SEQ_EVENT_NONREGPARAM,70,2463
	SND_SEQ_EVENT_REGPARAM,72,2548
	SND_SEQ_EVENT_SONGPOS 75,2648
	SND_SEQ_EVENT_SONGSEL,77,2755
	SND_SEQ_EVENT_QFRAME,79,2854
	SND_SEQ_EVENT_TIMESIGN,81,2948
	SND_SEQ_EVENT_KEYSIGN,83,3043
	SND_SEQ_EVENT_START 86,3161
	SND_SEQ_EVENT_CONTINUE,88,3275
	SND_SEQ_EVENT_STOP,90,3383
	SND_SEQ_EVENT_SETPOS_TICK,92,3483
	SND_SEQ_EVENT_SETPOS_TIME,94,3595
	SND_SEQ_EVENT_TEMPO,96,3696
	SND_SEQ_EVENT_CLOCK,98,3802
	SND_SEQ_EVENT_TICK,100,3907
	SND_SEQ_EVENT_QUEUE_SKEW,102,4000
	SND_SEQ_EVENT_SYNC_POS,104,4104
	SND_SEQ_EVENT_TUNE_REQUEST 107,4175
	SND_SEQ_EVENT_RESET,109,4265
	SND_SEQ_EVENT_SENSING,111,4340
	SND_SEQ_EVENT_ECHO 114,4417
	SND_SEQ_EVENT_OSS,116,4503
	SND_SEQ_EVENT_CLIENT_START 119,4592
	SND_SEQ_EVENT_CLIENT_EXIT,121,4696
	SND_SEQ_EVENT_CLIENT_CHANGE,123,4798
	SND_SEQ_EVENT_PORT_START,125,4892
	SND_SEQ_EVENT_PORT_EXIT,127,4991
	SND_SEQ_EVENT_PORT_CHANGE,129,5089
	SND_SEQ_EVENT_PORT_SUBSCRIBED,132,5180
	SND_SEQ_EVENT_PORT_UNSUBSCRIBED,134,5277
	SND_SEQ_EVENT_USR0 137,5375
	SND_SEQ_EVENT_USR1,139,5464
	SND_SEQ_EVENT_USR2,141,5548
	SND_SEQ_EVENT_USR3,143,5632
	SND_SEQ_EVENT_USR4,145,5716
	SND_SEQ_EVENT_USR5,147,5800
	SND_SEQ_EVENT_USR6,149,5884
	SND_SEQ_EVENT_USR7,151,5968
	SND_SEQ_EVENT_USR8,153,6052
	SND_SEQ_EVENT_USR9,155,6136
	SND_SEQ_EVENT_SYSEX 158,6244
	SND_SEQ_EVENT_BOUNCE,160,6330
	SND_SEQ_EVENT_USR_VAR0 162,6422
	SND_SEQ_EVENT_USR_VAR1,164,6521
	SND_SEQ_EVENT_USR_VAR2,166,6614
	SND_SEQ_EVENT_USR_VAR3,168,6707
	SND_SEQ_EVENT_USR_VAR4,170,6800
	SND_SEQ_EVENT_NONE 173,6859
typedef struct snd_seq_addr 178,6921
	unsigned char client;179,6951
	unsigned char port;180,6992
} snd_seq_addr_t;181,7029
typedef struct snd_seq_connect 184,7095
	snd_seq_addr_t sender;185,7128
	snd_seq_addr_t dest;186,7175
} snd_seq_connect_t;187,7225
typedef struct snd_seq_real_time 191,7277
	unsigned int tv_sec;192,7312
	unsigned int tv_nsec;193,7351
} snd_seq_real_time_t;194,7395
typedef unsigned int snd_seq_tick_time_t;197,7455
typedef union snd_seq_timestamp 200,7524
	snd_seq_tick_time_t tick;201,7558
	struct snd_seq_real_time time;202,7603
} snd_seq_timestamp_t;203,7653
#define SND_SEQ_TIME_STAMP_TICK	211,7741
#define SND_SEQ_TIME_STAMP_REAL	212,7814
#define SND_SEQ_TIME_STAMP_MASK	213,7885
#define SND_SEQ_TIME_MODE_ABS	215,7958
#define SND_SEQ_TIME_MODE_REL	216,8023
#define SND_SEQ_TIME_MODE_MASK	217,8094
#define SND_SEQ_EVENT_LENGTH_FIXED	219,8166
#define SND_SEQ_EVENT_LENGTH_VARIABLE	220,8233
#define SND_SEQ_EVENT_LENGTH_VARUSR	221,8306
#define SND_SEQ_EVENT_LENGTH_MASK	222,8397
#define SND_SEQ_PRIORITY_NORMAL	224,8474
#define SND_SEQ_PRIORITY_HIGH	225,8538
#define SND_SEQ_PRIORITY_MASK	226,8624
typedef struct snd_seq_ev_note 230,8713
	unsigned char channel;231,8746
	unsigned char note;232,8794
	unsigned char velocity;233,8829
	unsigned char off_velocity;234,8872
	unsigned int duration;235,8957
} snd_seq_ev_note_t;236,9044
typedef struct snd_seq_ev_ctrl 239,9090
	unsigned char channel;240,9123
	unsigned char unused[unused241,9171
	unsigned int param;242,9214
	signed int value;243,9262
} snd_seq_ev_ctrl_t;244,9304
typedef struct snd_seq_ev_raw8 247,9365
	unsigned char d[d248,9398
} snd_seq_ev_raw8_t;249,9441
typedef struct snd_seq_ev_raw32 252,9505
	unsigned int d[d253,9539
} snd_seq_ev_raw32_t;254,9581
struct snd_seq_ev_ext 257,9632
	unsigned int len;258,9656
	void *ptr;ptr259,9699
typedef struct snd_seq_ev_ext snd_seq_ev_ext_t;262,9814
typedef snd_seq_ev_ext snd_seq_ev_ext_t;265,9922
typedef struct snd_seq_result 269,9992
	int event;270,10024
	int result;271,10066
} snd_seq_result_t;272,10095
typedef struct snd_seq_queue_skew 275,10141
	unsigned int value;276,10177
	unsigned int base;277,10217
} snd_seq_queue_skew_t;278,10255
typedef struct snd_seq_ev_queue_control 281,10307
	unsigned char queue;282,10349
	unsigned char unused[unused283,10396
		signed int value;285,10449
		snd_seq_timestamp_t time;286,10506
		unsigned int position;287,10547
		snd_seq_queue_skew_t skew;288,10595
		unsigned int d32[d32289,10643
		unsigned char d8[d8290,10684
	} param;291,10725
} snd_seq_ev_queue_control_t;292,10763
typedef struct snd_seq_event 296,10818
	snd_seq_event_type_t type;297,10849
	unsigned char flags;298,10896
	unsigned char tag;299,10939
	unsigned char queue;301,10974
	snd_seq_timestamp_t time;302,11020
	snd_seq_addr_t source;304,11070
	snd_seq_addr_t dest;305,11118
		snd_seq_ev_note_t note;308,11179
		snd_seq_ev_ctrl_t control;309,11231
		snd_seq_ev_raw8_t raw8;310,11293
		snd_seq_ev_raw32_t raw32;311,11338
		snd_seq_ev_ext_t ext;312,11385
		snd_seq_ev_queue_control_t queue;313,11432
		snd_seq_timestamp_t time;314,11490
		snd_seq_addr_t addr;315,11536
		snd_seq_connect_t connect;316,11576
		snd_seq_result_t result;317,11633
	} data;318,11690
} snd_seq_event_t;319,11724

install/include/alsa/control_external.h,2880
#define __ALSA_CONTROL_EXTERNAL_H27,973
#define SND_CTL_PLUGIN_ENTRY(43,1206
#define SND_CTL_PLUGIN_SYMBOL(48,1337
#define SND_CTL_PLUGIN_DEFINE_FUNC(53,1491
typedef struct snd_ctl_ext snd_ctl_ext_t;58,1705
typedef struct snd_ctl_ext_callback snd_ctl_ext_callback_t;60,1784
typedef unsigned long snd_ctl_ext_key_t;62,1883
typedef snd_ctl_ext snd_ctl_ext_t;65,1986
typedef snd_ctl_ext_callback snd_ctl_ext_callback_t;66,2021
typedef int (snd_ctl_ext_tlv_rw_t)69,2121
#define SND_CTL_EXT_VERSION_MAJOR	75,2310
#define SND_CTL_EXT_VERSION_MINOR	76,2377
#define SND_CTL_EXT_VERSION_TINY	77,2444
#define SND_CTL_EXT_VERSION	81,2553
struct snd_ctl_ext 86,2722
	unsigned int version;91,2857
	int card_idx;95,2966
	char id[id99,3071
	char driver[driver103,3177
	char name[name107,3286
	char longname[longname111,3392
	char mixername[mixername115,3503
	int poll_fd;119,3554
	const snd_ctl_ext_callback_t *callback;callback124,3664
	void *private_data;private_data128,3782
	snd_ctl_t *handle;handle132,3864
	int nonblock;134,3885
	int subscribed;135,3936
		snd_ctl_ext_tlv_rw_t *c;c141,4073
		const unsigned int *p;p142,4100
	} tlv;143,4125
struct snd_ctl_ext_callback 147,4167
	void (*close)close151,4246
	int (*elem_count)elem_count155,4342
	int (*elem_list)elem_list159,4462
	snd_ctl_ext_key_t (*find_elem)find_elem163,4608
	void (*free_key)free_key167,4740
	int (*get_attribute)get_attribute171,4859
	int (*get_integer_info)get_integer_info176,5042
	int (*get_integer64_info)get_integer64_info181,5212
	int (*get_enumerated_info)get_enumerated_info186,5396
	int (*get_enumerated_name)get_enumerated_name190,5539
	int (*read_integer)read_integer195,5724
	int (*read_integer64)read_integer64199,5858
	int (*read_enumerated)read_enumerated203,5998
	int (*read_bytes)read_bytes207,6139
	int (*read_iec958)read_iec958212,6299
	int (*write_integer)write_integer216,6467
	int (*write_integer64)write_integer64220,6626
	int (*write_enumerated)write_enumerated224,6791
	int (*write_bytes)write_bytes228,6957
	int (*write_iec958)write_iec958233,7143
	void (*subscribe_events)subscribe_events237,7303
	int (*read_event)read_event241,7423
	int (*poll_descriptors_count)poll_descriptors_count245,7574
	int (*poll_descriptors)poll_descriptors249,7676
	int (*poll_revents)poll_revents253,7816
typedef enum snd_ctl_ext_access 259,7992
	SND_CTL_EXT_ACCESS_READ 260,8026
	SND_CTL_EXT_ACCESS_WRITE 261,8061
	SND_CTL_EXT_ACCESS_READWRITE 262,8097
	SND_CTL_EXT_ACCESS_VOLATILE 263,8137
	SND_CTL_EXT_ACCESS_TLV_READ 264,8176
	SND_CTL_EXT_ACCESS_TLV_WRITE 265,8215
	SND_CTL_EXT_ACCESS_TLV_READWRITE 266,8255
	SND_CTL_EXT_ACCESS_TLV_COMMAND 267,8299
	SND_CTL_EXT_ACCESS_INACTIVE 268,8341
	SND_CTL_EXT_ACCESS_TLV_CALLBACK 269,8380
} snd_ctl_ext_access_t;270,8424
#define SND_CTL_EXT_KEY_NOT_FOUND	275,8532

install/include/alsa/conf.h,850
#define __ALSA_CONF_H29,1093
#define SND_CONFIG_DLSYM_VERSION_EVALUATE	43,1417
#define SND_CONFIG_DLSYM_VERSION_HOOK	45,1547
typedef enum _snd_config_type 48,1649
        SND_CONFIG_TYPE_INTEGER,50,1705
        SND_CONFIG_TYPE_INTEGER64,52,1769
        SND_CONFIG_TYPE_REAL,54,1825
        SND_CONFIG_TYPE_STRING,56,1881
        SND_CONFIG_TYPE_POINTER,58,1969
	SND_CONFIG_TYPE_COMPOUND 60,2025
} snd_config_type_t;61,2058
typedef struct _snd_config snd_config_t;69,2295
typedef struct _snd_config_iterator *snd_config_iterator_t;snd_config_iterator_t77,2590
typedef struct _snd_config_update snd_config_update_t;83,2809
#define snd_config_for_each(172,7185
typedef struct snd_devname snd_devname_t;187,7698
struct snd_devname 192,7790
	char *name;name193,7811
	char *comment;comment194,7851
	snd_devname_t *next;next195,7884

install/include/alsa/seq.h,5816
#define __ALSA_SEQ_H30,1094
#define SND_SEQ_DLSYM_VERSION	44,1331
typedef struct _snd_seq snd_seq_t;47,1402
#define SND_SEQ_OPEN_OUTPUT	52,1480
#define SND_SEQ_OPEN_INPUT	53,1542
#define SND_SEQ_OPEN_DUPLEX	54,1601
#define SND_SEQ_NONBLOCK	59,1757
typedef enum _snd_seq_type 62,1865
	SND_SEQ_TYPE_HW,63,1894
	SND_SEQ_TYPE_SHM,64,1930
	SND_SEQ_TYPE_INET	65,1978
} snd_seq_type_t;66,2020
#define SND_SEQ_ADDRESS_UNKNOWN	69,2072
#define SND_SEQ_ADDRESS_SUBSCRIBERS	70,2132
#define SND_SEQ_ADDRESS_BROADCAST	71,2215
#define SND_SEQ_CLIENT_SYSTEM	74,2338
typedef struct _snd_seq_system_info snd_seq_system_info_t;95,3388
#define snd_seq_system_info_alloca(99,3549
typedef struct _snd_seq_client_info snd_seq_client_info_t;125,4526
typedef enum snd_seq_client_type 128,4606
	SND_SEQ_USER_CLIENT 129,4641
	SND_SEQ_KERNEL_CLIENT 130,4691
} snd_seq_client_type_t;131,4742
#define snd_seq_client_info_alloca(135,4893
typedef struct _snd_seq_client_pool snd_seq_client_pool_t;170,6958
#define snd_seq_client_pool_alloca(174,7119
typedef struct _snd_seq_port_info snd_seq_port_info_t;205,8448
#define SND_SEQ_PORT_SYSTEM_TIMER	208,8530
#define SND_SEQ_PORT_SYSTEM_ANNOUNCE	209,8592
#define SND_SEQ_PORT_CAP_READ	212,8696
#define SND_SEQ_PORT_CAP_WRITE	213,8766
#define SND_SEQ_PORT_CAP_SYNC_READ	215,8836
#define SND_SEQ_PORT_CAP_SYNC_WRITE	216,8911
#define SND_SEQ_PORT_CAP_DUPLEX	218,8989
#define SND_SEQ_PORT_CAP_SUBS_READ	220,9062
#define SND_SEQ_PORT_CAP_SUBS_WRITE	221,9136
#define SND_SEQ_PORT_CAP_NO_EXPORT	222,9212
#define SND_SEQ_PORT_TYPE_SPECIFIC	226,9370
#define SND_SEQ_PORT_TYPE_MIDI_GENERIC	228,9456
#define SND_SEQ_PORT_TYPE_MIDI_GM	230,9570
#define SND_SEQ_PORT_TYPE_MIDI_GS	232,9671
#define SND_SEQ_PORT_TYPE_MIDI_XG	234,9777
#define SND_SEQ_PORT_TYPE_MIDI_MT32	236,9872
#define SND_SEQ_PORT_TYPE_MIDI_GM2	238,9985
#define SND_SEQ_PORT_TYPE_SYNTH	241,10125
#define SND_SEQ_PORT_TYPE_DIRECT_SAMPLE 244,10275
#define SND_SEQ_PORT_TYPE_SAMPLE	247,10451
#define SND_SEQ_PORT_TYPE_HARDWARE	249,10537
#define SND_SEQ_PORT_TYPE_SOFTWARE	251,10625
#define SND_SEQ_PORT_TYPE_SYNTHESIZER	253,10724
#define SND_SEQ_PORT_TYPE_PORT	256,10859
#define SND_SEQ_PORT_TYPE_APPLICATION	258,10974
#define snd_seq_port_info_alloca(263,11119
typedef struct _snd_seq_port_subscribe snd_seq_port_subscribe_t;317,14184
#define snd_seq_port_subscribe_alloca(321,14357
typedef struct _snd_seq_query_subscribe snd_seq_query_subscribe_t;349,16006
	SND_SEQ_QUERY_SUBS_READ,353,16123
	SND_SEQ_QUERY_SUBS_WRITE	354,16182
} snd_seq_query_subs_type_t;355,16242
#define snd_seq_query_subscribe_alloca(359,16381
typedef struct _snd_seq_queue_info snd_seq_queue_info_t;396,18354
typedef struct _snd_seq_queue_status snd_seq_queue_status_t;398,18441
typedef struct _snd_seq_queue_tempo snd_seq_queue_tempo_t;400,18531
typedef struct _snd_seq_queue_timer snd_seq_queue_timer_t;402,18631
#define SND_SEQ_QUEUE_DIRECT	405,18716
#define snd_seq_queue_info_alloca(409,18874
#define snd_seq_queue_status_alloca(441,20517
#define snd_seq_queue_tempo_alloca(459,21438
	SND_SEQ_TIMER_ALSA 483,22666
	SND_SEQ_TIMER_MIDI_CLOCK 484,22709
	SND_SEQ_TIMER_MIDI_TICK 485,22771
} snd_seq_queue_timer_type_t;486,22834
#define snd_seq_queue_timer_alloca(490,22966
typedef struct _snd_seq_remove_events snd_seq_remove_events_t;533,24994
#define SND_SEQ_REMOVE_INPUT	536,25090
#define SND_SEQ_REMOVE_OUTPUT	537,25154
#define SND_SEQ_REMOVE_DEST	538,25220
#define SND_SEQ_REMOVE_DEST_CHANNEL	539,25302
#define SND_SEQ_REMOVE_TIME_BEFORE	540,25373
#define SND_SEQ_REMOVE_TIME_AFTER	541,25447
#define SND_SEQ_REMOVE_TIME_TICK	542,25522
#define SND_SEQ_REMOVE_EVENT_TYPE	543,25587
#define SND_SEQ_REMOVE_IGNORE_OFF 544,25659
#define SND_SEQ_REMOVE_TAG_MATCH 545,25733
#define snd_seq_remove_events_alloca(549,25922
	SND_SEQ_EVFLG_RESULT,599,27971
	SND_SEQ_EVFLG_NOTE,600,27994
	SND_SEQ_EVFLG_CONTROL,601,28015
	SND_SEQ_EVFLG_QUEUE,602,28039
	SND_SEQ_EVFLG_SYSTEM,603,28061
	SND_SEQ_EVFLG_MESSAGE,604,28084
	SND_SEQ_EVFLG_CONNECTION,605,28108
	SND_SEQ_EVFLG_SAMPLE,606,28135
	SND_SEQ_EVFLG_USERS,607,28158
	SND_SEQ_EVFLG_INSTR,608,28180
	SND_SEQ_EVFLG_QUOTE,609,28202
	SND_SEQ_EVFLG_NONE,610,28224
	SND_SEQ_EVFLG_RAW,611,28245
	SND_SEQ_EVFLG_FIXED,612,28265
	SND_SEQ_EVFLG_VARIABLE,613,28287
	SND_SEQ_EVFLG_VARUSR614,28312
	SND_SEQ_EVFLG_NOTE_ONEARG,618,28345
	SND_SEQ_EVFLG_NOTE_TWOARG619,28373
	SND_SEQ_EVFLG_QUEUE_NOARG,623,28411
	SND_SEQ_EVFLG_QUEUE_TICK,624,28439
	SND_SEQ_EVFLG_QUEUE_TIME,625,28466
	SND_SEQ_EVFLG_QUEUE_VALUE626,28493
#define _SND_SEQ_TYPE(636,28662
#define _SND_SEQ_TYPE_OPT(637,28724
#define snd_seq_type_check(640,28821
#define snd_seq_ev_is_result_type(643,28947
#define snd_seq_ev_is_note_type(646,29070
#define snd_seq_ev_is_control_type(649,29192
#define snd_seq_ev_is_channel_type(652,29329
#define snd_seq_ev_is_queue_type(656,29529
#define snd_seq_ev_is_message_type(659,29661
#define snd_seq_ev_is_subscribe_type(662,29797
#define snd_seq_ev_is_sample_type(665,29931
#define snd_seq_ev_is_user_type(668,30064
#define snd_seq_ev_is_instr_type(671,30196
#define snd_seq_ev_is_fixed_type(674,30325
#define snd_seq_ev_is_variable_type(677,30457
#define snd_seq_ev_is_varusr_type(680,30592
#define snd_seq_ev_is_reserved(683,30723
#define snd_seq_ev_is_prior(690,30857
#define snd_seq_ev_length_type(694,30990
#define snd_seq_ev_is_fixed(697,31097
#define snd_seq_ev_is_variable(700,31221
#define snd_seq_ev_is_varusr(703,31358
#define snd_seq_ev_timestamp_type(707,31478
#define snd_seq_ev_is_tick(710,31588
#define snd_seq_ev_is_real(713,31710
#define snd_seq_ev_timemode_type(717,31826
#define snd_seq_ev_is_abstime(720,31939
#define snd_seq_ev_is_reltime(723,32066
#define snd_seq_ev_is_direct(727,32192

install/include/alsa/pcm_external.h,158
#define __ALSA_PCM_EXTERNAL_H27,955
#define SND_PCM_PLUGIN_ENTRY(43,1169
#define SND_PCM_PLUGIN_SYMBOL(48,1292
#define SND_PCM_PLUGIN_DEFINE_FUNC(53,1434

install/include/alsa/error.h,393
#define __ALSA_ERROR_H29,1095
#define SND_ERROR_BEGIN	41,1251
#define SND_ERROR_INCOMPATIBLE_VERSION	42,1332
#define SND_ERROR_ALISP_NIL	43,1445
typedef void (*snd_lib_error_handler_t)snd_lib_error_handler_t59,2004
#define SNDERR(64,2349
#define SYSERR(65,2470
#define SNDERR(67,2624
#define SYSERR(68,2744
typedef void (*snd_local_error_handler_t)snd_local_error_handler_t78,2980

install/include/alsa/iatomic.h,1195
#define __ALSA_IATOMIC_H2,25
#define mb(5,67
#define rmb(6,142
#define wmb(7,161
#define IATOMIC_DEFINED	8,214
#define mb(12,268
#define rmb(13,316
#define wmb(14,364
#define IATOMIC_DEFINED	15,412
#define mb(41,1472
#define rmb(42,1526
#define wmb(43,1545
#define IATOMIC_DEFINED	45,1565
#define mb(51,1634
#define rmb(54,1690
#define wmb(57,1747
#define IATOMIC_DEFINED	60,1805
#define mb(82,2627
#define rmb(83,2686
#define wmb(84,2746
#define IATOMIC_DEFINED	86,2808
#define mb(94,2947
#define rmb(95,2981
#define wmb(96,3000
#define IATOMIC_DEFINED	98,3020
#define MAX_SPIN_COUNT 111,3348
#define SPIN_SLEEP_DURATION 121,3672
	unsigned int begin,125,3733
	unsigned int begin, end;125,3733
} snd_atomic_write_t;126,3759
	volatile const snd_atomic_write_t *write;write129,3799
	unsigned int end;130,3842
} snd_atomic_read_t;131,3861
static __inline__ void snd_atomic_write_init(135,3933
static __inline__ void snd_atomic_write_begin(141,4034
static __inline__ void snd_atomic_write_end(147,4129
static __inline__ void snd_atomic_read_init(153,4220
static __inline__ void snd_atomic_read_begin(158,4329
static __inline__ int snd_atomic_read_ok(164,4434

install/include/alsa/timer.h,3117
#define __ALSA_TIMER_H29,1095
#define SND_TIMER_DLSYM_VERSION	42,1320
#define SND_TIMER_QUERY_DLSYM_VERSION	44,1420
typedef struct _snd_timer_id snd_timer_id_t;47,1520
typedef struct _snd_timer_ginfo snd_timer_ginfo_t;49,1600
typedef struct _snd_timer_gparams snd_timer_gparams_t;51,1688
typedef struct _snd_timer_gstatus snd_timer_gstatus_t;53,1780
typedef struct _snd_timer_info snd_timer_info_t;55,1863
typedef struct _snd_timer_params snd_timer_params_t;57,1942
typedef struct _snd_timer_status snd_timer_status_t;59,2025
typedef enum _snd_timer_class 61,2104
	SND_TIMER_CLASS_NONE 62,2136
	SND_TIMER_CLASS_SLAVE 63,2180
	SND_TIMER_CLASS_GLOBAL,64,2228
	SND_TIMER_CLASS_CARD,65,2275
	SND_TIMER_CLASS_PCM,66,2318
	SND_TIMER_CLASS_LAST 67,2359
	SND_TIMER_CLASS_LAST = SND_TIMER_CLASS_PCM	67,2359
} snd_timer_class_t;68,2422
typedef enum _snd_timer_slave_class 71,2469
	SND_TIMER_SCLASS_NONE 72,2507
	SND_TIMER_SCLASS_APPLICATION,73,2549
	SND_TIMER_SCLASS_SEQUENCER,74,2606
	SND_TIMER_SCLASS_OSS_SEQUENCER,75,2660
	SND_TIMER_SCLASS_LAST 76,2722
	SND_TIMER_SCLASS_LAST = SND_TIMER_SCLASS_OSS_SEQUENCER	76,2722
} snd_timer_slave_class_t;77,2803
typedef enum _snd_timer_event 80,2870
	SND_TIMER_EVENT_RESOLUTION 81,2902
	SND_TIMER_EVENT_TICK,82,2964
	SND_TIMER_EVENT_START,83,3006
	SND_TIMER_EVENT_STOP,84,3060
	SND_TIMER_EVENT_CONTINUE,85,3098
	SND_TIMER_EVENT_PAUSE,86,3154
	SND_TIMER_EVENT_EARLY,87,3193
	SND_TIMER_EVENT_SUSPEND,88,3232
	SND_TIMER_EVENT_RESUME,89,3272
	SND_TIMER_EVENT_MSTART 91,3380
	SND_TIMER_EVENT_MSTART = SND_TIMER_EVENT_START 91,3380
	SND_TIMER_EVENT_MSTOP 92,3434
	SND_TIMER_EVENT_MSTOP = SND_TIMER_EVENT_STOP 92,3434
	SND_TIMER_EVENT_MCONTINUE 93,3486
	SND_TIMER_EVENT_MCONTINUE = SND_TIMER_EVENT_CONTINUE 93,3486
	SND_TIMER_EVENT_MPAUSE 94,3546
	SND_TIMER_EVENT_MPAUSE = SND_TIMER_EVENT_PAUSE 94,3546
	SND_TIMER_EVENT_MSUSPEND 95,3600
	SND_TIMER_EVENT_MSUSPEND = SND_TIMER_EVENT_SUSPEND 95,3600
	SND_TIMER_EVENT_MRESUME 96,3658
	SND_TIMER_EVENT_MRESUME = SND_TIMER_EVENT_RESUME 96,3658
} snd_timer_event_t;97,3714
typedef struct _snd_timer_read 100,3764
	unsigned int resolution;101,3797
        unsigned int ticks;102,3862
} snd_timer_read_t;103,3923
typedef struct _snd_timer_tread 106,3987
	snd_timer_event_t event;107,4021
	snd_htimestamp_t tstamp;108,4067
	unsigned int val;109,4126
} snd_timer_tread_t;110,4166
#define SND_TIMER_GLOBAL_SYSTEM 113,4217
#define SND_TIMER_GLOBAL_RTC 115,4277
#define SND_TIMER_GLOBAL_HPET	117,4336
#define SND_TIMER_GLOBAL_HRTIMER 119,4398
#define SND_TIMER_OPEN_NONBLOCK	122,4487
#define SND_TIMER_OPEN_TREAD	124,4588
typedef enum _snd_timer_type 127,4651
	SND_TIMER_TYPE_HW 129,4709
	SND_TIMER_TYPE_SHM,131,4790
	SND_TIMER_TYPE_INET133,4859
} snd_timer_type_t;134,4880
typedef struct _snd_timer_query snd_timer_query_t;137,4927
typedef struct _snd_timer snd_timer_t;139,4998
#define snd_timer_id_alloca(169,6804
#define snd_timer_ginfo_alloca(187,7689
#define snd_timer_info_alloca(205,8687
#define snd_timer_params_alloca(218,9320
#define snd_timer_status_alloca(238,10566

install/include/alsa/mixer_abst.h,1736
#define __ALSA_MIXER_ABST_H27,1045
#define	SM_PLAY	39,1230
#define SM_CAPT	40,1250
#define SM_CAP_GVOLUME	42,1271
#define SM_CAP_GSWITCH	43,1302
#define SM_CAP_PVOLUME	44,1333
#define SM_CAP_PVOLUME_JOIN	45,1364
#define SM_CAP_PSWITCH	46,1399
#define SM_CAP_PSWITCH_JOIN	47,1431
#define SM_CAP_CVOLUME	48,1467
#define SM_CAP_CVOLUME_JOIN	49,1499
#define SM_CAP_CSWITCH	50,1535
#define SM_CAP_CSWITCH_JOIN	51,1567
#define SM_CAP_CSWITCH_EXCL	52,1603
#define SM_CAP_PENUM	53,1639
#define SM_CAP_CENUM	54,1669
#define SM_OPS_IS_ACTIVE	57,1747
#define SM_OPS_IS_MONO	58,1774
#define SM_OPS_IS_CHANNEL	59,1800
#define SM_OPS_IS_ENUMERATED	60,1828
#define SM_OPS_IS_ENUMCNT	61,1859
#define sm_selem(63,1888
#define sm_selem_ops(64,1945
typedef struct _sm_selem 66,2012
	snd_mixer_selem_id_t *id;id67,2039
	struct sm_elem_ops *ops;ops68,2066
	unsigned int caps;69,2092
	unsigned int capture_group;70,2112
} sm_selem_t;71,2141
typedef struct _sm_class_basic 73,2156
	char *device;device74,2189
	snd_ctl_t *ctl;ctl75,2204
	snd_hctl_t *hctl;hctl76,2221
	snd_ctl_card_info_t *info;info77,2240
} sm_class_basic_t;78,2268
struct sm_elem_ops 80,2289
	int (*is)is81,2311
	int (*get_range)get_range82,2374
	int (*set_range)set_range83,2448
	int (*get_dB_range)get_dB_range84,2520
	int (*ask_vol_dB)ask_vol_dB85,2597
	int (*ask_dB_vol)ask_dB_vol86,2677
	int (*get_volume)get_volume87,2767
	int (*get_dB)get_dB88,2871
	int (*set_volume)set_volume89,2971
	int (*set_dB)set_dB90,3074
	int (*get_switch)get_switch91,3183
	int (*set_switch)set_switch92,3286
	int (*enum_item_name)enum_item_name93,3388
	int (*get_enum_item)get_enum_item94,3481
	int (*set_enum_item)set_enum_item95,3587

install/include/alsa/asoundef.h,10327
#define __ALSA_ASOUNDEF_H29,1096
#define IEC958_AES0_PROFESSIONAL	41,1289
#define IEC958_AES0_NONAUDIO	42,1368
#define IEC958_AES0_PRO_EMPHASIS	43,1438
#define IEC958_AES0_PRO_EMPHASIS_NOTID	44,1502
#define IEC958_AES0_PRO_EMPHASIS_NONE	45,1579
#define IEC958_AES0_PRO_EMPHASIS_5015	46,1644
#define IEC958_AES0_PRO_EMPHASIS_CCITT	47,1714
#define IEC958_AES0_PRO_FREQ_UNLOCKED	48,1788
#define IEC958_AES0_PRO_FS	49,1891
#define IEC958_AES0_PRO_FS_NOTID	50,1958
#define IEC958_AES0_PRO_FS_44100	51,2023
#define IEC958_AES0_PRO_FS_48000	52,2079
#define IEC958_AES0_PRO_FS_32000	53,2133
#define IEC958_AES0_CON_NOT_COPYRIGHT	54,2187
#define IEC958_AES0_CON_EMPHASIS	55,2273
#define IEC958_AES0_CON_EMPHASIS_NONE	56,2337
#define IEC958_AES0_CON_EMPHASIS_5015	57,2402
#define IEC958_AES0_CON_MODE	58,2472
#define IEC958_AES1_PRO_MODE	59,2529
#define IEC958_AES1_PRO_MODE_NOTID	60,2595
#define IEC958_AES1_PRO_MODE_STEREOPHONIC 61,2664
#define IEC958_AES1_PRO_MODE_SINGLE	62,2749
#define IEC958_AES1_PRO_MODE_TWO	63,2815
#define IEC958_AES1_PRO_MODE_PRIMARY	64,2876
#define IEC958_AES1_PRO_MODE_BYTE3	65,2947
#define IEC958_AES1_PRO_USERBITS	66,3015
#define IEC958_AES1_PRO_USERBITS_NOTID	67,3081
#define IEC958_AES1_PRO_USERBITS_192	68,3159
#define IEC958_AES1_PRO_USERBITS_UDEF	69,3229
#define IEC958_AES1_CON_CATEGORY	70,3308
#define IEC958_AES1_CON_GENERAL	71,3372
#define IEC958_AES1_CON_LASEROPT_MASK	72,3435
#define IEC958_AES1_CON_LASEROPT_ID	73,3505
#define IEC958_AES1_CON_IEC908_CD	74,3571
#define IEC958_AES1_CON_NON_IEC908_CD	75,3676
#define IEC958_AES1_CON_MINI_DISC	76,3789
#define IEC958_AES1_CON_DVD	77,3883
#define IEC958_AES1_CON_LASTEROPT_OTHER	78,3966
#define IEC958_AES1_CON_DIGDIGCONV_MASK 79,4077
#define IEC958_AES1_CON_DIGDIGCONV_ID	80,4163
#define IEC958_AES1_CON_PCM_CODER	81,4245
#define IEC958_AES1_CON_MIXER	82,4334
#define IEC958_AES1_CON_RATE_CONVERTER	83,4431
#define IEC958_AES1_CON_SAMPLER	84,4530
#define IEC958_AES1_CON_DSP	85,4620
#define IEC958_AES1_CON_DIGDIGCONV_OTHER 86,4718
#define IEC958_AES1_CON_MAGNETIC_MASK	87,4836
#define IEC958_AES1_CON_MAGNETIC_ID	88,4908
#define IEC958_AES1_CON_DAT	89,4976
#define IEC958_AES1_CON_VCR	90,5067
#define IEC958_AES1_CON_DCC	91,5154
#define IEC958_AES1_CON_MAGNETIC_DISC	92,5251
#define IEC958_AES1_CON_MAGNETIC_OTHER	93,5367
#define IEC958_AES1_CON_BROADCAST1_MASK 94,5471
#define IEC958_AES1_CON_BROADCAST1_ID	95,5539
#define IEC958_AES1_CON_DAB_JAPAN	96,5603
#define IEC958_AES1_CON_DAB_EUROPE	97,5714
#define IEC958_AES1_CON_DAB_USA	98,5827
#define IEC958_AES1_CON_SOFTWARE	99,5935
#define IEC958_AES1_CON_IEC62105	100,6042
#define IEC958_AES1_CON_BROADCAST1_OTHER 101,6157
#define IEC958_AES1_CON_BROADCAST2_MASK 102,6267
#define IEC958_AES1_CON_BROADCAST2_ID	103,6347
#define IEC958_AES1_CON_MUSICAL_MASK	104,6423
#define IEC958_AES1_CON_MUSICAL_ID	105,6493
#define IEC958_AES1_CON_SYNTHESIZER	106,6559
#define IEC958_AES1_CON_MICROPHONE	107,6649
#define IEC958_AES1_CON_MUSICAL_OTHER	108,6737
#define IEC958_AES1_CON_ADC_MASK	109,6838
#define IEC958_AES1_CON_ADC_ID	110,6893
#define IEC958_AES1_CON_ADC	111,6945
#define IEC958_AES1_CON_ADC_OTHER	112,7046
#define IEC958_AES1_CON_ADC_COPYRIGHT_MASK 113,7168
#define IEC958_AES1_CON_ADC_COPYRIGHT_ID 114,7243
#define IEC958_AES1_CON_ADC_COPYRIGHT	115,7314
#define IEC958_AES1_CON_ADC_COPYRIGHT_OTHER 116,7431
#define IEC958_AES1_CON_SOLIDMEM_MASK	117,7568
#define IEC958_AES1_CON_SOLIDMEM_ID	118,7652
#define IEC958_AES1_CON_SOLIDMEM_DIGITAL_RECORDER_PLAYER 119,7732
#define IEC958_AES1_CON_SOLIDMEM_OTHER	120,7891
#define IEC958_AES1_CON_EXPERIMENTAL	121,8012
#define IEC958_AES1_CON_ORIGINAL	122,8084
#define IEC958_AES2_PRO_SBITS	123,8171
#define IEC958_AES2_PRO_SBITS_20	124,8236
#define IEC958_AES2_PRO_SBITS_24	125,8306
#define IEC958_AES2_PRO_SBITS_UDEF	126,8374
#define IEC958_AES2_PRO_WORDLEN	127,8449
#define IEC958_AES2_PRO_WORDLEN_NOTID	128,8523
#define IEC958_AES2_PRO_WORDLEN_22_18	129,8609
#define IEC958_AES2_PRO_WORDLEN_23_19	130,8679
#define IEC958_AES2_PRO_WORDLEN_24_20	131,8749
#define IEC958_AES2_PRO_WORDLEN_20_16	132,8819
#define IEC958_AES2_CON_SOURCE	133,8889
#define IEC958_AES2_CON_SOURCE_UNSPEC	134,8958
#define IEC958_AES2_CON_CHANNEL	135,9037
#define IEC958_AES2_CON_CHANNEL_UNSPEC	136,9108
#define IEC958_AES3_CON_FS	137,9189
#define IEC958_AES3_CON_FS_44100	138,9257
#define IEC958_AES3_CON_FS_NOTID	139,9313
#define IEC958_AES3_CON_FS_48000	140,9392
#define IEC958_AES3_CON_FS_32000	141,9446
#define IEC958_AES3_CON_FS_22050	142,9500
#define IEC958_AES3_CON_FS_24000	143,9557
#define IEC958_AES3_CON_FS_88200	144,9611
#define IEC958_AES3_CON_FS_768000	145,9667
#define IEC958_AES3_CON_FS_96000	146,9723
#define IEC958_AES3_CON_FS_176400	147,9778
#define IEC958_AES3_CON_FS_192000	148,9837
#define IEC958_AES3_CON_CLOCK	149,9894
#define IEC958_AES3_CON_CLOCK_1000PPM	150,9962
#define IEC958_AES3_CON_CLOCK_50PPM	151,10024
#define IEC958_AES3_CON_CLOCK_VARIABLE	152,10082
#define IEC958_AES4_CON_MAX_WORDLEN_24	153,10151
#define IEC958_AES4_CON_WORDLEN	154,10228
#define IEC958_AES4_CON_WORDLEN_NOTID	155,10302
#define IEC958_AES4_CON_WORDLEN_20_16	156,10369
#define IEC958_AES4_CON_WORDLEN_22_18	157,10439
#define IEC958_AES4_CON_WORDLEN_23_19	158,10509
#define IEC958_AES4_CON_WORDLEN_24_20	159,10579
#define IEC958_AES4_CON_WORDLEN_21_17	160,10649
#define IEC958_AES4_CON_ORIGFS	161,10719
#define IEC958_AES4_CON_ORIGFS_NOTID	162,10800
#define IEC958_AES4_CON_ORIGFS_192000	163,10892
#define IEC958_AES4_CON_ORIGFS_12000	164,10952
#define IEC958_AES4_CON_ORIGFS_176400	165,11010
#define IEC958_AES4_CON_ORIGFS_96000	166,11072
#define IEC958_AES4_CON_ORIGFS_8000	167,11130
#define IEC958_AES4_CON_ORIGFS_88200	168,11186
#define IEC958_AES4_CON_ORIGFS_16000	169,11246
#define IEC958_AES4_CON_ORIGFS_24000	170,11304
#define IEC958_AES4_CON_ORIGFS_11025	171,11362
#define IEC958_AES4_CON_ORIGFS_22050	172,11425
#define IEC958_AES4_CON_ORIGFS_32000	173,11487
#define IEC958_AES4_CON_ORIGFS_48000	174,11546
#define IEC958_AES4_CON_ORIGFS_44100	175,11605
#define IEC958_AES5_CON_CGMSA	176,11666
#define IEC958_AES5_CON_CGMSA_COPYFREELY 177,11726
#define IEC958_AES5_CON_CGMSA_COPYONCE	178,11823
#define IEC958_AES5_CON_CGMSA_COPYNOMORE 179,11914
#define IEC958_AES5_CON_CGMSA_COPYNEVER	180,11992
#define MIDI_CHANNELS	190,12178
#define MIDI_GM_DRUM_CHANNEL	191,12248
#define MIDI_CMD_NOTE_OFF	199,12402
#define MIDI_CMD_NOTE_ON	200,12451
#define MIDI_CMD_NOTE_PRESSURE	201,12498
#define MIDI_CMD_CONTROL	202,12556
#define MIDI_CMD_PGM_CHANGE	203,12610
#define MIDI_CMD_CHANNEL_PRESSURE	204,12667
#define MIDI_CMD_BENDER	205,12731
#define MIDI_CMD_COMMON_SYSEX	207,12784
#define MIDI_CMD_COMMON_MTC_QUARTER	208,12859
#define MIDI_CMD_COMMON_SONG_POS	209,12926
#define MIDI_CMD_COMMON_SONG_SELECT	210,12986
#define MIDI_CMD_COMMON_TUNE_REQUEST	211,13047
#define MIDI_CMD_COMMON_SYSEX_END	212,13110
#define MIDI_CMD_COMMON_CLOCK	213,13170
#define MIDI_CMD_COMMON_START	214,13220
#define MIDI_CMD_COMMON_CONTINUE	215,13270
#define MIDI_CMD_COMMON_STOP	216,13325
#define MIDI_CMD_COMMON_SENSING	217,13373
#define MIDI_CMD_COMMON_RESET	218,13434
#define MIDI_CTL_MSB_BANK	228,13586
#define MIDI_CTL_MSB_MODWHEEL 229,13641
#define MIDI_CTL_MSB_BREATH 230,13704
#define MIDI_CTL_MSB_FOOT 231,13763
#define MIDI_CTL_MSB_PORTAMENTO_TIME 232,13820
#define MIDI_CTL_MSB_DATA_ENTRY	233,13887
#define MIDI_CTL_MSB_MAIN_VOLUME 234,13944
#define MIDI_CTL_MSB_BALANCE 235,14008
#define MIDI_CTL_MSB_PAN 236,14068
#define MIDI_CTL_MSB_EXPRESSION 237,14127
#define MIDI_CTL_MSB_EFFECT1	238,14190
#define MIDI_CTL_MSB_EFFECT2	239,14241
#define MIDI_CTL_MSB_GENERAL_PURPOSE1 240,14292
#define MIDI_CTL_MSB_GENERAL_PURPOSE2 241,14362
#define MIDI_CTL_MSB_GENERAL_PURPOSE3 242,14432
#define MIDI_CTL_MSB_GENERAL_PURPOSE4 243,14502
#define MIDI_CTL_LSB_BANK	244,14572
#define MIDI_CTL_LSB_MODWHEEL 245,14627
#define MIDI_CTL_LSB_BREATH 246,14689
#define MIDI_CTL_LSB_FOOT 247,14748
#define MIDI_CTL_LSB_PORTAMENTO_TIME 248,14805
#define MIDI_CTL_LSB_DATA_ENTRY	249,14872
#define MIDI_CTL_LSB_MAIN_VOLUME 250,14929
#define MIDI_CTL_LSB_BALANCE 251,14993
#define MIDI_CTL_LSB_PAN 252,15053
#define MIDI_CTL_LSB_EXPRESSION 253,15112
#define MIDI_CTL_LSB_EFFECT1	254,15175
#define MIDI_CTL_LSB_EFFECT2	255,15226
#define MIDI_CTL_LSB_GENERAL_PURPOSE1 256,15277
#define MIDI_CTL_LSB_GENERAL_PURPOSE2 257,15347
#define MIDI_CTL_LSB_GENERAL_PURPOSE3 258,15417
#define MIDI_CTL_LSB_GENERAL_PURPOSE4 259,15487
#define MIDI_CTL_SUSTAIN 260,15557
#define MIDI_CTL_PORTAMENTO 261,15623
#define MIDI_CTL_SOSTENUTO 262,15686
#define MIDI_CTL_SUSTENUTO 263,15748
#define MIDI_CTL_SOFT_PEDAL 264,15840
#define MIDI_CTL_LEGATO_FOOTSWITCH	265,15903
#define MIDI_CTL_HOLD2 266,15970
#define MIDI_CTL_SC1_SOUND_VARIATION	267,16028
#define MIDI_CTL_SC2_TIMBRE	268,16098
#define MIDI_CTL_SC3_RELEASE_TIME	269,16151
#define MIDI_CTL_SC4_ATTACK_TIME	270,16215
#define MIDI_CTL_SC5_BRIGHTNESS	271,16277
#define MIDI_CTL_SC6	272,16338
#define MIDI_CTL_SC7	273,16378
#define MIDI_CTL_SC8	274,16418
#define MIDI_CTL_SC9	275,16458
#define MIDI_CTL_SC10	276,16498
#define MIDI_CTL_GENERAL_PURPOSE5 277,16540
#define MIDI_CTL_GENERAL_PURPOSE6 278,16610
#define MIDI_CTL_GENERAL_PURPOSE7 279,16680
#define MIDI_CTL_GENERAL_PURPOSE8 280,16750
#define MIDI_CTL_PORTAMENTO_CONTROL	281,16820
#define MIDI_CTL_E1_REVERB_DEPTH	282,16888
#define MIDI_CTL_E2_TREMOLO_DEPTH	283,16950
#define MIDI_CTL_E3_CHORUS_DEPTH	284,17014
#define MIDI_CTL_E4_DETUNE_DEPTH	285,17076
#define MIDI_CTL_E5_PHASER_DEPTH	286,17138
#define MIDI_CTL_DATA_INCREMENT 287,17200
#define MIDI_CTL_DATA_DECREMENT 288,17267
#define MIDI_CTL_NONREG_PARM_NUM_LSB 289,17334
#define MIDI_CTL_NONREG_PARM_NUM_MSB 290,17418
#define MIDI_CTL_REGIST_PARM_NUM_LSB 291,17502
#define MIDI_CTL_REGIST_PARM_NUM_MSB	292,17582
#define MIDI_CTL_ALL_SOUNDS_OFF	293,17660
#define MIDI_CTL_RESET_CONTROLLERS	294,17721
#define MIDI_CTL_LOCAL_CONTROL_SWITCH	295,17787
#define MIDI_CTL_ALL_NOTES_OFF	296,17859
#define MIDI_CTL_OMNI_OFF	297,17918
#define MIDI_CTL_OMNI_ON	298,17967
#define MIDI_CTL_MONO1	299,18014
#define MIDI_CTL_MONO2	300,18058

install/include/sys/asoundlib.h,0

install/include/alsa/pcm_old.h,0

alsa-lib-1.0.29/include/pcm_old.h,0

alsa-lib-1.0.29/include/sys.h,0

alsa-lib-1.0.29/include/asoundlib-tail.h,0

alsa-utils-1.0.29/amixer/amixer.h,0
